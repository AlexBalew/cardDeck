{"version":3,"sources":["assets/password/viewPassword.png","assets/password/hiddenPassword.png","common/elements/button/SuperButton.tsx","api/api.ts","api/login-api.ts","api/password-api.ts","features/password/password-reducer.ts","features/profile/profile-reducer.ts","app/app-reducer.ts","features/login/login-reducer.ts","features/login/login.tsx","assets/profile/userDefaultImg.png","assets/preloader/Eclipse200px.gif","common/components/preloader/Preloader.tsx","common/elements/input/SuperInput.tsx","common/elements/editableSpan/SuperEditableSpan.tsx","features/profile/profile.tsx","features/password/newPassword.tsx","assets/profile/cards.png","assets/profile/user.png","common/components/header/header.tsx","features/password/successfulRequestMessage.tsx","features/password/changePassword.tsx","api/registration-api.ts","features/registration/registration-reducer.ts","api/cards-api.ts","features/cards/cards-reducer.ts","api/packs-api.ts","features/cardPacks/cardPacks-reducer.ts","bll/store.ts","common/components/modal/deleteModal/deleteModal.tsx","common/components/modal/updatePackTitleModal/updatePackTitleModal.tsx","common/components/modal/learningPage/learningPageModal.tsx","features/cardPacks/table.tsx","common/components/pagination/pagination.tsx","common/elements/doubleRange/DoubleRange.tsx","common/elements/select/SuperSelect.tsx","common/components/selectPage/SelectPage.tsx","common/components/modal/addNewPack/TitleModal.tsx","features/cardPacks/cardPacksPage.tsx","features/password/passwordRestore.tsx","common/components/modalWindows/cardsModal/DeleteModal.tsx","common/components/modalWindows/cardsModal/UpdateModal.tsx","features/cards/card/Card.tsx","common/components/sortArrow/SortArrow.tsx","common/components/modalWindows/cardsModal/CreateModal.tsx","features/cards/Cards.tsx","common/components/error404/error404.tsx","app/Routes.tsx","features/registration/registration.tsx","app/unauthorizedRoutes.tsx","app/App.tsx","reportWebVitals.ts","index.tsx","common/components/modalWindows/cardsModal/Modal.module.css","features/login/login.module.css","features/cards/Cards.module.css","common/components/error404/error404.module.css","features/password/passwordRestore.module.css","common/components/modal/Modal.module.css","features/registration/registration.module.css","common/components/header/header.module.css","features/cards/card/Card.module.css","features/cardPacks/cardPacksPage.module.css","features/cardPacks/table.module.css","common/components/modal/learningPage/learningPageModal.module.css","common/components/pagination/pagination.module.css","features/profile/profile.module.css","common/elements/input/SuperInputText.module.css","common/elements/doubleRange/DoubleRange.module.css","common/elements/button/SuperButton.module.css","common/components/preloader/Preloader.module.css","common/elements/select/SuperSelect.module.css","common/components/sortArrow/SortArrow.module.css","common/elements/editableSpan/SuperEditableSpan.module.css","common/components/selectPage/SelectPage.module.css"],"names":["SuperButton","React","memo","red","className","restProps","finalClassName","s","button","default","instance","axios","create","baseURL","withCredentials","loginAPI","post","delete","email","password","rememberMe","then","res","data","userData","put","restoreAPI","eMail","from","message","newPassword","token","resetPasswordToken","initState","isSuccessfulRequest","error","setRequestResultAC","type","setErrorAC","sendCurrentEmailTC","dispatch","a","setAppStatusAC","response","console","log","_id","name","avatar","setProfileData","initialState","status","isLoggedIn","isLoggedInAC","Login","useDispatch","useSelector","state","login","useState","setEmail","setPassword","setRememberMe","showPassword","setShowPassword","passwordType","setPasswordTypeType","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","handleSubmit","payload","loginTC","handlerBlur","e","currentTarget","value","useEffect","to","PATH","PROFILE","loginContainer","formBlock","content","fromBlockTitle","formContent","errorStyle","formInputBox","formInput","onChange","test","String","toLowerCase","onBlur","currentPasswordValue","length","onKeyPress","key","inputPasswordView","src","viewPassword","hiddenPassword","alt","onClick","id","checkbox","htmlFor","formButtonBlock","btn","disabled","textBlock","formBlockText","RESTORE_PASSWORD","formLink","REGISTRATION","Preloader","loading","preloader","SuperInput","onChangeText","onEnter","spanClassName","ref","finalSpanClassName","finalInputClassName","superInput","errorInput","inputField","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","children","onDoubleClick","restSpanProps","spanStyle","Profile","app","profile","myName","setMyName","undefined","myAvatar","setMyAvatar","location","useLocation","pathname","Promise","all","setUserDataHandler","updatedUser","profileContainer","profileBlock","profileAvatar","userDefaultImg","profileName","LOGIN","NewPassword","requestStatus","appStatus","useParams","setValue","mainContainer","formContainer","inputGroup","input","placeholder","style","border","setNewPasswordTC","Header","headerContainer","title","navContainer","PACKS_LIST","navLink","navLinkContext","CardsImg","cardsImg","UserImg","useImg","SuccessfulRequestMessage","width","ChangePassword","registApi","isRegistry","backError","cardsAPI","cardsPack_id","pageCount","page","cardQuestion","cardAnswer","sortCards","get","question","answer","card","updateCard","packName","cards","packUserId","cardsTotalCount","minGrade","maxGrade","tokenDeathTime","activeModal","getCards","packId","getState","currentPage","packsOnPage","setCardsAC","catch","packsAPI","user_id","searchedName","settingSliderMin","settingSliderMax","params","cardsPack","grade","cardId","card_id","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","settingSlider","min","max","setCardPacksDataAC","setCurrentPageAC","getPacksTC","packs","pageNumber","myId","request","rootReducer","combineReducers","action","registration","filter","cardPack","minSliderCards","maxSliderCards","store","createStore","applyMiddleware","thunk","useAppSelector","window","DeleteModal","isOpen","onClose","onDelete","ReactDOM","createPortal","modalContainer","modal","stopPropagation","modalBtnClose","document","body","UpdatePackTitleModal","onEdit","newName","setNewName","modalInput","grades","getCard","sum","reduce","acc","rand","Math","random","i","newSum","LearningPageModal","isChecked","setIsChecked","isGraded","setIsGraded","first","setFirst","comments","created","more_id","rating","shots","updated","__v","setCard","setGradeHandler","textContent","setGradeTC","noCards","learnQuestion","btnContainer","map","CardPacksTable","open","setOpen","openT","setOpenT","openL","setOpenL","table","tableHead","index","tableBody","pack","dataRow","CARDS","backlinkName","cardsCount","user_name","newPackName","Pagination","numberOfPagesInOnePortion","onPageChange","portionNumber","setPortionNumber","inputPage","setInputPage","totalAmountOfPages","ceil","pages","push","numberOfPortions","currentPortion","leftPortionPageNumber","rightPortionPageNumber","onSetNewPage","pagination","selectedPage","marginLeft","marginRight","onSetNewPageByButton","SuperDoubleRange","value1","value2","value3","setValue1","setValue2","setValue3","searchTimer","setTimeout","clearTimeout","Box","sx","height","Slider","step","size","event","newValue","activeThumb","Array","isArray","color","disableSwap","orientation","SuperSelect","options","onChangeOption","mappedOptions","option","currentValue","select","SelectPage","onChangeOptions","description","selectPage","TitleModal","onClickNewName","CardPacksPage","searchName","setSearchName","setSearchedNameAC","container","filterContainer","doubleRangeBlock","choose","span","packsContainer","addNewPackInput","search","addNewPackButton","selectPagination","setPageCountAC","PasswordRestore","svg","href","viewBox","d","DeleteCardModal","props","setShowModal","modalContent","allButton","modalBtn","UpdateCardModal","setQuestion","setAnswer","inputModal","required","Card","isUsersPack","showDeleteModal","setShowDeleteModal","showUpdateModal","setShowUpdateModal","showModal","cardContainer","SortArrow","sortValue","arrowSort","setArrowSort","onClickHandler","ratingArrow","CreateModal","CreateCardHandler","createCards","onPressEnterAdd","Cards","authUserId","navigate","useNavigate","searchValue","setSearchValue","searchCards","setGetRequestParams","useCallback","requestParams","param","cardsContainer","backLink","arrowBack","searchBlock","searchForm","searchBtn","addCard","cardsTable","cardsHeader","infoItem","gradeTitle","el","footer","selector","Error404","background","target","topHeader","starSec","starThird","starFourth","starFifth","lampWrap","lamp","cable","cover","inCover","bulb","light","errorContent","errorMessage","messageTitle","messageText","errorNav","eNavLink","CHANGE_PASSWORD","NEW_PASSWORD_WITH_TOKEN","TEST","NOT_FOUND","CardDeckRoutes","path","element","Registration","confirm","setConfirm","setType","isPasswordEqual","setIsPasswordEqual","handleShowPassword","handlePasswordsMatch","form","onSubmit","preventDefault","registryTC","display","marginTop","passwordControl","CardDeckRoutesUnauthorized","App","position","top","backgroundColor","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1c378a38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/viewPassword.0b5c67b9.png\";","export default __webpack_public_path__ + \"static/media/hiddenPassword.a81cfb08.png\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n})\r\n\r\nexport default SuperButton\r\n","import axios from 'axios'\r\n\r\n//const BaseURLs ='http://localhost:7542/2.0/'\r\nconst BaseURLs = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL: BaseURLs,\r\n    withCredentials: true,\r\n})\r\n\r\n","import {instance} from \"./api\";\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\nexport type LoginUserType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n\r\n}\r\n\r\nexport interface IUserData {\r\n    name?: string\r\n    avatar?: string\r\n}\r\n\r\nexport const loginAPI = {\r\n    authMe() {\r\n        return instance.post<LoginResponseType>('/auth/me', {}, {})\r\n    },\r\n    logOut() {\r\n        return instance.delete<{ info: string, error: string }>('/auth/me', {})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>(`/auth/login`, {email, password, rememberMe}, {})\r\n            .then(res => res.data)\r\n    },\r\n    changeData(userData: IUserData) {\r\n        return instance.put('auth/me', userData)\r\n    },\r\n}\r\n","import {instance} from \"./api\";\r\n\r\nexport const restoreAPI = {\r\n    forgot(eMail: string) {\r\n        return instance.post<{ info: string, error: string }>('/auth/forgot', {\r\n            email: eMail,\r\n            from: `test-front-admin <${eMail}>`,\r\n            message: `<div style=\"background-color: #C7A5A5; padding: 50px; text-decoration: #3F51B5\">password recovery link: <a href='http://localhost:3000/#/new-password/$token$'>Change password</a></div>`\r\n        }, {})\r\n    },\r\n    newPassword(newPassword: string, token: string) {\r\n        return instance.post<{ info: string, error: string }>('/auth/set-new-password', {\r\n            password: newPassword,\r\n            resetPasswordToken: token\r\n        }, {})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {restoreAPI} from \"../../api/password-api\";\r\nimport {Nullable} from \"../../types\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\n\r\ntype stateType = {\r\n    isSuccessfulRequest: boolean\r\n    error: Nullable<string>\r\n}\r\n\r\nlet initState: stateType = {\r\n    isSuccessfulRequest: false,\r\n    error: null\r\n}\r\n\r\n\r\nexport const restorePassReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case 'restore/SET_SUCCESSFUL_REQUEST' : {\r\n            return {...state, isSuccessfulRequest: action.isSuccessfulRequest}\r\n        }\r\n        case 'restore/SET_ERROR' : {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype AllACType = restorePassACType | setErrorACType | setAppStatusACType\r\n\r\ntype restorePassACType = ReturnType<typeof setRequestResultAC>\r\n\r\nexport const setRequestResultAC = (isSuccessfulRequest: boolean) => {\r\n    return {\r\n        type: 'restore/SET_SUCCESSFUL_REQUEST',\r\n        isSuccessfulRequest\r\n    } as const\r\n}\r\n\r\nexport type setErrorACType = ReturnType<typeof setErrorAC>\r\n\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: 'restore/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\n\r\nexport const sendCurrentEmailTC = (email: string) => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await restoreAPI.forgot(email)\r\n        dispatch(setRequestResultAC(true))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n}\r\n\r\nexport const setNewPasswordTC = (newPassword: string, token: string) => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await restoreAPI.newPassword(newPassword, token)\r\n        dispatch(setRequestResultAC(true))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {loginAPI, LoginResponseType, IUserData} from \"../../api/login-api\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\nimport {setErrorAC, setErrorACType} from \"../password/password-reducer\";\r\n\r\n\r\nexport type UserDataType = {\r\n    _id: string,\r\n    email: null | string,\r\n    name: string,\r\n    avatar: string,\r\n}\r\n\r\nconst initState = {\r\n    _id: '',\r\n    email: null,\r\n    name: '',\r\n    avatar: '',\r\n}\r\n\r\nexport const profileReducer = (state: UserDataType = initState, action: AllACType): UserDataType => {\r\n    switch (action.type) {\r\n        case 'profileReducer/SET_USER_DATA' :\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case \"profileReducer/SET_PROFILE_DATA\": {\r\n            return {\r\n                ...state,\r\n                _id: action.data._id,\r\n                email: action.data.email,\r\n                name: action.data.name,\r\n                avatar: action.data.avatar ? action.data.avatar : '',\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type setUserDataACType = ReturnType<typeof setUserData>\r\nexport type setProfileDataACType = ReturnType<typeof setProfileData>\r\ntype AllACType = setUserDataACType | setAppStatusACType | setErrorACType | setProfileDataACType\r\n\r\n//* Action Creator ---------------------------------------------------------------->\r\nexport const setUserData = (data: UserDataType) => ({type: 'profileReducer/SET_USER_DATA', data} as const)\r\nexport const setProfileData = (data: LoginResponseType) => ({type: 'profileReducer/SET_PROFILE_DATA', data} as const )\r\n//* Thunk Creator ---------------------------------------------------------------->\r\nexport const changeUserData = (userData: IUserData): AppThunkType => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await loginAPI.changeData(userData)\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n        dispatch(setUserData(response.data.updatedUser))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../api/login-api\";\r\nimport {setErrorAC} from \"../features/password/password-reducer\";\r\nimport {isLoggedInAC} from \"../features/login/login-reducer\";\r\nimport {setProfileData} from \"../features/profile/profile-reducer\";\r\n\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type InitialStateType = {\r\n    status: RequestStatusType\r\n    _id: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    _id: ''\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET_STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET_USER_ID':\r\n            return {...state, _id: action.id}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionsType = setAppStatusACType | setUsersIDACType\r\nexport type setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\nexport type setUsersIDACType = ReturnType<typeof setUsersIDAC>\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: 'APP/SET_STATUS',\r\n        status\r\n    } as const\r\n}\r\n\r\nexport const setUsersIDAC = (id: string) => {\r\n    return {\r\n        type: 'APP/SET_USER_ID',\r\n        id\r\n    } as const\r\n}\r\n\r\n\r\n\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await loginAPI.authMe()\r\n        dispatch(isLoggedInAC(true))\r\n        dispatch(setUsersIDAC(response.data._id))\r\n        dispatch(setProfileData(response.data))\r\n        await Promise.all([response])\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n        return response\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(isLoggedInAC(false))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\nimport {setErrorAC, setErrorACType} from \"../password/password-reducer\";\r\nimport {loginAPI, LoginResponseType} from \"../../api/login-api\";\r\nimport {Nullable} from \"../../types\";\r\nimport {setProfileData, setProfileDataACType} from \"../profile/profile-reducer\";\r\n\r\nexport type stateType = {\r\n    isLoggedIn: boolean\r\n    _id: string\r\n    email: Nullable<string>\r\n    name: Nullable<string>\r\n    avatar?: string\r\n}\r\n\r\nlet initState: stateType = {\r\n    isLoggedIn: false,\r\n    _id: '',\r\n    email: null,\r\n    name: null,\r\n    avatar: '',\r\n}\r\n\r\nexport const loginReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_IS_LOGGED_IN' : {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case 'login/LOG_IN' : {\r\n            return {\r\n                ...state,\r\n                name: action.payload.name,\r\n                avatar: action.payload.avatar,\r\n                email: action.payload.email,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype AllACType =\r\n    isLoggedInACType\r\n    | setAppStatusACType\r\n    | setErrorACType\r\n    | logInACType\r\n    | setProfileDataACType\r\n\r\ntype isLoggedInACType = ReturnType<typeof isLoggedInAC>\r\ntype logInACType = ReturnType<typeof logInAC>\r\n\r\nexport const isLoggedInAC = (isLoggedIn: boolean) => {\r\n    return {\r\n        type: 'login/SET_IS_LOGGED_IN',\r\n        isLoggedIn\r\n    } as const\r\n}\r\n\r\nexport const logInAC = (payload: LoginResponseType, isLoggedIn: boolean) => {\r\n    return {\r\n        type: 'login/LOG_IN',\r\n        payload,\r\n        isLoggedIn\r\n    } as const\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): AppThunkType => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await loginAPI.login(email, password, rememberMe)\r\n        dispatch(setProfileData(response))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n        dispatch(logInAC(response, true))\r\n    } catch (e: any) {\r\n\r\n\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    }\r\n\r\n}\r\n\r\nexport const logOutTC = () => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await loginAPI.logOut()\r\n        dispatch(isLoggedInAC(false))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    }\r\n\r\n}\r\n\r\n","import React, {ChangeEvent, FormEvent, KeyboardEvent, useEffect, useState} from \"react\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport s from \"./login.module.css\"\r\nimport viewPassword from \"../../assets/password/viewPassword.png\"\r\nimport hiddenPassword from \"../../assets/password/hiddenPassword.png\"\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"./login-reducer\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {PATH} from \"../../app/Routes\";\r\n\r\n\r\n\r\n\r\nexport const Login = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppStateType, boolean>((state) => state.login.isLoggedIn);\r\n\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n    const [passwordType, setPasswordTypeType] = useState('password');\r\n\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n    //отражает состоняие были мы внутри инпута или нет\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    const handlerBlur = (e: FormEvent<HTMLInputElement>) => {\r\n        switch (e.currentTarget.value) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const onPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') handleSubmit();\r\n    }\r\n    const handleInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        const re = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        if( re.test(String(e.currentTarget.value).toLowerCase())) {\r\n            setEmailError('')\r\n        } else {\r\n            setEmailError('Invalid email address')\r\n        }\r\n    }\r\n    const handleInputPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let currentPasswordValue = e.currentTarget.value\r\n        setPassword(currentPasswordValue)\r\n        if(currentPasswordValue.length < 7)  {\r\n            setPasswordError('Password must be more than 6 character')\r\n        } else {\r\n            setPasswordError('')\r\n        }\r\n    }\r\n    const handleCheckbox = () => {\r\n       setRememberMe(!rememberMe)\r\n    }\r\n    const handleShowPassword = () => {\r\n        if (showPassword) {\r\n            setPasswordTypeType('text')\r\n        } else {\r\n            setPasswordTypeType('password')\r\n        }\r\n        setShowPassword(!showPassword)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n       if (emailError || passwordError) {\r\n           setFormValid(false)\r\n       } else {\r\n           setFormValid(true)\r\n       }\r\n    }, [emailError, passwordError])\r\n\r\n\r\n\r\n    if (isLoggedIn) {\r\n      return <Navigate to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginContainer}>\r\n            <div className={s.formBlock}>\r\n                <div className={s.content}>\r\n                    <h3 className={s.fromBlockTitle}>It-incubator</h3>\r\n\r\n                    <div className={s.formContent}>\r\n                        <label>{(emailDirty || emailError) ? <div className={s.errorStyle}>{emailError}</div> : 'Email'}</label>\r\n                        <div className={s.formInputBox}>\r\n                            <input name=\"email\"\r\n                                   value={email}\r\n                                   type=\"email\"\r\n                                   className={s.formInput}\r\n                                   onChange={handleInputEmail}\r\n                                   onBlur={handlerBlur}\r\n                            />\r\n                        </div>\r\n\r\n                        <label> {(passwordDirty || passwordError) ? <div className={s.errorStyle}> {passwordError}</div> : \"Password\" } </label>\r\n                        <div className={s.formInputBox}>\r\n                            {/*{(passwordDirty || passwordError) && <div style={{color: 'red', marginBottom: '5px', fontSize: '12px'}}>{passwordError}</div>}*/}\r\n                            <input name=\"password\"\r\n                                   value={password}\r\n                                   type={passwordType}\r\n                                   className={s.formInput}\r\n                                   onChange={handleInputPassword}\r\n                                   onBlur={handlerBlur}\r\n                                   onKeyPress={onPressEnter}\r\n                            />\r\n                            <img className={s.inputPasswordView}\r\n                                 src={showPassword ? viewPassword : hiddenPassword}\r\n                                 alt=\"eye\"\r\n                                 onClick={handleShowPassword}/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"check\" className={s.checkbox}\r\n                                   onChange={handleCheckbox}/>\r\n                            <label htmlFor=\"check\" >Remember</label>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.formButtonBlock}>\r\n\r\n                            <SuperButton\r\n                                         className={s.btn}\r\n                                         disabled={!formValid}\r\n                                         onClick={handleSubmit}\r\n                            >LOGIN</SuperButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.textBlock}>\r\n                        <div>\r\n                            <span className={s.formBlockText}>Forgot password?</span>\r\n                            <NavLink to={PATH.RESTORE_PASSWORD} className={s.formLink}>Click Here</NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <span className={s.formBlockText}>Don't have an account</span>\r\n                            <NavLink to={PATH.REGISTRATION} className={s.formLink}>Sign up</NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/userDefaultImg.61b34c78.png\";","export default __webpack_public_path__ + \"static/media/Eclipse200px.e181d854.gif\";","import s from \"./Preloader.module.css\";\r\nimport preloader from '../../../assets/preloader/Eclipse200px.gif'\r\nimport React from \"react\";\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.loading}>\r\n            <img className={s.preloader} src={preloader} alt={'preloader'}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperInputTextPropsType> = React.memo((\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, ref,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.inputField} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                ref={ref}\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default SuperInput\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInput from '../input/SuperInput'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = React.memo((\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.spanStyle} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInput\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        {...restProps}/>)\r\n                    // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                 : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n                        {...restSpanProps}>\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>)\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from \"./profile.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Navigate, useLocation} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/Routes\";\r\nimport userDefaultImg from \"../../assets/profile/userDefaultImg.png\"\r\nimport Preloader from \"../../common/components/preloader/Preloader\";\r\nimport {initializeAppTC, RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperEditableSpan from \"../../common/elements/editableSpan/SuperEditableSpan\";\r\nimport {changeUserData} from \"./profile-reducer\";\r\n\r\nexport const Profile = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const name = useSelector<AppStateType, string>(state => state.profile.name)\r\n    const avatar = useSelector<AppStateType, string>(state => state.profile.avatar)\r\n    const email = useSelector<AppStateType, string | null>(state => state.profile.email)\r\n\r\n    const [myName, setMyName] = useState('')\r\n    const [myAvatar, setMyAvatar] = useState<string | undefined>(undefined)\r\n\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        if(location.pathname === '/profile') {\r\n            dispatch(initializeAppTC())\r\n        }\r\n    }, [location])\r\n\r\n    useEffect(() => {\r\n        setMyName(name)\r\n        if (avatar) {\r\n            setMyAvatar(avatar)\r\n        }\r\n\r\n    }, [name, avatar])\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const changeNameHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyName(e.currentTarget.value)\r\n    }\r\n    const setUserDataHandler = () => {\r\n        dispatch(changeUserData({name: myName, avatar: myAvatar}))\r\n    }\r\n    const changeImageHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyAvatar(e.currentTarget.value)\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileContainer}>\r\n            <div className={s.profileBlock}>\r\n                <div className={s.content}>\r\n                    <div className={s.profileAvatar}>\r\n                        <img src={avatar ? avatar : userDefaultImg} alt=\"ava\"/>\r\n                    </div>\r\n                    <label>Change image <input type=\"text\"\r\n                                               onChange={changeImageHandler}\r\n                                               onBlur={setUserDataHandler}/></label>\r\n                    {/*<div className={s.profileName}>{myName}</div>*/}\r\n                    <SuperEditableSpan className={s.profileName}\r\n                                       value={myName}\r\n                                       onChange={changeNameHandle}\r\n                                       onBlur={setUserDataHandler}/>\r\n                    <div>{email ? email : \"email not write\"}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});","import React, {ChangeEvent, useState} from \"react\";\r\nimport {setNewPasswordTC} from \"./password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"./passwordRestore.module.css\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\n\r\n\r\nexport const NewPassword = React.memo(() => {\r\n\r\n    let dispatch = useDispatch()\r\n    let requestStatus = useSelector<AppStateType, boolean>(state => state.password.isSuccessfulRequest)\r\n    let appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const {token} = useParams<'token'>();\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onSetNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        setValue(value)\r\n    }\r\n\r\n    const onSendNewPassword = () => {\r\n        dispatch(setNewPasswordTC(value, token!))\r\n    }\r\n\r\n    if (requestStatus && !isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    } else if (requestStatus && isLoggedIn) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n                Set new password, please\r\n                <div className={s.inputGroup}>\r\n                    <div className={s.input}>\r\n                        <SuperInput type='password'\r\n                                    name='newPassword'\r\n                                    placeholder='new password'\r\n                                    onChange={onSetNewPassword}\r\n                                    style={{border: '1px solid black'}}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <SuperButton name='sendCurrentEmail'\r\n                                     onClick={onSendNewPassword}\r\n                                     disabled={appStatus === 'loading'}\r\n                        >Send\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/cards.cf21112c.png\";","export default __webpack_public_path__ + \"static/media/user.73011e17.png\";","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './header.module.css'\r\nimport {PATH} from \"../../../app/Routes\";\r\nimport CardsImg from '../../../assets/profile/cards.png'\r\nimport UserImg from '../../../assets/profile/user.png'\r\n\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className={s.headerContainer}>\r\n            <div className={s.title}>\r\n                <b>It-incubator</b>\r\n            </div>\r\n            <div className={s.navContainer}>\r\n                <NavLink to={PATH.PACKS_LIST} className={s.navLink}>\r\n                    <div className={s.navLinkContext}>\r\n                        <img src={CardsImg} className={s.cardsImg}/>\r\n                        <span>Packs list</span>\r\n                    </div>\r\n                </NavLink>\r\n\r\n\r\n                <NavLink to={PATH.PROFILE} className={s.navLink}>\r\n                    <div className={s.navLinkContext}>\r\n                        <img src={UserImg} className={s.useImg}/>\r\n                        <span>Profile</span>\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport s from \"./passwordRestore.module.css\";\r\n\r\nexport const SuccessfulRequestMessage = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n\r\n                <img src='https://icon-library.com/images/e-mail-icon-png/e-mail-icon-png-28.jpg' style={{width: '200px'}} alt='letter'/>\r\n                <div>\r\n                    Check E-mail\r\n                </div>\r\n                <div>\r\n                    We've sent a letter with instructions on your e-mail\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './passwordRestore.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {SuccessfulRequestMessage} from \"./successfulRequestMessage\";\r\nimport {sendCurrentEmailTC} from \"./password-reducer\";\r\nimport {Nullable} from \"../../types\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\n\r\n\r\nexport const ChangePassword = React.memo(() => {\r\n\r\n    let dispatch = useDispatch()\r\n    let requestStatus = useSelector<AppStateType, boolean>(state => state.password.isSuccessfulRequest)\r\n    let error = useSelector<AppStateType, Nullable<string>>(state => state.password.error)\r\n    let appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onSetCurrentEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        setValue(value)\r\n    }\r\n    const onSendCurrentEmail = () => {\r\n        dispatch(sendCurrentEmailTC(value))\r\n    }\r\n\r\n    if (requestStatus) {\r\n        return <SuccessfulRequestMessage/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n                <div>\r\n                    Enter your email below and follow the further instructions\r\n                </div>\r\n                <div>\r\n                    <SuperInput type='email'\r\n                           name='currentEmail'\r\n                           placeholder='your e-mail'\r\n                           onChange={onSetCurrentEmail}\r\n                           style={{border: '1px solid black'}}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                            onClick={onSendCurrentEmail}\r\n                            disabled={appStatus === 'loading'}\r\n                    >Send\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {instance} from \"./api\";\r\n\r\nexport const registApi = {\r\n    register(email: string, password: string) {\r\n        return instance.post<{addedUser: {}, error?: string}>(`auth/register`, {email, password}, {})\r\n    }\r\n}","import {AppStateType} from \"../../bll/store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {registApi} from \"../../api/registration-api\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\n\r\ntype InitStateType = typeof initState;\r\n\r\nconst initState = {\r\n    isRegistry: false,\r\n    backError: ''\r\n};\r\n\r\n\r\nexport const registrationReducer = (state = initState, action: AllACType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'registry/REGISTRATED':\r\n            return {...state, isRegistry: true}\r\n        case 'registry/BACKEND-ERROR':\r\n            return {...state, backError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\ntype AllACType =\r\n    | ReturnType<typeof registrated>\r\n    | ReturnType<typeof setErrorAC>\r\n    | setAppStatusACType\r\n\r\nconst registrated = () => ({type: 'registry/REGISTRATED'} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'registry/BACKEND-ERROR', error} as const)\r\n\r\n\r\nexport const registryTC = (email: string, password: string) => async (dispatch: ThunkDispatch<AppStateType, unknown, AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await registApi.register(email, password)\r\n        dispatch(registrated())\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    }\r\n}","import {instance} from \"./api\";\r\n\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, pageCount: number = 5, page: number = 1, cardQuestion: string,  cardAnswer: string, sortCards: string) {\r\n        return instance.get<CardsResponseType>\r\n        (`cards/card?cardsPack_id=${cardsPack_id}&pageCount=${pageCount}&page=${page}&max=5&cardQuestion=${cardQuestion}&cardAnswer=${cardAnswer}&sortCards=${sortCards}`)\r\n    },\r\n    createCard(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post<CardsResponseType>\r\n        (`cards/card`, { card: {cardsPack_id, question, answer}})\r\n    },\r\n    deleteCard(cardsPack_id: string) {\r\n        return instance.delete<CardsResponseType>\r\n        (`cards/card?id=${cardsPack_id}`)\r\n    },\r\n    updateCard(updateCard: updateCardType) {\r\n        return instance.put<CardsResponseType>\r\n        (`cards/card`, {card: updateCard})\r\n    },\r\n    /*updateGrade(grade: number, card_id: string) {\r\n        return instance.put<updateGradeResponseType>('cards/grade', {grade, card_id})\r\n    }*/\r\n}\r\n\r\n//* types --------------------------------------------------------->\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type NewCardType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\ntype updateCardType = {\r\n    _id: string,\r\n    question?: string,\r\n    answer?: string\r\n}\r\n\r\n\r\nexport type RequestParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id?: string\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n    min?: string\r\n    max?: string\r\n}\r\n\r\n/*\r\nexport type updateGradeResponseType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}*/\r\n","import {CardType, cardsAPI, RequestParamsType} from \"../../api/cards-api\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {setAppStatusAC} from \"../../app/app-reducer\";\r\n\r\n\r\n\r\ntype stateType = typeof initState\r\n\r\nconst initState = {\r\n    packName: '',\r\n    cards: [] as CardType[],\r\n    packUserId: '',\r\n    page: 1,\r\n    pageCount: 10,\r\n    cardsTotalCount: 0,\r\n    minGrade: 0,\r\n    maxGrade: 0,\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    activeModal: false,\r\n    cardAnswer: '',\r\n    cardQuestion: '',\r\n    sortCards: '',\r\n}\r\n\r\n\r\nexport const cardsReducer = (state: stateType = initState, action: AllActionsType): stateType => {\r\n    switch (action.type) {\r\n        case 'cardsReducer/SET_CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'cardsReducer/SET_PAGE_COUNT' : {\r\n            return {...state, pageCount: action.pageCount}\r\n        }\r\n        case 'cardsReducer/SEARCH_CARDS' : {\r\n            return {...state, cardQuestion: action.cardQuestion}\r\n        }\r\n        case 'cardsReducer/SET_GET_REQUEST_PARAMS':\r\n            return {...state, ...action.payload}\r\n        case 'cardsReducer/SET_PACK_USER_ID':\r\n            return {...state, packUserId: action.packUserId}\r\n        case 'cardsReducer/SET_PACK_NAME':\r\n            return {...state, packName: action.packName}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype setCardsACType = ReturnType<typeof setCardsAC>\r\ntype setPageCountACType = ReturnType<typeof setPageCountAC>\r\ntype setSearchedQuestionACType = ReturnType<typeof setSearchedQuestionAC>\r\ntype setGetRequestParamsACType = ReturnType<typeof setGetRequestParamsAC>\r\ntype setPackUserIdACType = ReturnType<typeof setPackUserIdAC>\r\ntype setPackNameACType = ReturnType<typeof setPackNameAC>\r\n\r\n\r\ntype AllActionsType = setCardsACType | setPageCountACType | setSearchedQuestionACType\r\n    | setGetRequestParamsACType | setPackUserIdACType | setPackNameACType\r\n\r\n\r\n//* Action Creators --------------------------------------------------------->\r\nexport const setCardsAC = (cards: Array<CardType>) => ({type: 'cardsReducer/SET_CARDS', cards} as const)\r\nexport const setPageCountAC = (pageCount: number) =>( {type: 'cardsReducer/SET_PAGE_COUNT', pageCount} as const)\r\nexport const setSearchedQuestionAC = (cardQuestion: string) => ({type: 'cardsReducer/SEARCH_CARDS', cardQuestion } as const)\r\nexport const setGetRequestParamsAC = (payload:  RequestParamsType) => ({type: 'cardsReducer/SET_GET_REQUEST_PARAMS', payload} as const)\r\nexport const setPackUserIdAC = (packUserId: string) => ({type: 'cardsReducer/SET_PACK_USER_ID', packUserId} as const)\r\nexport const setPackNameAC = (packName: string ) => ({type: 'cardsReducer/SET_PACK_NAME', packName} as const)\r\n\r\n//* Thunk Creators --------------------------------------------------------->\r\n\r\nexport const getCards = (packId: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n\r\n        const cards = getState().cards\r\n\r\n        const currentPage = cards.page\r\n        const packsOnPage = cards.pageCount\r\n        const cardQuestion = cards.cardQuestion\r\n        const cardAnswer = cards.cardAnswer\r\n        const sortCards = cards.sortCards\r\n\r\n\r\n        cardsAPI.getCards(packId, packsOnPage, currentPage, cardQuestion, cardAnswer, sortCards)\r\n            .then(response => {\r\n                dispatch(setPackUserIdAC(response.data.packUserId))\r\n                dispatch(setCardsAC(response.data.cards))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n\r\n    }\r\n\r\nexport const createCards = (cardsPack_id: string, question: string, answer: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n\r\n        const cards = getState().cards\r\n        /*const newCard: NewCardType = {cardsPack_id, question, answer}*/\r\n        cardsAPI.createCard(cardsPack_id, question, answer)\r\n            .then(response => {\r\n                dispatch(getCards(cardsPack_id))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n    }\r\n\r\nexport const deleteCard = (cardId: string, packId: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n\r\n        const cards = getState().cards\r\n\r\n        cardsAPI.deleteCard(cardId)\r\n            .then(response => {\r\n                dispatch(getCards(packId))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n    }\r\n\r\nexport const updateCard = (cardsPack_id: string, cardId: string, question: string, answer: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        const cards = getState().cards\r\n        const updateCard = {_id: cardId, question, answer}\r\n       return cardsAPI.updateCard(updateCard)\r\n            .then(response => {\r\n                dispatch(getCards(cardsPack_id))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n                return true\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n                return false\r\n            })\r\n    }\r\n\r\n/*\r\nexport const gradeCardUpdate = (id: string, grade: number): AppThunkType =>\r\n    (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    cardsAPI.updateGrade(grade, id)\r\n        .then(() => {\r\n            dispatch(getCards('100'))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            return false\r\n        })\r\n}*/\r\n","import {instance} from \"./api\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    user_name: string\r\n}\r\n\r\nexport type GetPacksResponseType = {\r\n    cardPacks: CardPackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\n   /* ?pageCount=${pageCount}&page=${page}&user_id=${user_id}*/\r\n\r\nexport const packsAPI = {\r\n    getPacks(pageCount: number, page: number, user_id?: string, searchedName?: string, /*settingSlider?:{min: number, max: number},*/ settingSliderMin?: number, settingSliderMax?: number) {\r\n            return instance.get<GetPacksResponseType>(`/cards/pack?min=${settingSliderMin}&max=${settingSliderMax}&packName=${searchedName}`,\r\n                {params: {pageCount, page, user_id,}})\r\n    },\r\n    createPack(name: string) {\r\n        return instance.post<GetPacksResponseType>(`/cards/pack`, {cardsPack: {name}}, {})\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete<GetPacksResponseType>(`/cards/pack?id=${id}`, {})\r\n    },\r\n    updatePack(_id: string, name?: string) {\r\n        return instance.put<GetPacksResponseType>(`/cards/pack`, {cardsPack: {_id, name}}, {})\r\n    },\r\n    sendGrade(grade: number, cardId: string) {\r\n        return instance.put<GetPacksResponseType>(`/cards/grade`, {grade, card_id: cardId}, {})\r\n    }\r\n}","import {setAppStatusAC} from \"../../app/app-reducer\";\r\nimport {GetPacksResponseType, packsAPI} from \"../../api/packs-api\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {isLoggedInAC} from \"../login/login-reducer\";\r\n\r\nexport type SettingType = { settingSlider: { min: number; max: number } }\r\nexport type SearchedNameType = { searchedName: string }\r\n\r\n\r\ntype stateType = GetPacksResponseType & SettingType & SearchedNameType\r\n\r\nlet initState: stateType = {\r\n    cardPacks: [/*{\r\n        _id: '',\r\n        user_id: '',\r\n        name: '',\r\n        cardsCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        user_name: '',\r\n    }*/],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    settingSlider: {\r\n        min: 0,\r\n        max: 103\r\n    },\r\n    searchedName: '',\r\n}\r\n\r\nexport const cardPacksReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case 'cardPacks/GET_CARD_PACKS' : {\r\n            return {...state, ...action.data}\r\n        }\r\n        case 'cardPacks/SET_PAGE_COUNT' : {\r\n            return {...state, pageCount: action.payload}\r\n        }\r\n        case 'cardPacks/SET_MIN_CARDS_COUNT' : {\r\n            return {...state, minCardsCount: action.payload}\r\n        }\r\n        case 'cardPacks/SET_MAX_CARDS_COUNT' : {\r\n            return {...state, maxCardsCount: action.payload}\r\n        }\r\n        case 'cardPacks/SET_CURRENT_PAGE' : {\r\n            return {...state, page: action.payload}\r\n        }\r\n        case 'cardPacks/DELETE_PACK' : {\r\n            return {...state, cardPacks: state.cardPacks.filter(cardPack => cardPack._id !== action.payload)}\r\n        }\r\n        case 'cardPacks/SEARCH_NAME' : {\r\n            return {...state, searchedName: action.payload}\r\n        }\r\n        case 'cardPacks/SET_CARDS_COUNT' : {\r\n            return {...state, settingSlider: {min: action.payload.minSliderCards, max: action.payload.maxSliderCards}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setCardPacksDataAC = (data: GetPacksResponseType) => {\r\n    return {\r\n        type: 'cardPacks/GET_CARD_PACKS',\r\n        data\r\n    } as const\r\n}\r\n\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: 'cardPacks/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\nexport const setMinCardsCountAC = (minCardsCount: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_MIN_CARDS_COUNT',\r\n        payload: minCardsCount\r\n    } as const\r\n}\r\n\r\nexport const setMaxCardsCountAC = (maxCardsCount: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_MAX_CARDS_COUNT',\r\n        payload: maxCardsCount\r\n    } as const\r\n}\r\n\r\nexport const setCurrentPageAC = (page: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_CURRENT_PAGE',\r\n        payload: page\r\n    } as const\r\n}\r\n\r\nexport const setPageCountAC = (pageCount: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_PAGE_COUNT',\r\n        payload: pageCount\r\n    } as const\r\n}\r\n\r\nexport const deletePackAC = (id: string) => {\r\n    return {\r\n        type: 'cardPacks/DELETE_PACK',\r\n        payload: id\r\n    } as const\r\n}\r\n\r\nexport const setSearchedNameAC = (searchName: string) => {\r\n    return {\r\n        type: 'cardPacks/SEARCH_NAME',\r\n        payload: searchName\r\n    } as const\r\n}\r\n\r\n\r\nexport const setCardsCountAC = (minSliderCards: number, maxSliderCards: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_CARDS_COUNT',\r\n        payload: {minSliderCards, maxSliderCards}\r\n    } as const\r\n}\r\n\r\n\r\nexport const getPacksTC = (params?: { myId?: string, page?: number, min?: number, max?: number }): AppThunkType => async (dispatch, getState) => { //затипизировать везде\r\n    let {pageCount, page, searchedName, settingSlider} = getState().packs\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        const pageNumber = params?.page ? params.page : page\r\n        let settingSliderMin = params?.min ? params?.min : settingSlider.min\r\n        let settingSliderMax = params?.max ? params?.max : settingSlider.max\r\n        let response = await packsAPI.getPacks(pageCount, pageNumber, params?.myId, searchedName, /*settingSlider,*/ settingSliderMin, settingSliderMax)\r\n        dispatch(setCardPacksDataAC(response.data))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n         if(e.response.request.status === 401) {\r\n         dispatch(isLoggedInAC(false))\r\n         }\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n}\r\n\r\nexport const createPackTC = (name: string): AppThunkType => async (dispatch) => { //затипизировать везде\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await packsAPI.createPack(name)\r\n        dispatch(setCardPacksDataAC(response.data))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } finally {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n}\r\n\r\nexport const deletePackTC = (id: string): AppThunkType => async (dispatch) => { //затипизировать везде\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await packsAPI.deletePack(id)\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } finally {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n}\r\n\r\nexport const updatePackTC = (id: string, name?: string): AppThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await packsAPI.updatePack(id, name)\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } finally {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n}\r\nexport const setGradeTC = (grade: number, cardId: string): AppThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await packsAPI.sendGrade(grade, cardId)\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } finally {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n}\r\n\r\n\r\ntype AllACType =\r\n    ReturnType<typeof setCardPacksDataAC> |\r\n    ReturnType<typeof setAppStatusAC> |\r\n    ReturnType<typeof setErrorAC> |\r\n    ReturnType<typeof setPageCountAC> |\r\n    ReturnType<typeof setMinCardsCountAC> |\r\n    ReturnType<typeof setMaxCardsCountAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof deletePackAC> |\r\n    ReturnType<typeof setSearchedNameAC> |\r\n    ReturnType<typeof setCardsCountAC>\r\n\r\n\r\n","import {AnyAction, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {restorePassReducer} from \"../features/password/password-reducer\";\r\nimport {loginReducer} from \"../features/login/login-reducer\";\r\nimport {profileReducer} from \"../features/profile/profile-reducer\";\r\nimport {registrationReducer} from \"../features/registration/registration-reducer\";\r\nimport {appReducer} from \"../app/app-reducer\";\r\nimport {cardsReducer} from \"../features/cards/cards-reducer\";\r\nimport {cardPacksReducer} from \"../features/cardPacks/cardPacks-reducer\";\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    password: restorePassReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    app: appReducer,\r\n    cards: cardsReducer,\r\n    packs: cardPacksReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector\r\n\r\n//* Common thunk type\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AnyAction>\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport s from '../Modal.module.css'\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\n\r\ntype ModalPropsType = {\r\n    message: string\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    packId?: string\r\n    onDelete: () => void\r\n}\r\n\r\nexport const DeleteModal = ({message, isOpen, onClose,onDelete}: ModalPropsType) => {\r\n\r\n    if (!isOpen) return null;\r\n    console.log('delete modal is rendered')\r\n    return ReactDOM.createPortal(\r\n        <div className={s.modalContainer} onClick={onClose}>\r\n            <div className={s.modal} onClick={(e) => {\r\n                e.stopPropagation()\r\n            }}>\r\n                <h2>{message}</h2>\r\n                <div>\r\n                    <SuperButton className={s.modalBtnClose} onClick={onClose}>Close</SuperButton>\r\n                </div>\r\n                <SuperButton onClick={onDelete}>Delete</SuperButton>\r\n                <SuperButton onClick={onClose}\r\n                >Not now</SuperButton>\r\n            </div>\r\n        </div>\r\n        , document.body);\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport s from '../Modal.module.css'\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\nimport SuperInput from \"../../../elements/input/SuperInput\";\r\n\r\ntype ModalPropsType = {\r\n    message: string\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    onEdit: (newName?: string) => void\r\n}\r\n\r\nexport const UpdatePackTitleModal = ({message, isOpen, onClose, onEdit}: ModalPropsType) => {\r\n\r\n    const [newName, setNewName] = useState<string>('') //add new pack input state\r\n\r\n    const onSetNewName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newName = e.currentTarget.value\r\n        setNewName(newName)\r\n    }\r\n\r\n    if (!isOpen) return null;\r\n    console.log('update modal is rendered')\r\n    return ReactDOM.createPortal(\r\n        <div className={s.modalContainer} onClick={onClose}>\r\n            <div className={s.modal} onClick={(e) => {\r\n                e.stopPropagation()\r\n            }}>\r\n                <h2>{message}</h2>\r\n                <div>\r\n                    <SuperButton className={s.modalBtnClose} onClick={onClose}>Close</SuperButton>\r\n                </div>\r\n                <SuperInput className={s.modalInput}\r\n                            onChange={onSetNewName}\r\n                            value={newName}\r\n                            placeholder={'insert title here'}\r\n                            autoFocus/>\r\n                <SuperButton onClick={() => {\r\n                    onEdit(newName)\r\n                }}>add new pack's title</SuperButton>\r\n            </div>\r\n        </div>\r\n        , document.body);\r\n}\r\n\r\n","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\nimport {CardType} from \"../../../../api/cards-api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useAppSelector} from \"../../../../bll/store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport s from './learningPageModal.module.css'\r\nimport {getCards} from \"../../../../features/cards/cards-reducer\";\r\nimport {setGradeTC} from \"../../../../features/cardPacks/cardPacks-reducer\";\r\n\r\ntype ModalPropsType = {\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    packId?: string\r\n}\r\n\r\nconst grades = ['Did not know', 'Forgot', 'A lot of thought ', 'Сonfused', 'Knew the answer'];\r\nconst getCard = (cards: CardType[]) => {\r\n\r\n    //const weight = [/*0, 1, 2,*/ 3, 4, /*5, 6*/]\r\n    /*const cardWeight = cards.map(card => 6 - card.grade)\r\n    console.log('cardWeight: ', cardWeight)\r\n    const n = Math.floor(Math.random() * 10);\r\n\r\n    for (let i = 0; i < cardWeight.length; i++) {\r\n        if (n < cardWeight[i]) {\r\n            console.log('card: ', cards[i])\r\n            return cards[i];\r\n        }\r\n    }*/\r\n\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n    return cards[res.id + 1];\r\n}\r\n\r\n\r\nexport const LearningPageModal = ({isOpen, onClose, packId}: ModalPropsType) => {\r\n\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [isGraded, setIsGraded] = useState(false)\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const cards = useAppSelector<CardType[]>(state => state.cards.cards);\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        answer: '',\r\n        cardsPack_id: '',\r\n        comments: '',\r\n        created: '',\r\n        grade: 0,\r\n        more_id: '',\r\n        question: '',\r\n        rating: 0,\r\n        shots: 0,\r\n        type: '',\r\n        updated: '',\r\n        user_id: '',\r\n        __v: 0,\r\n        _id: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (first) {\r\n            dispatch(getCards(packId!));\r\n            setFirst(false);\r\n        }\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards)!)\r\n        }\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, packId, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsGraded(false)\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards)!);\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    const setGradeHandler = (e: FormEvent<HTMLButtonElement>) => {\r\n        setIsGraded(true)\r\n        let grade = 0\r\n        if (e.currentTarget.textContent === grades[0]) {\r\n            grade = 1\r\n        }\r\n        if (e.currentTarget.textContent === grades[1]) {\r\n            grade = 2\r\n        }\r\n        if (e.currentTarget.textContent === grades[2]) {\r\n            grade = 3\r\n        }\r\n        if (e.currentTarget.textContent === grades[3]) {\r\n            grade = 4\r\n        }\r\n        if (e.currentTarget.textContent === grades[4]) {\r\n            grade = 5\r\n        }\r\n        dispatch(setGradeTC(grade, card._id))\r\n\r\n    }\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className={s.modalContainer} onClick={onClose}>\r\n            <div className={s.modal} onClick={(e) => {\r\n                e.stopPropagation()\r\n            }}>\r\n                {cards.length === 0\r\n                    ?\r\n                    <div className={s.noCards}>There are no cards here yet</div>\r\n                    :\r\n                <>\r\n                <div className={s.learnQuestion}>{card.question}</div>\r\n                <div>\r\n                    <SuperButton onClick={() => setIsChecked(true)} disabled={isChecked}>check</SuperButton>\r\n                </div>\r\n                {isChecked && (\r\n                    <>\r\n                        <div className={s.learnQuestion}>{card.answer}</div>\r\n                        <div className={s.btnContainer}>\r\n                            {grades.map((grade, i) => (\r\n                                <SuperButton key={'grade-' + i} onClick={setGradeHandler}\r\n                                             disabled={isGraded}>{grade}</SuperButton>\r\n                            ))}\r\n                        </div>\r\n                        <div><SuperButton onClick={onNext}>next</SuperButton></div>\r\n                    </>\r\n                )}\r\n                </>\r\n                }\r\n            </div>\r\n        </div>\r\n        , document.body)\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useAppSelector} from \"../../bll/store\";\r\nimport {CardPackType} from \"../../api/packs-api\";\r\nimport {deletePackTC, getPacksTC, updatePackTC} from \"./cardPacks-reducer\";\r\nimport s from './table.module.css'\r\nimport btn from '../cards/card/Card.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/Routes\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {DeleteModal} from \"../../common/components/modal/deleteModal/deleteModal\";\r\nimport {UpdatePackTitleModal} from \"../../common/components/modal/updatePackTitleModal/updatePackTitleModal\";\r\nimport {LearningPageModal} from \"../../common/components/modal/learningPage/learningPageModal\";\r\nimport {setPackNameAC} from \"../cards/cards-reducer\";\r\n\r\n\r\nexport const CardPacksTable = React.memo(() => {\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    let titles = ['Name', 'Cards count', 'Last updated', 'Created by', 'Actions']\r\n\r\n    const packs = useAppSelector<CardPackType[]>(state => state.packs.cardPacks)\r\n    const pageCount = useAppSelector<number>(state => state.packs.pageCount)\r\n    //const page = useAppSelector<number>(state => state.packs.page)\r\n    const myId = useAppSelector<string>(state => state.app._id)\r\n    const searchedName = useAppSelector<string>(state => state.packs.searchedName)\r\n    const settingSlider = useAppSelector<{ min: number; max: number }>(state => state.packs.settingSlider)\r\n\r\n    const [open, setOpen] = useState<string>('')\r\n    const [openT, setOpenT] = useState<string>('')\r\n    const [openL, setOpenL] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n        console.log('Main useEffect(table)')\r\n    }, [pageCount, searchedName, settingSlider.min, settingSlider.max])\r\n\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <table className={s.table}>\r\n                <thead className={s.tableHead}>\r\n                <tr>\r\n                    {titles.map((title, index) => <th key={title + index} className={s.title}>{title}</th>)}\r\n                </tr>\r\n                </thead>\r\n                <tbody className={s.tableBody}>\r\n                {packs.map(pack => {\r\n                        const onDeletePack = () => {\r\n                            dispatch(deletePackTC(pack._id))\r\n                            setOpen('')\r\n                        }\r\n                        const onUpdatePack = (newPackName?: string) => {\r\n                            dispatch(updatePackTC(pack._id, newPackName))\r\n                        }\r\n                    const onBackLinkNameClick = () => {\r\n                        dispatch(setPackNameAC(pack.name))\r\n                    }\r\n                        return <tr className={s.dataRow} key={pack._id}>\r\n                            <td>\r\n                                <NavLink to={PATH.CARDS + `/${pack._id}`}\r\n                                         onClick={onBackLinkNameClick}\r\n                                         className={s.backlinkName}>{pack.name}</NavLink>\r\n                            </td>\r\n                            <td>{pack.cardsCount}</td>\r\n                            <td>{pack.updated}</td>\r\n                            <td>{pack.user_name}</td>\r\n                            {pack.user_id === myId\r\n                                ?\r\n                                <>\r\n                                    <DeleteModal message={'Delete this pack?'}\r\n                                                 isOpen={open === pack._id}\r\n                                                 onClose={() => setOpen('')}\r\n                                                 packId={pack._id}\r\n                                                 onDelete={onDeletePack}\r\n                                    />\r\n                                    <UpdatePackTitleModal message={'Change the title of the pack'}\r\n                                                          isOpen={openT === pack._id}\r\n                                                          onClose={() => setOpenT('')}\r\n                                                          onEdit={onUpdatePack}\r\n                                    />\r\n                                    {(openL === pack._id) && <LearningPageModal isOpen={openL === pack._id}\r\n                                                                              onClose={() => setOpenL('')}\r\n                                                                              packId={pack._id}\r\n                                    />}\r\n                                    <td>\r\n                                        <SuperButton\r\n                                            className={btn.btn}\r\n                                            onClick={() => setOpen(pack._id)}\r\n                                            value={pack._id}\r\n                                        >\r\n                                            delete\r\n                                        </SuperButton>\r\n                                        <SuperButton\r\n                                            className={btn.btn}\r\n                                            onClick={() => setOpenT(pack._id)}\r\n                                            value={pack._id}\r\n                                        >\r\n                                            edit\r\n                                        </SuperButton>\r\n                                        <SuperButton className={btn.btn}\r\n                                                     onClick={() => setOpenL(pack._id)}\r\n                                                     value={pack._id}\r\n                                        >\r\n                                            learn\r\n                                        </SuperButton>\r\n                                    </td>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    {openL === pack._id ? <LearningPageModal isOpen={openL === pack._id}\r\n                                                                              onClose={() => setOpenL('')}\r\n                                                                              packId={pack._id}\r\n                                    /> : null\r\n                                    }\r\n                                    <td>\r\n                                        <SuperButton className={btn.btn}\r\n                                                     onClick={() => setOpenL(pack._id)}\r\n                                                     value={pack._id}\r\n                                        >\r\n                                            learn\r\n                                        </SuperButton>\r\n                                    </td>\r\n                                </>\r\n                            }\r\n                        </tr>\r\n                    }\r\n                )}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from \"react\";\r\nimport s from './pagination.module.css';\r\nimport {useAppSelector} from \"../../../bll/store\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentPageAC} from \"../../../features/cardPacks/cardPacks-reducer\";\r\n\r\n\r\ntype PaginationPropsType = {\r\n    numberOfPagesInOnePortion: number\r\n    onPageChange: (page: number) => void\r\n}\r\n\r\n\r\nlet Pagination = React.memo(({numberOfPagesInOnePortion, onPageChange}: PaginationPropsType) => {\r\n\r\n    let dispatch = useDispatch()\r\n    let [portionNumber, setPortionNumber] = useState<number>(1)\r\n    let [inputPage, setInputPage] = useState<number | string>('')\r\n\r\n    let cardPacksTotalCount = useAppSelector<number>(state => state.packs.cardPacksTotalCount)\r\n    let pageCount = useAppSelector<number>(state => state.packs.pageCount)\r\n    let currentPage = useAppSelector<number>(state => state.packs.page)\r\n\r\n    let totalAmountOfPages = Math.ceil(cardPacksTotalCount / pageCount)\r\n    let pages: number[] = []\r\n    for (let i = 1; i <= totalAmountOfPages; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let numberOfPortions = Math.ceil(totalAmountOfPages / numberOfPagesInOnePortion)\r\n    let currentPortion = Math.ceil(currentPage / numberOfPagesInOnePortion)\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * numberOfPagesInOnePortion + 1\r\n    let rightPortionPageNumber = portionNumber * numberOfPagesInOnePortion\r\n\r\n    const onSetNewPage = (page: number) => {\r\n        onPageChange(page)\r\n        dispatch(setCurrentPageAC(page))\r\n    }\r\n\r\n    const onSetNewPageFromInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let page = +e.currentTarget.value\r\n        setInputPage(page)\r\n    }\r\n\r\n    const onSetNewPageByEnterKey = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onPageChange(+inputPage)\r\n            dispatch(setCurrentPageAC(+inputPage))\r\n            setInputPage('')\r\n        }\r\n    }\r\n\r\n    const onSetNewPageByButton = (inputPage: number) => {\r\n        onPageChange(inputPage)\r\n        dispatch(setCurrentPageAC(inputPage))\r\n        setInputPage('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(currentPortion)\r\n    }, [currentPortion])\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            <div className={s.pages}>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>prev</button>}\r\n                {pages\r\n                    .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                    .map(page => {\r\n                        return <span key={page} className={currentPage === page ? s.selectedPage : s.pageNumber}\r\n                                     onClick={() => {\r\n                                         onSetNewPage(page)\r\n                                     }}>{page} </span>\r\n                    })}\r\n                {currentPage !== pages[pages.length - 1]\r\n                    ?\r\n                    <span className={currentPage === pages[pages.length - 1] ? s.selectedPage : s.pageNumber}\r\n                          onClick={() => {\r\n                              onSetNewPage(pages[pages.length - 1])\r\n                          }}>...{pages[pages.length - 1]}</span>\r\n                    : ''\r\n                }\r\n                {numberOfPortions > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>next</button>}\r\n            </div>\r\n            <input style={{\r\n                border: '1px solid',\r\n                width: '40px',\r\n                marginLeft: '20px',\r\n                marginRight: '5px'\r\n            }}\r\n                   onChange={onSetNewPageFromInput}\r\n                   value={inputPage!}\r\n                   placeholder={'page'}\r\n                   onKeyPress={onSetNewPageByEnterKey}\r\n            />\r\n            <button onClick={() => {\r\n                onSetNewPageByButton(+inputPage)\r\n            }}>＞\r\n            </button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Pagination","import React, {useEffect} from 'react';\r\nimport {Box, Slider} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsCountAC} from \"../../../features/cardPacks/cardPacks-reducer\";\r\nimport {useAppSelector} from \"../../../bll/store\";\r\n\r\nlet test;\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    value1: number\r\n    value2: number\r\n    value3: number[]\r\n    setValue1: (value1: number) => void\r\n    setValue2: (value2: number) => void\r\n    setValue3: (value3: number[]) => void\r\n}\r\n\r\nconst minDistance = 1;\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = React.memo((\r\n    {\r\n        value1,\r\n        value2,\r\n        value3,\r\n        setValue1,\r\n        setValue2,\r\n        setValue3,\r\n    }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const minCardsCount = useAppSelector<number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useAppSelector<number>(state => state.packs.maxCardsCount)\r\n   // const maxC = useAppSelector<number>(state => state.packs.maxCardsCount)\r\n\r\n\r\n    const handleChange1 = (\r\n        event: Event,\r\n        newValue: number | number[],\r\n        activeThumb: number,\r\n    ) => {\r\n        if (!Array.isArray(newValue)) {\r\n            return;\r\n        }\r\n        if (activeThumb === 0) {\r\n            setValue3([Math.min(newValue[0], value2 - minDistance), value2]);\r\n            setValue1(Math.min(newValue[0], value2 - minDistance));\r\n        } else {\r\n            setValue3([value3[0], Math.max(newValue[1], value1 + minDistance)]);\r\n            setValue2(value3[1])\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let searchTimer = setTimeout(() => dispatch(setCardsCountAC(value1, value2)), 1500)\r\n        console.log('DoubleRange useEffect')\r\n        return () => clearTimeout(searchTimer)\r\n    }, [value1, value2])\r\n\r\n    return (\r\n        <Box sx={{height: 300}}>\r\n            <Slider\r\n                min={minCardsCount}\r\n                max={maxCardsCount}\r\n                step={1}\r\n                size={\"medium\"}\r\n                value={value3}\r\n                onChange={handleChange1}\r\n                //valueLabelDisplay=\"on\"\r\n                style={{color: '#C7A5A5'}}\r\n                disableSwap\r\n                orientation={\"vertical\"}\r\n\r\n            />\r\n        </Box>\r\n    );\r\n})\r\n\r\nexport default SuperDoubleRange\r\n\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = React.memo((\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions = options.map((name, i) => {\r\n        return <option key={options[i] + ' ' + i} className={s.option} value={name}>{name}</option>;\r\n    })\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let currentValue = e.currentTarget.value\r\n        if(onChangeOption)\r\n        onChangeOption(+currentValue)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} className={s.select}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n})\r\n\r\nexport default SuperSelect\r\n","import s from './SelectPage.module.css'\r\nimport React from 'react'\r\nimport SuperSelect from \"../../elements/select/SuperSelect\";\r\n\r\ntype SelectPageProps = {\r\n    description?: string\r\n    value?: any\r\n    disabled?: boolean\r\n    onChangeOptions?: (option: number) => void\r\n}\r\n\r\nexport const SelectPage: React.FC<SelectPageProps> = React.memo(({\r\n                                                           onChangeOptions,\r\n                                                           value,\r\n                                                           disabled = false,\r\n                                                           description\r\n                                                       }) => {\r\n    const arrOptions = [5, 10, 15, 20, 40]\r\n    return (\r\n        <div className={s.selectPage}>\r\n            <span></span>\r\n            <span>{description}</span>\r\n            <SuperSelect options={arrOptions}\r\n                         onChangeOption={onChangeOptions}\r\n                         value={value}\r\n                         disabled={disabled}/>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, Dispatch, SetStateAction, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport s from '../Modal.module.css'\r\nimport {createPackTC} from \"../../../../features/cardPacks/cardPacks-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\nimport SuperInput from \"../../../elements/input/SuperInput\";\r\n\r\ntype ModalPropsType = {\r\n    message: string\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    setOpen: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport const TitleModal = ({message, isOpen, onClose, setOpen}: ModalPropsType) => {\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState<string>('') //add new pack input state\r\n\r\n    const onSetNewName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newName = e.currentTarget.value\r\n        setNewName(newName)\r\n    }\r\n\r\n    const onClickNewName = (newName: string) => {\r\n        dispatch(createPackTC(newName))\r\n        setNewName('')\r\n        setOpen(false)\r\n    }\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className={s.modalContainer} onClick={onClose}>\r\n            <div className={s.modal} onClick={(e) => {\r\n                e.stopPropagation()\r\n            }}>\r\n                <h2 className={s.title}>{message}</h2>\r\n                <div>\r\n                    <SuperButton className={s.modalBtnClose} onClick={onClose}>Close</SuperButton>\r\n                </div>\r\n                <SuperInput className={s.modalInput}\r\n                            onChange={onSetNewName}\r\n                            value={newName}\r\n                            placeholder={'insert title here'}\r\n                            autoFocus/>\r\n                <SuperButton onClick={() => {\r\n                    onClickNewName(newName)\r\n                }}>add pack</SuperButton>\r\n            </div>\r\n        </div>\r\n        , document.body);\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {CardPacksTable} from \"./table\";\r\nimport s from './cardPacksPage.module.css';\r\nimport Pagination from \"../../common/components/pagination/pagination\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPacksTC, setPageCountAC, setSearchedNameAC} from \"./cardPacks-reducer\";\r\nimport {AppStateType, useAppSelector} from \"../../bll/store\";\r\nimport style from '../../common/elements/doubleRange/DoubleRange.module.css'\r\nimport SuperDoubleRange from \"../../common/elements/doubleRange/DoubleRange\";\r\nimport {SelectPage} from \"../../common/components/selectPage/SelectPage\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/Routes\";\r\nimport {TitleModal} from \"../../common/components/modal/addNewPack/TitleModal\";\r\n\r\n\r\nexport const CardPacksPage = React.memo(() => {\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const settingSlider = useAppSelector<{ min: number; max: number }>(state => state.packs.settingSlider)\r\n    const myId = useAppSelector<string>(state => state.app._id)\r\n    const status = useAppSelector<RequestStatusType>(state => state.app.status)\r\n    const pageCount = useAppSelector<number>(state => state.packs.pageCount)\r\n    const minCardsCount = useAppSelector<number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useAppSelector<number>(state => state.packs.maxCardsCount)\r\n\r\n    const [searchName, setSearchName] = useState<string>('') //search pack input state\r\n    const [value1, setValue1] = useState(settingSlider.min) //slider's state\r\n    const [value2, setValue2] = useState(settingSlider.max) //slider's state\r\n    const [value3, setValue3] = React.useState<number[]>([value1, value2]); //slider's state\r\n    const [open, setOpen] = useState(false) //modal state\r\n\r\n\r\n    const onSetNewSearchName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const search = e.currentTarget.value\r\n        setSearchName(search)\r\n    }\r\n\r\n    const onSetPageCount = (value: number) => {\r\n        if (value) {\r\n            dispatch(setPageCountAC(value))\r\n        }\r\n    }\r\n\r\n\r\n    const onPageChange = (page: number) => {\r\n        dispatch(getPacksTC({page}))\r\n    }\r\n\r\n    const onGetPacks = () => {\r\n        //dispatch(setCardsCountAC(0, 103))\r\n        //dispatch(getPacksTC())\r\n        //dispatch(setCardsCountAC(minCardsCount, maxCardsCount))\r\n        //setValue1(minCardsCount)\r\n        //setValue2(maxCardsCount)\r\n        setValue3([minCardsCount, maxCardsCount])\r\n        dispatch(getPacksTC({page: 1, min: 0, max: 103}))\r\n        /*console.log('setter: allPacks')\r\n        console.log('minCardsCount: ', minCardsCount)\r\n        console.log('maxCardsCount: ', maxCardsCount)*/\r\n    }\r\n\r\n    const onGetMyPacks = () => {\r\n        //dispatch(setCardsCountAC(minCardsCount, maxCardsCount))\r\n        //dispatch(setCurrentPageAC(1))\r\n        /* setValue1(minCardsCount)\r\n         setValue2(maxCardsCount)\r\n         setValue3([minCardsCount, maxCardsCount])*/\r\n        dispatch(getPacksTC({myId, page: 1}))\r\n        /*console.log('setter: myPacks')\r\n        console.log('minCardsCount: ', minCardsCount)\r\n        console.log('maxCardsCount: ', maxCardsCount)*/\r\n    }\r\n\r\n    useEffect(() => {\r\n        let searchTimer = setTimeout(() => dispatch(setSearchedNameAC(searchName)), 1500)\r\n        return () => clearTimeout(searchTimer)\r\n    }, [searchName])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n\r\n    //console.log('cardPacksPage isLoggedIn: ', isLoggedIn)\r\n\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.filterContainer}>\r\n                <SuperButton className={s.btn} onClick={onGetMyPacks}>My packs</SuperButton>\r\n                <SuperButton className={s.btn} onClick={onGetPacks}>All packs</SuperButton>\r\n                <div className={style.doubleRangeBlock}>\r\n                    <span className={style.choose}>Choose the amount of cards:</span>\r\n                    <span className={style.span}>{value2}</span>\r\n                    <SuperDoubleRange\r\n                        value1={value1}\r\n                        value2={value2}\r\n                        value3={value3}\r\n                        setValue1={setValue1}\r\n                        setValue2={setValue2}\r\n                        setValue3={setValue3}\r\n                    />\r\n                    <span className={style.span}>{value1 < value2 ? value1 : value2 - 1}</span>\r\n                </div>\r\n            </div>\r\n            <div className={s.packsContainer}>\r\n                <h1>Packs</h1>\r\n                <div className={s.addNewPackInput}><input style={{border: '1px solid #C7A5A5'}}\r\n                                                          onChange={onSetNewSearchName}\r\n                                                          value={searchName}\r\n                                                          placeholder={'search for pack names here'}/>\r\n                </div>\r\n                <div className={s.addNewPackButton}>\r\n                    <SuperButton onClick={() => setOpen(true)\r\n                       }>add new pack</SuperButton>\r\n                </div>\r\n                <TitleModal\r\n                    message=\"Create a new pack of cards\"\r\n                    isOpen={open}\r\n                    setOpen={setOpen}\r\n                    onClose={() => setOpen(false)}\r\n                />\r\n                <CardPacksTable/>\r\n                <div className={s.selectPagination}>\r\n                    <SelectPage onChangeOptions={onSetPageCount}\r\n                                value={pageCount}\r\n                                disabled={status === \"loading\"}\r\n                                description={'packs on page'}/>\r\n                    <Pagination numberOfPagesInOnePortion={6} onPageChange={onPageChange}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CardPacksPage;","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './passwordRestore.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {SuccessfulRequestMessage} from \"./successfulRequestMessage\";\r\nimport {sendCurrentEmailTC} from \"./password-reducer\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\n\r\n\r\nexport const PasswordRestore = React.memo(() => {\r\n\r\n    let dispatch = useDispatch()\r\n    let requestStatus = useSelector<AppStateType, boolean>(state => state.password.isSuccessfulRequest)\r\n    let appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onSetCurrentEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        setValue(value)\r\n    }\r\n    const onSendCurrentEmail = () => {\r\n        dispatch(sendCurrentEmailTC(value))\r\n    }\r\n\r\n    if (requestStatus) {\r\n        return <SuccessfulRequestMessage/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n                <div>\r\n                    Failed to remember your password?\r\n                </div>\r\n                <div>\r\n                    <SuperInput type='email'\r\n                           name='currentEmail'\r\n                           placeholder='your e-mail'\r\n                           onChange={onSetCurrentEmail}\r\n                           style={{border: '1px solid black'}}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                            onClick={onSendCurrentEmail}\r\n                            disabled={appStatus === 'loading'}\r\n                    >Send\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    Remembered password? Try to <a className={s.svg} href={'/login'}>log in<svg viewBox=\"0 0 70 36\">\r\n                    <path d=\"M6.9739 30.8153H63.0244C65.5269 30.8152 75.5358 -3.68471 35.4998 2.81531C-16.1598\r\n                    11.2025 0.894099 33.9766 26.9922 34.3153C104.062 35.3153 54.5169 -6.68469 23.489 9.31527\" />\r\n                </svg></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {MouseEvent,} from \"react\";\r\nimport s from \"../cardsModal/Modal.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteCard} from \"../../../../features/cards/cards-reducer\";\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\n\r\n\r\ntype DeleteCardsType = {\r\n    showModal: boolean\r\n    setShowModal: (show: boolean) => void\r\n    cardId: string\r\n    packId: string\r\n}\r\n\r\nexport const DeleteCardModal = (props: DeleteCardsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteCardHandler = () => {\r\n        dispatch(deleteCard(props.cardId, props.packId))\r\n        props.setShowModal(false)\r\n    }\r\n\r\n    const resetCardsHandler = () => props.setShowModal(false)\r\n    const activeModalHandler = () => props.setShowModal(false)\r\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    return (\r\n        <div className={s.modalContainer} onClick={activeModalHandler}>\r\n            <div className={s.modalContent} onClick={stopActiveModal}>\r\n                <h2 className={s.title}>Are you sure to delete this card?</h2>\r\n                <div className={s.allButton}>\r\n                    <SuperButton className={s.modalBtn}\r\n                                 type={\"submit\"}\r\n                                 onClick={deleteCardHandler}>\r\n                        YES</SuperButton>\r\n                    <SuperButton className={s.modalBtn}\r\n                                 type={\"submit\"}\r\n                                 onClick={resetCardsHandler}>\r\n                        NO</SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useDispatch} from \"react-redux\";\r\nimport s from \"./Modal.module.css\";\r\nimport SuperInput from \"../../../elements/input/SuperInput\";\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\nimport {ChangeEvent, MouseEvent, useState} from \"react\";\r\nimport {updateCard} from \"../../../../features/cards/cards-reducer\";\r\nimport {CardType} from \"../../../../api/cards-api\";\r\n\r\n\r\ntype UpdateCardsType = {\r\n    packId: string\r\n    card: CardType\r\n    answer: string\r\n    question: string\r\n    showModal: boolean\r\n    setShowModal: (show: boolean) => void\r\n}\r\nexport const UpdateCardModal = (props: UpdateCardsType ) => {\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n    const onSetAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n\r\n    const updateCardHandler = () => {\r\n         dispatch(updateCard(props.packId, props.card._id, question, answer))\r\n        if (question !== '') {\r\n            setQuestion('')\r\n        }\r\n        if (answer !== '') {\r\n            setAnswer('')\r\n        }\r\n        props.setShowModal(false)\r\n    }\r\n    const activeModalHandler = () => {\r\n        props.setShowModal(false)\r\n    }\r\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    return (\r\n        <div className={s.modalContainer} onClick={activeModalHandler}>\r\n            <div className={s.modalContent} onClick={stopActiveModal}>\r\n                <h2 className={s.title}>Please, update this card</h2>\r\n                <div className={s.inputModal}>\r\n                    <SuperInput\r\n                        type=\"text\"\r\n                        placeholder='question'\r\n                        required\r\n                        value={question}\r\n                        onChange={onSetQuestion}\r\n                        autoFocus/>\r\n                </div>\r\n                <div className={s.inputModal}>\r\n                    <SuperInput className={s.modalInput}\r\n                                type=\"text\"\r\n                                required\r\n                                placeholder='answer'\r\n                                value={answer}\r\n                                onChange={onSetAnswer}\r\n                    />\r\n                </div>\r\n\r\n                <SuperButton className={s.modalBtn}\r\n                             type={\"submit\"}\r\n                             onClick={updateCardHandler}>\r\n                    OK </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React, {useState} from 'react';\r\nimport {CardType} from \"../../../api/cards-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport s from \"./Card.module.css\";\r\nimport SuperButton from \"../../../common/elements/button/SuperButton\";\r\nimport {DeleteCardModal} from \"../../../common/components/modalWindows/cardsModal/DeleteModal\";\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\nimport {UpdateCardModal} from \"../../../common/components/modalWindows/cardsModal/UpdateModal\";\r\n\r\n\r\n\r\ntype CardPropsType = {\r\n    card: CardType\r\n    packId: string\r\n    isUsersPack: boolean\r\n}\r\n\r\nexport const Card: React.FC<CardPropsType> = React.memo(({\r\n                                                             card,\r\n                                                             packId,\r\n                                                             isUsersPack,\r\n                                                         }) => {\r\n//* Data -------------------------------------------------------------------------------------->\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n//* Local state ------------------------------------------------------------------------------->\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n    const [showUpdateModal, setShowUpdateModal] = useState(false)\r\n\r\n\r\n//* Callbacks ---------------------------------------------------------------------------------->\r\n    const openDeleteModalWindow = () => {\r\n        setShowDeleteModal(true)\r\n    }\r\n    const openUpdateModalWindow = () => {\r\n        setShowUpdateModal(true)\r\n    }\r\n    return (\r\n        <>\r\n            {showDeleteModal &&\r\n            <DeleteCardModal\r\n                cardId={card._id}\r\n                packId={packId}\r\n                showModal={showDeleteModal}\r\n                setShowModal={setShowDeleteModal}\r\n            />}\r\n            {showUpdateModal &&\r\n            <UpdateCardModal\r\n                card={card}\r\n                packId={packId}\r\n                answer={card.answer}\r\n                question={card.question}\r\n                showModal={showUpdateModal}\r\n                setShowModal={setShowUpdateModal}\r\n            />}\r\n\r\n            <div className={s.cardContainer}>\r\n                <div>{card.question}</div>\r\n                <div>{card.answer}</div>\r\n                <div>{card.updated}</div>\r\n                <div>{card.grade}</div>\r\n                <div>\r\n                    {!isUsersPack\r\n                        ? null\r\n                        : <div>\r\n                            <SuperButton className={s.btn} onClick={openUpdateModalWindow}>EDIT</SuperButton>\r\n                            <SuperButton className={s.btn}\r\n                                         disabled={status === \"loading\"}\r\n                                         onClick={openDeleteModalWindow}\r\n                            >DELETE</SuperButton>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\n","import React, {useState} from 'react'\r\nimport s from './SortArrow.module.css'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype SortArrowPropsType = {\r\n    sortValue: any\r\n    status: RequestStatusType\r\n    onClick: (payload?: any) => void\r\n}\r\n\r\nexport const SortArrow: React.FC<SortArrowPropsType> = ({sortValue, onClick, status}) => {\r\n\r\n    const [arrowSort, setArrowSort] = useState(1)\r\n    const onClickHandler = () => {\r\n        if(status === 'succeeded') {\r\n            arrowSort === 0 ? setArrowSort(1) : setArrowSort(0)\r\n            onClick(`${arrowSort}${sortValue}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {arrowSort === 0 ?\r\n                <span className={s.ratingArrow} onClick={onClickHandler}>\r\n                                        &darr;</span> :\r\n                <span className={s.ratingArrow} onClick={onClickHandler}>\r\n                                        &uarr;</span>}\r\n        </>\r\n\r\n    )\r\n}\r\n","import {ChangeEvent, KeyboardEvent, MouseEvent, useState} from \"react\";\r\nimport s from \"../cardsModal/Modal.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createCards} from \"../../../../features/cards/cards-reducer\";\r\nimport SuperInput from \"../../../elements/input/SuperInput\";\r\nimport SuperButton from \"../../../elements/button/SuperButton\";\r\n\r\n\r\ntype CreateCardsType = {\r\n    showModal: boolean\r\n    setShowModal: (show: boolean) => void\r\n    packId: string\r\n}\r\n\r\nexport const CreateModal = (props: CreateCardsType) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    // const cardsPackID = useSelector<AppStateType, string>(state => state.packs.packCardsId)\r\n\r\n\r\n    const CreateCardHandler = () => {\r\n        dispatch(createCards(props.packId, question, answer))\r\n        props.setShowModal(false)\r\n    }\r\n\r\n    const onPressEnterAdd = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') CreateCardHandler();\r\n    }\r\n\r\n    const onSetQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n\r\n    const onSetAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n\r\n    const activeModalHandler = () => {\r\n        props.setShowModal(false)\r\n    }\r\n    const stopActiveModal = (e: MouseEvent<HTMLDivElement>) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    return (\r\n        <div className={s.modalContainer} onClick={activeModalHandler}>\r\n            <div className={s.modalContent} onClick={stopActiveModal}>\r\n                <h2 className={s.title}>Please, enter the question and the answer of the card</h2>\r\n                <div className={s.inputModal}>\r\n                    <SuperInput\r\n                                type=\"text\"\r\n                                placeholder='question'\r\n                                required\r\n                                value={question}\r\n                                onChange={onSetQuestion}\r\n                                onKeyPress={onPressEnterAdd}\r\n                                autoFocus/>\r\n                </div>\r\n                <div className={s.inputModal}>\r\n                    <SuperInput className={s.modalInput}\r\n                                type=\"text\"\r\n                                required\r\n                                placeholder='answer'\r\n                                value={answer}\r\n                                onChange={onSetAnswer}\r\n                                onKeyPress={onPressEnterAdd}\r\n                    />\r\n                </div>\r\n\r\n                <SuperButton className={s.modalBtn}\r\n                    type={\"submit\"}\r\n                             onClick={CreateCardHandler}>\r\n                    OK </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react'\r\nimport s from './Cards.module.css'\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCards, setGetRequestParamsAC, setPageCountAC, setSearchedQuestionAC} from \"./cards-reducer\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {CardType, RequestParamsType} from \"../../api/cards-api\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Card} from \"./card/Card\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport {SelectPage} from \"../../common/components/selectPage/SelectPage\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\nimport {SortArrow} from \"../../common/components/sortArrow/SortArrow\";\r\nimport {CreateModal} from \"../../common/components/modalWindows/cardsModal/CreateModal\";\r\n\r\n\r\n\r\n\r\nexport const Cards = React.memo(() => {\r\n\r\n//* Data -------------------------------------------------------------------------------------->\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector<AppStateType, Array<CardType>>(state => state.cards.cards)\r\n    //const cardsTotalCount = useSelector<AppStateType, number>(state => state.cards.cardsTotalCount)\r\n    const page = useSelector<AppStateType, number>(state => state.cards.page)\r\n    const packName = useSelector<AppStateType, string>(state => state.cards.packName)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const pageCount = useSelector<AppStateType, number>(state => state.cards.pageCount)\r\n    const packUserId = useSelector<AppStateType, string>(state => state.cards.packUserId)\r\n    const authUserId = useSelector<AppStateType, string>(state => state.app._id)\r\n\r\n    const {packId} = useParams<'packId'>()\r\n    const navigate = useNavigate()\r\n\r\n    const isUsersPack = packUserId === authUserId\r\n    //const totalPages = Math.ceil(cardsTotalCount / pageCount)\r\n\r\n//* Local state --------------------------------------------------------------------------------->\r\n    const [searchValue, setSearchValue] = useState<string>('')\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n\r\n//* Callbacks ----------------------------------------------------------------------------------->\r\n\r\n    const openModalWindow = () => {\r\n        setShowModal(true)\r\n    }\r\n    const onSetPageCount = (value: number) => {\r\n        if (value) {\r\n            dispatch(setPageCountAC(value))\r\n        }\r\n    }\r\n    const onSetSearchValue = (value: string) => {\r\n        setSearchValue(value)\r\n        console.log('setSearchValue')\r\n    }\r\n    const searchCards = () => {\r\n        dispatch(setSearchedQuestionAC(searchValue))\r\n        dispatch(getCards(packId!))\r\n        setSearchValue('')\r\n        console.log('send search request to the server')\r\n    }\r\n\r\n    const setGetRequestParams =useCallback((requestParams: RequestParamsType) => {\r\n        dispatch(setGetRequestParamsAC(requestParams))\r\n        dispatch(getCards(packId!))\r\n    }, [dispatch])\r\n    const sortCards = (param: string) => setGetRequestParams({sortCards: param})\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards(packId!))\r\n    }, [dispatch, packId, page, pageCount])\r\n\r\n    console.log('packName', packName)\r\n\r\n\r\n//* JSX ------------------------------------------------------------------------------------------->\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.cardsContainer}>\r\n\r\n                {showModal && <CreateModal\r\n                    showModal={showModal}\r\n                    setShowModal={setShowModal}\r\n                    packId={packId!}\r\n                />}\r\n                <div className={s.backLink}>\r\n                    <div onClick={() => navigate('/packs-list')}\r\n                         className={s.arrowBack}>&larr;<span>{packName}</span></div>\r\n                </div>\r\n\r\n\r\n                <div className={s.search}>\r\n                    <div className={s.searchBlock}>\r\n                        <form className={s.searchForm}>\r\n                            <SuperInput type=\"text\"\r\n                                        placeholder=\"Search..\"\r\n                                        onChangeText={onSetSearchValue}\r\n                                        value={searchValue}\r\n                                        onEnter={searchCards}/>\r\n                            <button className={s.searchBtn}\r\n                                    onClick={searchCards}\r\n                                    disabled={status === \"loading\"}\r\n                                    type=\"submit\">&#8617;</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className={s.addCard}>\r\n\r\n                        { (isUsersPack) ? <SuperButton onClick={openModalWindow}\r\n                                     disabled={status === \"loading\"}>ADD CARD</SuperButton>\r\n                        : <SuperButton disabled>ADD CARD</SuperButton>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.cardsTable}>\r\n                    {!cards.length\r\n                        ? <div className={s.noCards}>\r\n                            <span>There are no cards in this pack...</span>\r\n                        </div>\r\n                        :\r\n                        <div className={s.cards}>\r\n                            <div className={s.card}>\r\n                                <div className={s.cardsHeader}>\r\n                                    <div className={s.infoItem}>Question</div>\r\n                                    <div className={s.infoItem}>Answer</div>\r\n                                    <div>\r\n                                        <span>Last updated</span>\r\n                                        <SortArrow onClick={sortCards} sortValue={'updated'} status={status}/>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{marginLeft: '5px'}}>Grade</span>\r\n                                        <SortArrow onClick={sortCards} sortValue={'grade'} status={status}/>\r\n                                    </div>\r\n                                    { (isUsersPack) && <div className={s.gradeTitle}>Actions</div>}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {cards.map(el =>\r\n                                    <div key={el._id}>\r\n                                        <Card card={el} packId={packId!} isUsersPack={isUsersPack}/>\r\n                                    </div>)}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <div className={s.selector}>\r\n                        <SelectPage onChangeOptions={onSetPageCount}\r\n                                    value={pageCount}\r\n                                    disabled={status === \"loading\"}\r\n                                    description={'Cards on page'}/>\r\n                    </div>\r\n                    {/*<div>\r\n                        {totalPages < 8\r\n                                ? null\r\n                                : <Pagination\r\n                                onPageChange={onSetPageCount}\r\n                                numberOfPagesInOnePortion={6}/>\r\n                        }\r\n                    </div>*/}\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>)\r\n\r\n\r\n})\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './error404.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../../app/Routes\";\r\n\r\n\r\nexport const Error404 = React.memo(() => {\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div style={{background: 'black'}}>\r\n            <a href=\"\" target=\"_parent\">\r\n                <header className={s.topHeader}>\r\n                </header>\r\n                {/*dust particel*/}\r\n                <div>\r\n                    <div className={s.starSec}></div>\r\n                    <div className={s.starThird}></div>\r\n                    <div className={s.starFourth}></div>\r\n                    <div className={s.starFifth}></div>\r\n                </div>\r\n                {/* Dust particle end*/}\r\n                <div className={s.lampWrap}>\r\n                    <div className={s.lamp}>\r\n                        <div className={s.cable}></div>\r\n                        <div className={s.cover}></div>\r\n                        <div className={s.inCover}>\r\n                            <div className={s.bulb}></div>\r\n                        </div>\r\n                        <div className={s.light}></div>\r\n                    </div>\r\n                </div>\r\n                {/*END Lamp*/}\r\n                <section className={s.error}>\r\n                    {/*Content*/}\r\n                    <div className={s.errorContent}>\r\n                        <div className={s.errorMessage}>\r\n                            <h1 className={s.messageTitle}>Page Not Found</h1>\r\n                            <p className={s.messageText}>We're sorry, the page you were looking for isn't found here.\r\n                                The link you followed may either be broken or no longer exists. Please try again, or\r\n                                take a look at our.</p>\r\n                        </div>\r\n                        <div className={s.errorNav}>\r\n                            <a href=\"\" target=\"_parent\" className={s.eNavLink}></a>\r\n                        </div>\r\n                    </div>\r\n                    {/*END Content*/}\r\n                </section>\r\n            </a>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport {Navigate, Route, Routes, useLocation} from 'react-router-dom'\r\nimport {Login} from '../features/login/login'\r\nimport {Profile} from '../features/profile/profile'\r\nimport {NewPassword} from \"../features/password/newPassword\";\r\nimport Header from \"../common/components/header/header\";\r\nimport {ChangePassword} from \"../features/password/changePassword\";\r\nimport CardPacksPage from \"../features/cardPacks/cardPacksPage\";\r\nimport {PasswordRestore} from \"../features/password/passwordRestore\";\r\nimport {Cards} from \"../features/cards/Cards\";\r\nimport {Error404} from \"../common/components/error404/error404\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    CHANGE_PASSWORD: '/change-password',\r\n    NEW_PASSWORD_WITH_TOKEN: '/new-password/:token',\r\n    CARDS: '/cards',\r\n    TEST: '/test',\r\n    NOT_FOUND: '/404',\r\n    PACKS_LIST: '/packs-list',\r\n    RESTORE_PASSWORD: '/restore-password',\r\n}\r\n\r\nfunction CardDeckRoutes() {\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !(location.pathname === \"/404\") && <Header/>\r\n            }\r\n            <Routes>\r\n                {/*<Route path={'/cardDeck'} element={<Navigate to={PATH.LOGIN}/>}/>*/}\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                {/*<Route path={PATH.REGISTRATION} element={<Registration/>}/>*/}\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.CHANGE_PASSWORD} element={<ChangePassword/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} element={<PasswordRestore/>}/>\r\n           {/*     <Route path={PATH.NEW_PASSWORD} element={<NewPasswordWithoutToken/>}/>*/}\r\n                <Route path={PATH.NEW_PASSWORD_WITH_TOKEN} element={<NewPassword/>}/>\r\n                <Route path={PATH.PACKS_LIST} element={<CardPacksPage/>}/>\r\n                <Route path={PATH.CARDS + `/:packId`} element={<Cards/>}/>\r\n                {/*<Route path={PATH.TEST} element={<TestComps/>}/>*/}\r\n                <Route path={PATH.NOT_FOUND} element={<Error404/>}/>\r\n                <Route path={'*'} element={<Navigate to={PATH.NOT_FOUND}/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeckRoutes\r\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\r\nimport s from \"./registration.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {registryTC, setErrorAC} from \"./registration-reducer\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\nimport viewPassword from \"../../assets/password/viewPassword.png\";\r\nimport hiddenPassword from \"../../assets/password/hiddenPassword.png\";\r\n\r\nexport const Registration = React.memo(() => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [type, setType] = useState('password')\r\n    const [showPassword, setShowPassword] = useState<boolean>(true);\r\n    const [isPasswordEqual, setIsPasswordEqual] = useState<boolean>(false);\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n\r\n    const backError = useSelector<AppStateType, string>((state) => state.registration.backError)\r\n    const isRegistry = useSelector<AppStateType, boolean>((state) => state.registration.isRegistry)\r\n    const appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        const re = /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        if( re.test(String(e.currentTarget.value).toLowerCase())) {\r\n            setEmailError('')\r\n        } else {\r\n            setEmailError('Invalid email address')\r\n        }\r\n    }\r\n    const handleInputPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let currentPasswordValue = e.currentTarget.value\r\n        setPassword(currentPasswordValue)\r\n        if(currentPasswordValue.length < 7)  {\r\n            setPasswordError('Password must be more than 6 character')\r\n        } else {\r\n            setPasswordError('')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n\r\n        if (confirm !== password) return\r\n        dispatch(registryTC(email, password))\r\n    }\r\n\r\n    const onCancelHandle = (e: FormEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(setErrorAC(''))\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirm('')\r\n    }\r\n\r\n    const handleShowPassword = () => {\r\n        if (showPassword) {\r\n            setType('text')\r\n        } else {\r\n            setType('password')\r\n        }\r\n\r\n        setShowPassword(!showPassword)\r\n    }\r\n    const handlePasswordsMatch = () => {\r\n        (confirm !== password) ? setIsPasswordEqual(true) : setIsPasswordEqual(false)\r\n    }\r\n\r\n    if (isRegistry) return <Navigate to='/login'/>\r\n\r\n    return <div className={s.mainContainer}>\r\n        <div className={s.formContainer}>\r\n            <div className={s.title}>\r\n                <h2>it-incubator</h2>\r\n                <h2>Sign Up</h2>\r\n            </div>\r\n            <div className={s.form}>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>{emailError ? <div style={{color: \"red\", display: \"inline\"}}>{emailError}</div> : 'Email'}{<br/>}\r\n                        <SuperInput type={\"email\"}\r\n                                    value={email}\r\n                                    id={\"email\"}\r\n                                    onChange={handleInputEmail}\r\n                                    style={{border: '1px solid black', marginTop: '5px'}}/>\r\n                    </div>\r\n\r\n                    <div className={s.password}>{passwordError ? <div style={{color: \"red\", display: \"inline\"}}>{passwordError}</div> : 'Password'}{<br/>}\r\n                        <SuperInput type={type}\r\n                                    value={password}\r\n                                    id={\"password\"}\r\n                                    onBlur={handlePasswordsMatch}\r\n                                    onChange={handleInputPassword}\r\n                                    style={{border: '1px solid black', marginTop: '5px'}}/>\r\n                        <img className={s.passwordControl}\r\n                             src={showPassword ? viewPassword : hiddenPassword}\r\n                             alt=\"eye\"\r\n                             onClick={handleShowPassword}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={s.password}>Confirm password{<br/>}\r\n                        <SuperInput type={type}\r\n                                    value={confirm}\r\n                                    id={confirm}\r\n                                    onBlur={handlePasswordsMatch}\r\n                                    onChange={(e) => {\r\n                                        setConfirm(e.currentTarget.value)\r\n                                    }}\r\n                                    style={{border: '1px solid black', marginTop: '5px'}}/>\r\n                        <img className={s.passwordControl}\r\n                             src={showPassword ? viewPassword : hiddenPassword}\r\n                             alt=\"eye\"\r\n                             onClick={handleShowPassword}\r\n                        />\r\n                    </div>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                                 className={s.btn}\r\n                                 onClick={onCancelHandle}>\r\n                        Cancel\r\n                    </SuperButton>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                                 className={s.btn}\r\n                                 disabled={appStatus === 'loading'}>\r\n                        Registry\r\n                    </SuperButton>\r\n\r\n                    {(isPasswordEqual) ?\r\n                        <div style={{color: 'red', marginTop: '5px'}}>{'Passwords don\\'t match'}</div> : ''}\r\n                    {backError && <div style={{color: 'red', marginTop: '5px'}}>{backError}</div>}\r\n\r\n                </form>\r\n                <div>\r\n                    Have an account? Try to <a className={s.svg} href={'/login'}>log in<svg viewBox=\"0 0 70 36\">\r\n                    <path d=\"M6.9739 30.8153H63.0244C65.5269 30.8152 75.5358 -3.68471 35.4998 2.81531C-16.1598\r\n                    11.2025 0.894099 33.9766 26.9922 34.3153C104.062 35.3153 54.5169 -6.68469 23.489 9.31527\" />\r\n                </svg></a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n})\r\n\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from 'react-router-dom'\r\nimport {Error404} from '../common/components/error404/error404'\r\nimport {Login} from '../features/login/login'\r\nimport {Registration} from '../features/registration/registration'\r\nimport {PasswordRestore} from \"../features/password/passwordRestore\";\r\nimport {NewPassword} from \"../features/password/newPassword\";\r\nimport {Profile} from \"../features/profile/profile\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    RESTORE_PASSWORD: '/restore-password',\r\n    NEW_PASSWORD: '/new-password',\r\n    NEW_PASSWORD_WITH_TOKEN: '/new-password/:token',\r\n    NOT_FOUND: '/404',\r\n    PROFILE: '/profile',\r\n}\r\n\r\nfunction CardDeckRoutesUnauthorized() {\r\n\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/cardDeck'} element={<Navigate to={PATH.LOGIN}/>}/>\r\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} element={<PasswordRestore/>}/>\r\n              {/*  <Route path={PATH.NEW_PASSWORD} element={<NewPasswordWithoutToken/>}/>*/}\r\n                <Route path={PATH.NEW_PASSWORD_WITH_TOKEN} element={<NewPassword/>}/>\r\n                <Route path={PATH.NOT_FOUND} element={<Error404/>}/>\r\n                <Route path={'*'} element={<Navigate to={PATH.NOT_FOUND}/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeckRoutesUnauthorized\r\n","import React from 'react';\r\nimport './App.css';\r\nimport CardDeckRoutes from \"./Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../bll/store\";\r\nimport {RequestStatusType} from \"./app-reducer\";\r\nimport Preloader from \"../common/components/preloader/Preloader\";\r\nimport CardDeckRoutesUnauthorized from \"./unauthorizedRoutes\";\r\nimport SuperButton from \"../common/elements/button/SuperButton\";\r\nimport {logOutTC} from \"../features/login/login-reducer\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const onLogOut = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    return (\r\n        <div className='appStyle'>\r\n            {status === 'loading' && <Preloader/>}\r\n            {isLoggedIn ? <CardDeckRoutes/> : <CardDeckRoutesUnauthorized/>}\r\n            {isLoggedIn && <div style={{position: \"absolute\", marginLeft: '90%', top: '20px'}}>\r\n                <SuperButton onClick={onLogOut} style={{backgroundColor: '#f6f3f4'}}>Log out</SuperButton>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './bll/store';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n   ,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__1v3th\",\"modalContent\":\"Modal_modalContent__2HwXB\",\"title\":\"Modal_title__2XHUz\",\"inputModal\":\"Modal_inputModal__4COsi\",\"modalBtn\":\"Modal_modalBtn__1Cn7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__3i7gr\",\"formBlock\":\"login_formBlock__329ML\",\"content\":\"login_content__299gh\",\"formContent\":\"login_formContent__3stEt\",\"fromBlockTitle\":\"login_fromBlockTitle__35SY3\",\"formInputBox\":\"login_formInputBox__M9Q-X\",\"formInput\":\"login_formInput__RGnRm\",\"inputPasswordView\":\"login_inputPasswordView__2C-Vd\",\"errorStyle\":\"login_errorStyle__3eBN_\",\"checkbox\":\"login_checkbox__1AXFb\",\"formButtonBlock\":\"login_formButtonBlock__3QAyx\",\"btn\":\"login_btn__pNXwc\",\"textBlock\":\"login_textBlock__1Te15\",\"formBlockText\":\"login_formBlockText__LK_QT\",\"formLink\":\"login_formLink__1AuAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3J5Ne\",\"cardsContainer\":\"Cards_cardsContainer__1WLrN\",\"backLink\":\"Cards_backLink__1Nxfm\",\"arrowBack\":\"Cards_arrowBack__1NktC\",\"search\":\"Cards_search__1b6Xu\",\"searchForm\":\"Cards_searchForm__xPoR3\",\"addCard\":\"Cards_addCard__3sShf\",\"addDataCard\":\"Cards_addDataCard__Q-2oD\",\"cardsTable\":\"Cards_cardsTable__36hGc\",\"cards\":\"Cards_cards__TVWYJ\",\"cardsHeader\":\"Cards_cardsHeader__vqR_F\",\"noCards\":\"Cards_noCards__1PaG5\",\"card\":\"Cards_card__1q-0J\",\"infoItem\":\"Cards_infoItem__1t3Mu\",\"footer\":\"Cards_footer__3lv3I\",\"paginator\":\"Cards_paginator__2e4zG\",\"selector\":\"Cards_selector__2_mnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topHeader\":\"error404_topHeader__3gF2l\",\"starSec\":\"error404_starSec__29CQA\",\"animStar\":\"error404_animStar__1cRjr\",\"starThird\":\"error404_starThird__2B0QV\",\"starFourth\":\"error404_starFourth__37t04\",\"starFifth\":\"error404_starFifth__1139n\",\"clearfix\":\"error404_clearfix__Sedux\",\"error\":\"error404_error__gFxIk\",\"error__overlay\":\"error404_error__overlay__2OLyX\",\"errorContent\":\"error404_errorContent__1zj5T\",\"errorMessage\":\"error404_errorMessage__28Zid\",\"messageTitle\":\"error404_messageTitle__1D3WC\",\"messageText\":\"error404_messageText__1kzvD\",\"errorNav\":\"error404_errorNav__MTzVR\",\"eNavLink\":\"error404_eNavLink__c893M\",\"lamp\":\"error404_lamp__34Rum\",\"move\":\"error404_move__1WDWj\",\"cable\":\"error404_cable__Um8m4\",\"cover\":\"error404_cover__DesuJ\",\"inCover\":\"error404_inCover__ieuXT\",\"bulb\":\"error404_bulb__ZySuD\",\"light\":\"error404_light__1RiHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"passwordRestore_mainContainer__31mbj\",\"formContainer\":\"passwordRestore_formContainer__qnOW2\",\"redirectMessage\":\"passwordRestore_redirectMessage__2Pg05\",\"inputGroup\":\"passwordRestore_inputGroup__1hSIr\",\"input\":\"passwordRestore_input__1tHNQ\",\"svg\":\"passwordRestore_svg__3QvbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__3Abj8\",\"modal\":\"Modal_modal__2sUrC\",\"title\":\"Modal_title__31M7G\",\"modalBtnClose\":\"Modal_modalBtnClose__20UFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"registration_mainContainer__3Oqef\",\"formContainer\":\"registration_formContainer__152UY\",\"title\":\"registration_title__2OiUN\",\"form\":\"registration_form__1gOiY\",\"password\":\"registration_password__1jWJ4\",\"passwordControl\":\"registration_passwordControl__1JkAo\",\"btn\":\"registration_btn__UrGrX\",\"svg\":\"registration_svg__10jhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__10nFQ\",\"title\":\"header_title__1ZCY2\",\"navContainer\":\"header_navContainer___dPoT\",\"navLink\":\"header_navLink__1PFr2\",\"active\":\"header_active__3ZTqn\",\"navLinkContext\":\"header_navLinkContext__3Q_Yh\",\"cardsImg\":\"header_cardsImg__3Tm3X\",\"useImg\":\"header_useImg__3H6F7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__2pWOu\",\"btn\":\"Card_btn__zOi9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cardPacksPage_container__3RdhZ\",\"filterContainer\":\"cardPacksPage_filterContainer__2qIUW\",\"packsContainer\":\"cardPacksPage_packsContainer__38Uvb\",\"addNewPackButton\":\"cardPacksPage_addNewPackButton__2cGe7\",\"addNewPackInput\":\"cardPacksPage_addNewPackInput__1gSJW\",\"btn\":\"cardPacksPage_btn__3nJvZ\",\"selectPagination\":\"cardPacksPage_selectPagination__1sfhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"table_mainContainer__3UACX\",\"table\":\"table_table__3kUmT\",\"title\":\"table_title__3NQPV\",\"dataRow\":\"table_dataRow__2JOGT\",\"nameColumn\":\"table_nameColumn__1fuXt\",\"deleteButton\":\"table_deleteButton__1F2tA\",\"tableBody\":\"table_tableBody__y0Hrp\",\"tableHead\":\"table_tableHead__2io_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"learningPageModal_modalContainer__271ZJ\",\"modal\":\"learningPageModal_modal__39tl9\",\"noCards\":\"learningPageModal_noCards__2YZg2\",\"learnQuestion\":\"learningPageModal_learnQuestion__3GVFb\",\"btnContainer\":\"learningPageModal_btnContainer__1Wpfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3NATh\",\"pageNumber\":\"pagination_pageNumber__toOgG\",\"selectedPage\":\"pagination_selectedPage__1bVu5\",\"pages\":\"pagination_pages__kz5HT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__2R5rx\",\"profileBlock\":\"profile_profileBlock__11Gpr\",\"content\":\"profile_content__3Thck\",\"profileAvatar\":\"profile_profileAvatar__3ztJa\",\"profileName\":\"profile_profileName__2yCrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3NRkj\",\"errorInput\":\"SuperInputText_errorInput__2mqc3\",\"error\":\"SuperInputText_error__1chgk\",\"inputField\":\"SuperInputText_inputField__3vBnW\",\"classname\":\"SuperInputText_classname__13X7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRangeBlock\":\"DoubleRange_doubleRangeBlock__1VGH-\",\"span\":\"DoubleRange_span__2_PTY\",\"choose\":\"DoubleRange_choose__47_XJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3sDl4\",\"red\":\"SuperButton_red__1QNxE\",\"button\":\"SuperButton_button__Vmel5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2OxsS\",\"loading\":\"Preloader_loading__3qZQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__24Yqu\",\"option\":\"SuperSelect_option__NAEsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratingArrow\":\"SortArrow_ratingArrow__1QufI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__1BuQk\",\"buttonPos\":\"SuperEditableSpan_buttonPos__2c3AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"SelectPage_selectPage__3SojM\"};"],"sourceRoot":""}