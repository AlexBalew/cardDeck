{"version":3,"sources":["components/input/SuperInputText.module.css","components/header/header.module.css","components/button/SuperButton.module.css","components/select/SuperSelect.module.css","components/checkbox/SuperCheckbox.module.css","components/editableSpan/SuperEditableSpan.module.css","components/radioButton/SuperRadio.module.css","components/preloader/Preloader.module.css","components/pages/test/testCompsPage.module.css","components/header/header.tsx","components/pages/error404/error404.tsx","components/pages/login/login.tsx","components/pages/profile/profile.tsx","components/pages/registration/registration.tsx","components/pages/password/passwordRestore.tsx","components/pages/password/newPassword.tsx","components/button/SuperButton.tsx","components/input/SuperInput.tsx","components/editableSpan/SuperEditableSpan.tsx","components/select/SuperSelect.tsx","components/radioButton/SuperRadio.tsx","components/checkbox/SuperCheckbox.tsx","components/preloader/Preloader Gif.gif","components/preloader/Preloader.tsx","components/pages/test/testCompsPage.tsx","components/routes/cardDeckRoutes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","s","body","main","type","menu","to","Error404","props","Login","Profile","Registration","PasswordRestore","NewPassword","SuperButton","red","restProps","finalClassName","button","default","SuperInput","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","inputField","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","spanStyle","SuperSelect","options","onChangeOption","mappedOptions","map","name","i","option","currentValue","select","SuperRadio","onChangeCallback","classes","radioInput","checked","SuperCheckbox","onChangeChecked","checkbox","Preloader","preloader","src","Preloader3","alt","TestComps","PATH","CardDeckRoutes","path","element","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,8BAA8B,WAAa,mCAAmC,UAAY,oC,iBCApND,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,uB,gBCAjFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,OAAS,8B,iBCAjGD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,gBCAhED,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,SAAW,kC,mCCAlFD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,UAAY,uC,gBCA/ED,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,8B,6IC0BVC,MAvBf,WACI,OACI,qBAAKC,UAAWC,IAAEC,KAAlB,SACI,sBAAKF,UAAWC,IAAEE,KAAlB,UACI,uBAAOC,KAAK,aACZ,gCACI,sBAAMJ,UAAU,UAChB,sBAAMA,UAAU,WAChB,sBAAMA,UAAU,aAEpB,sBAAKA,UAAWC,IAAEI,KAAlB,UACI,cAAC,IAAD,CAASC,GAAG,SAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,gBAAZ,0BACA,cAAC,IAAD,CAASA,GAAG,WAAZ,qBACA,cAAC,IAAD,CAASA,GAAG,oBAAZ,8BACA,cAAC,IAAD,CAASA,GAAG,gBAAZ,0BACA,cAAC,IAAD,CAASA,GAAG,QAAZ,iC,OCdPC,EAAW,SAACC,GACrB,OACI,4CCFKC,EAAQ,SAACD,GAClB,OACI,yCCFKE,EAAU,SAACF,GACpB,OACI,2CCFKG,EAAe,SAACH,GACzB,OACI,gDCFKI,EAAkB,SAACJ,GAC5B,OACI,oDCFKK,EAAc,SAACL,GACxB,OACI,oD,+BCkBOM,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKf,EAGR,EAHQA,UACFgB,EAEN,mCACKC,EAAc,UAAMhB,IAAEiB,OAAR,YAAkBH,EAAMd,IAAEc,IAAMd,IAAEkB,QAAlC,YAA6CnB,GAEjE,OACI,oCACIA,UAAWiB,GACPD,K,uBCoCDI,EA1CuC,SAAC,GAUlD,EARGhB,KAQF,IAPEiB,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACWC,GAId,EAJG1B,UAIH,EAJc0B,eAERV,EAEN,6GAcKW,EAAkB,UAAM1B,IAAEwB,MAAR,YAAiBC,GAAgC,IACnEE,EAAmB,UAAM3B,IAAE4B,WAAR,YAAsBJ,EAAQxB,IAAE6B,WAAa7B,IAAE8B,WAA/C,YAA6DL,GAEtF,OACI,qCACI,mCACItB,KAAM,OACNiB,SApBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAiBrCX,WAfe,SAACS,GACxBT,GAAcA,EAAWS,GACzBR,GACa,UAAVQ,EAAEG,KACFX,KAYKxB,UAAW4B,GAEPZ,IAEPS,GAAS,sBAAMzB,UAAW2B,EAAjB,SAAsCF,Q,iBC0B7CW,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAd,EAKH,EALGA,QACAe,EAIH,EAJGA,UAEGvB,EAEN,8DAC+BwB,oBAAkB,GADjD,mBACMC,EADN,KACgBC,EADhB,OAE8DH,GAAa,GAArEI,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,cAAe5C,EAF/B,EAE+BA,UAAc6C,EAF7C,wDAoBKnB,EAAa,UAAMzB,IAAE6C,UAAR,YAAqB9C,GAAwB,IAEhE,OACI,mCACKyC,EAEO,cAAC,EAAD,aACIJ,WAAS,EACTC,OAnBG,SAACN,GAEpBU,GAAY,GACZJ,GAAUA,EAAON,IAiBDR,QAzBI,WAEpBkB,GAAY,GACZlB,GAAWA,MAwBSR,IAGR,8CACI4B,cArBU,SAACZ,GAE3BU,GAAY,GACZE,GAAiBA,EAAcZ,IAmBfhC,UAAW0B,GAEPmB,GAJR,aAOKF,GAAY3B,EAAUkB,Y,iBCpChCa,EAxBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACUC,GAGb,EAHG5B,SAGH,EAHa4B,gBACPjC,EAEN,uDAEKkC,EAAgBF,EAAQG,KAAI,SAACC,EAAMC,GACrC,OAAO,wBAAmCrD,UAAWC,IAAEqD,OAAQpB,MAAOkB,EAA/D,SAAsEA,GAAzDJ,EAAQK,GAAK,IAAMA,MAQ3C,OACI,gDAAQhC,SANa,SAACW,GACtB,IAAIuB,EAAevB,EAAEC,cAAcC,MACnCe,EAAeM,KAIyBvC,GAAxC,IAAmDhB,UAAWC,IAAEuD,OAAhE,SACKN,M,iBCgBEO,EAnCmC,SAAC,GAO9C,EALGrD,KAKH,EALSgD,KAKR,IAJEJ,EAIH,EAJGA,QAASd,EAIZ,EAJYA,MACCe,GAGb,EAHG5B,SAGH,EAHa4B,gBAIRS,GADL,6EACwB,SAAC1B,GACvBiB,EAAejB,EAAEC,cAAcC,SAI5BgB,EAAgBF,EAAQG,KAAI,SAACC,EAAMC,GACjC,OAAQ,gCACA,uBACIrD,UAAW2D,IAAQC,WACnBxD,KAAM,QACNiB,SAAUqC,EACVN,KAAK,UACLlB,MAAOkB,EACPS,QAAST,IAASlB,KAPVc,EAAQK,GAAK,IAAMA,MAc/C,OACI,8BACKH,K,iBCKEY,EAlCyC,SAAC,GASpD,EAPG1D,KAOF,IANEiB,EAMH,EANGA,SAAU0C,EAMb,EANaA,gBACV/D,EAKH,EALGA,UACA2C,GAIH,EALcjB,cAKd,EAJGiB,UAEG3B,EAEN,4FASKY,EAAmB,UAAM3B,IAAE+D,SAAR,YAAoBhE,GAAwB,IAErE,OACI,kCACI,mCACII,KAAM,WACNiB,SAda,SAACW,GACtBX,GACGA,EAASW,GAEZ+B,GAAmBA,EAAgB/B,EAAEC,cAAc4B,UAW3C7D,UAAW4B,GAEPZ,IAEP2B,GAAY,sBAAM3C,UAAWC,IAAEyB,cAAnB,SAAmCiB,Q,iBCxC7C,MAA0B,0CCU1BsB,EANG,WACd,OACI,qBAAKjE,UAAWC,IAAEiE,UAAWC,IAAKC,EAAYC,IAAK,e,iBCM9CC,EAAY,SAAC9D,GACtB,OAAQ,sBAAKR,UAAWC,IAAEE,KAAlB,UACA,8BACI,cAAC,EAAD,sBAEJ,8BACI,cAAC,EAAD,CAAmBoC,UAAW,CAACI,SAAU,0CAE7C,8BACI,cAAC,EAAD,CAAaK,QAAS,CAAC,IAAK,IAAK,KAAMC,eAAgB,iBAG3D,8BACI,cAAC,EAAD,CAAYD,QAAS,CAAC,IAAK,IAAK,KAAMC,eAAgB,iBAG1D,8BACI,cAAC,EAAD,MAEJ,8BACI,cAAC,EAAD,MAEJ,8BACI,cAAC,EAAD,UCxBHsB,EACF,SADEA,EAEK,gBAFLA,EAGA,WAHAA,EAIS,oBAJTA,EAKK,gBALLA,EAMH,QA8BKC,MA3Bf,WACI,OACI,8BAEI,eAAC,IAAD,WAII,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAUpE,GAAIiE,MAEzC,cAAC,IAAD,CAAOE,KAAMF,EAAYG,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAMF,EAAmBG,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAMF,EAAcG,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAMF,EAAuBG,QAAS,cAAC,EAAD,MAC7C,cAAC,IAAD,CAAOD,KAAMF,EAAmBG,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAMF,EAAWG,QAAS,cAAC,EAAD,MAXrC,gBAeI,cAAC,IAAD,CAAOA,QAAS,cAAC,EAAD,YCpBjBC,OAXf,WACE,OACE,qBAAK3E,UAAU,WAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,UCCG4E,GAZS,SAACC,GACnBA,GACF,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.fc60531c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__O0u3b\",\"errorInput\":\"SuperInputText_errorInput__1ic5a\",\"error\":\"SuperInputText_error__3MC62\",\"inputField\":\"SuperInputText_inputField__2zHIQ\",\"classname\":\"SuperInputText_classname__OBY2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"header_body__5rUwA\",\"main\":\"header_main__3jcRr\",\"menu\":\"header_menu__vzb6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1ftlU\",\"red\":\"SuperButton_red__8YfxX\",\"button\":\"SuperButton_button__3DgQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__RU-_Q\",\"option\":\"SuperSelect_option__37Dq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__2p6nj\",\"checkbox\":\"SuperCheckbox_checkbox__3B0_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__rO81v\",\"buttonPos\":\"SuperEditableSpan_buttonPos__Bb0Gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioInput\":\"SuperRadio_radioInput__dTAfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1yV9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"testCompsPage_main__3aQlM\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.main}>\r\n                <input type=\"checkbox\"/>\r\n                <div>\r\n                    <span className=\"first\"></span>\r\n                    <span className=\"second\"></span>\r\n                    <span className=\"third\"></span>\r\n                </div>\r\n                <nav className={s.menu}>\r\n                    <NavLink to='/login'>login</NavLink>\r\n                    <NavLink to='/registration'>registration</NavLink>\r\n                    <NavLink to='/profile'>profile</NavLink>\r\n                    <NavLink to='/restore-password'>restore password</NavLink>\r\n                    <NavLink to='/new-password'>new password</NavLink>\r\n                    <NavLink to='/test'>test comps</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\ntype Error404PropsType = {\r\n\r\n}\r\n\r\nexport const Error404 = (props: Error404PropsType) => {\r\n    return (\r\n        <div>\r\n            Error404\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype LoginPropsType = {\r\n\r\n}\r\n\r\nexport const Login = (props: LoginPropsType) => {\r\n    return (\r\n        <div>\r\n            LOGIN\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nexport const Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n\r\n}\r\n\r\nexport const Registration = (props: RegistrationPropsType) => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype PasswordRestorePropsType = {\r\n\r\n}\r\n\r\nexport const PasswordRestore = (props: PasswordRestorePropsType) => {\r\n    return (\r\n        <div>\r\n            Restore password\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype NewPasswordPropsType = {\r\n\r\n}\r\n\r\nexport const NewPassword = (props: NewPasswordPropsType) => {\r\n    return (\r\n        <div>\r\n            Set new password\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.inputField} ${spanClassName}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInput\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInput from '../input/SuperInput'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.spanStyle} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInput\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: string[]\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions = options.map((name, i) => {\r\n        return <option key={options[i] + ' ' + i} className={s.option} value={name}>{name}</option>;\r\n    })\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let currentValue = e.currentTarget.value\r\n        onChangeOption(currentValue)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} className={s.select}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport classes from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options: string[]\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions = options.map((name, i) => {\r\n            return  <label key={options[i] + '-' + i}>\r\n                    <input\r\n                        className={classes.radioInput}\r\n                        type={'radio'}\r\n                        onChange={onChangeCallback}\r\n                        name='options'\r\n                        value={name}\r\n                        checked={name === value}\r\n                    />\r\n                    {}\r\n                </label>\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div >\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked  (сделано)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","export default __webpack_public_path__ + \"static/media/Preloader Gif.69136ec1.gif\";","import s from \"./Preloader.module.css\";\r\nimport Preloader3 from './Preloader Gif.gif';\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img className={s.preloader} src={Preloader3} alt={'preloader'}/>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport SuperButton from \"../../button/SuperButton\";\r\nimport SuperEditableSpan from \"../../editableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../select/SuperSelect\";\r\nimport SuperRadio from \"../../radioButton/SuperRadio\";\r\nimport SuperCheckbox from \"../../checkbox/SuperCheckbox\";\r\nimport SuperInput from \"../../input/SuperInput\";\r\nimport Preloader from \"../../preloader/Preloader\";\r\nimport s from './testCompsPage.module.css'\r\n\r\ntype TestCompsPropsType = {}\r\n\r\nexport const TestComps = (props: TestCompsPropsType) => {\r\n    return (<div className={s.main}>\r\n            <div>\r\n                <SuperButton>Hello</SuperButton>\r\n            </div>\r\n            <div>\r\n                <SuperEditableSpan spanProps={{children: 'double click for the text changing'}}/>\r\n            </div>\r\n            <div>\r\n                <SuperSelect options={['1', '2', '3']} onChangeOption={() => {\r\n                }}/>\r\n            </div>\r\n            <div>\r\n                <SuperRadio options={['1', '2', '3']} onChangeOption={() => {\r\n                }}/>\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n            <div>\r\n                <SuperInput/>\r\n            </div>\r\n            <div>\r\n                <Preloader/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Navigate, Route, Routes} from 'react-router-dom'\r\nimport { Error404 } from '../pages/error404/error404'\r\nimport {Login} from '../pages/login/login'\r\nimport { Profile } from '../pages/profile/profile'\r\nimport { Registration } from '../pages/registration/registration'\r\nimport {PasswordRestore} from \"../pages/password/passwordRestore\";\r\nimport {NewPassword} from \"../pages/password/newPassword\";\r\nimport {TestComps} from \"../pages/test/testCompsPage\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RESTORE_PASSWORD: '/restore-password',\r\n    NEW_PASSWORD: '/new-password',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction CardDeckRoutes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Routes>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совпадение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} element={<PasswordRestore/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} element={<NewPassword/>}/>\r\n                <Route path={PATH.TEST} element={<TestComps/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route element={<Error404/>}/>\r\n\r\n            </Routes>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeckRoutes\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Header from './components/header/header';\nimport CardDeckRoutes from './components/routes/cardDeckRoutes';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className='appStyle'>\n        <HashRouter>\n            <Header/>\n            <CardDeckRoutes/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}