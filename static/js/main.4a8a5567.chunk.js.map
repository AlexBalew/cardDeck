{"version":3,"sources":["assets/password/viewPassword.png","assets/password/hiddenPassword.png","common/elements/button/SuperButton.tsx","api/api.ts","api/login-api.ts","api/password-api.ts","features/password/password-reducer.ts","app/app-reducer.ts","features/login/login-reducer.ts","features/login/login.tsx","assets/profile/userImg.png","assets/preloader/Eclipse200px.gif","common/components/preloader/Preloader.tsx","features/profile/profile.tsx","common/elements/input/SuperInput.tsx","features/password/newPassword.tsx","common/components/header/header.tsx","features/password/successfulRequestMessage.tsx","features/password/changePassword.tsx","features/profile/profile-reducer.ts","api/registration-api.ts","features/registration/registration-reducer.ts","api/cards-api.ts","features/cards/cards-reducer.ts","api/packs-api.ts","features/cardPacks/cardPacks-reducer.ts","bll/store.ts","features/cardPacks/table.tsx","common/components/pagination/pagination.tsx","common/elements/doubleRange/DoubleRange.tsx","common/elements/select/SuperSelect.tsx","common/components/selectPage/SelectPage.tsx","features/cardPacks/cardPacksPage.tsx","features/password/passwordRestore.tsx","features/cards/card/Card.tsx","features/cards/Cards.tsx","common/components/error404/error404.tsx","app/Routes.tsx","features/registration/registration.tsx","app/unauthorizedRoutes.tsx","app/App.tsx","reportWebVitals.ts","index.tsx","features/login/login.module.css","common/components/error404/error404.module.css","features/cards/Cards.module.css","features/password/passwordRestore.module.css","features/registration/registration.module.css","features/cards/card/Card.module.css","features/cardPacks/cardPacksPage.module.css","features/profile/profile.module.css","common/elements/input/SuperInputText.module.css","features/cardPacks/table.module.css","common/components/pagination/pagination.module.css","common/elements/doubleRange/DoubleRange.module.css","common/elements/button/SuperButton.module.css","common/components/header/header.module.css","common/components/preloader/Preloader.module.css","common/elements/select/SuperSelect.module.css","common/components/selectPage/SelectPage.module.css"],"names":["SuperButton","red","className","restProps","finalClassName","s","button","default","instance","axios","create","baseURL","withCredentials","loginAPI","post","delete","email","password","rememberMe","restoreAPI","eMail","from","message","newPassword","token","resetPasswordToken","initState","isSuccessfulRequest","error","setRequestResultAC","type","setErrorAC","sendCurrentEmailTC","dispatch","a","setAppStatusAC","response","data","console","log","initialState","status","_id","isLoggedIn","name","avatar","isLoggedInAC","Login","useDispatch","useSelector","state","login","useState","setEmail","setPassword","setRememberMe","showPassword","setShowPassword","passwordType","setPasswordTypeType","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","handlerBlur","e","currentTarget","value","useEffect","to","PATH","PROFILE","loginContainer","formBlock","content","fromBlockTitle","formContent","onSubmit","payload","loginTC","errorStyle","formInputBox","formInput","onChange","test","String","toLowerCase","onBlur","currentPasswordValue","length","inputPasswordView","src","viewPassword","hiddenPassword","alt","onClick","id","checkbox","htmlFor","formButtonBlock","btn","disabled","textBlock","formBlockText","RESTORE_PASSWORD","formLink","REGISTRATION","Preloader","loading","preloader","Profile","app","profile","setMyName","setMyAvatar","profileContainer","profileBlock","profileAvatar","userDefaultImg","LOGIN","SuperInput","onChangeText","onKeyPress","onEnter","spanClassName","ref","finalSpanClassName","finalInputClassName","superInput","errorInput","inputField","key","NewPassword","requestStatus","appStatus","useParams","setValue","mainContainer","formContainer","inputGroup","input","placeholder","style","border","setNewPasswordTC","Header","body","main","menu","SuccessfulRequestMessage","width","ChangePassword","registApi","isRegistry","backError","cardsAPI","cardsPack_id","pageCount","page","get","question","answer","card","packName","cards","packUserId","cardsTotalCount","minGrade","maxGrade","tokenDeathTime","activeModal","searchQuestion","getCards","packId","getState","currentPage","packsOnPage","then","setCardsAC","catch","packsAPI","user_id","searchedName","settingSlider","min","max","params","cardsPack","cardPacks","cardsCount","created","updated","user_name","cardPacksTotalCount","maxCardsCount","minCardsCount","setCardPacksDataAC","setCurrentPageAC","setCardsCountAC","minSliderCards","maxSliderCards","getPacksTC","myId","packs","rootReducer","combineReducers","action","registration","filter","cardPack","store","createStore","applyMiddleware","thunk","useAppSelector","window","CardPacksTable","onDeletePack","deletePackTC","table","map","title","index","pack","dataRow","CARDS","Pagination","numberOfPagesInOnePortion","portionNumber","setPortionNumber","inputPage","setInputPage","totalAmountOfPages","Math","ceil","pages","i","push","numberOfPortions","currentPortion","leftPortionPageNumber","rightPortionPageNumber","pagination","selectedPage","pageNumber","onSetNewPage","marginLeft","marginRight","onSetNewPageByButton","SuperDoubleRange","value1","value2","value3","setValue1","setValue2","setValue3","searchTimer","setTimeout","clearTimeout","Box","sx","height","Slider","step","size","event","newValue","activeThumb","Array","isArray","color","disableSwap","orientation","SuperSelect","options","onChangeOption","mappedOptions","option","currentValue","select","SelectPage","onChangeOptions","description","selectPage","CardPacksPage","newName","setNewName","searchName","setSearchName","React","onClickNewName","setSearchedNameAC","container","filterContainer","doubleRangeBlock","choose","span","packsContainer","addNewPackInput","search","addNewPackButton","selectPagination","setPageCountAC","PasswordRestore","svg","href","viewBox","d","Card","authUserId","handlerDeleteCard","cardId","deleteCard","cardContainer","col","Cards","navigate","useNavigate","setQuestion","setAnswer","setSearchQuestion","handlerCreateCard","createCards","setSearchedQuestionAC","cardsContainer","backLink","arrowBack","addDataCard","addCard","cardsTable","cardsHeader","infoItem","el","noCards","footer","selector","Error404","background","target","topHeader","starSec","starThird","starFourth","starFifth","lampWrap","lamp","cable","cover","inCover","bulb","light","errorContent","errorMessage","messageTitle","messageText","errorNav","eNavLink","CHANGE_PASSWORD","NEW_PASSWORD_WITH_TOKEN","TEST","NOT_FOUND","PACKS_LIST","CardDeckRoutes","location","useLocation","pathname","path","element","Registration","confirm","setConfirm","setType","isPasswordEqual","setIsPasswordEqual","handleShowPassword","handlePasswordsMatch","form","preventDefault","registryTC","display","marginTop","passwordControl","CardDeckRoutesUnauthorized","App","Promise","all","position","top","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+MAAe,MAA0B,yCCA1B,MAA0B,2C,uCC2B1BA,EAjBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKC,EAGR,EAHQA,UACFC,EAEN,mCACKC,EAAc,UAAMC,IAAEC,OAAR,YAAkBL,EAAMI,IAAEJ,IAAMI,IAAEE,QAAlC,YAA6CL,GAEjE,OACI,oCAEIA,UAAWE,GACPD,K,wCCjBHK,E,OAAWC,EAAMC,OAAO,CACjCC,QAHa,uCAIbC,iBAAiB,ICqBRC,EAAW,WAEhB,OAAOL,EAASM,KAAwB,WAAY,GAAI,KAFnDD,EAAW,WAKhB,OAAOL,EAASO,OAAwC,WAAY,KAL/DF,EAAW,SAOdG,EAAeC,EAAkBC,GACnC,OAAOV,EAASM,KAAT,cAAgD,CAACE,QAAOC,WAAUC,cAAa,KClCjFC,EAAa,SACfC,GACH,OAAOZ,EAASM,KAAsC,eAAgB,CAClEE,MAAOI,EACPC,KAAK,qBAAD,OAAuBD,EAAvB,KACJE,QAAQ,8LACT,KANEH,EAAa,SAQVI,EAAqBC,GAC7B,OAAOhB,EAASM,KAAsC,yBAA0B,CAC5EG,SAAUM,EACVE,mBAAoBD,GACrB,KCJPE,EAAuB,CACvBC,qBAAqB,EACrBC,MAAO,MAqBEC,EAAqB,SAACF,GAC/B,MAAO,CACHG,KAAM,iCACNH,wBAMKI,EAAa,SAACH,GACvB,MAAO,CACHE,KAAM,oBACNF,UAKKI,EAAqB,SAAChB,GAAD,8CAAmB,WAAOiB,GAAP,eAAAC,EAAA,sEAE7CD,EAASE,EAAe,YAFqB,SAGvChB,EAAkBH,GAHqB,OAI7CiB,EAASJ,GAAmB,IAC5BI,EAASE,EAAe,cALqB,gDAOvCP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,EAAWH,IACpBK,EAASE,EAAe,cAZqB,yDAAnB,uDCtC5BK,EAAiC,CACnCC,OAAQ,OACRC,IAAK,IAkBIP,EAAiB,SAACM,GAC3B,MAAO,CACHX,KAAM,iBACNW,WCpBJf,EAAuB,CACvBiB,YAAY,EACZD,IAAK,GACL1B,MAAO,KACP4B,KAAM,KACNC,OAAQ,IA2BCC,EAAe,SAACH,GACzB,MAAO,CACHb,KAAM,yBACNa,eCpCKI,EAAQ,WAEjB,IAAMd,EAAWe,cACXL,EAAaM,aAAmC,SAACC,GAAD,OAAWA,EAAMC,MAAMR,cAHtD,EAKGS,mBAAiB,IALpB,mBAKhBpC,EALgB,KAKTqC,EALS,OAMSD,mBAAiB,IAN1B,mBAMhBnC,EANgB,KAMNqC,EANM,OAOaF,oBAAkB,GAP/B,mBAOhBlC,EAPgB,KAOJqC,EAPI,OAQiBH,oBAAkB,GARnC,mBAQhBI,EARgB,KAQFC,EARE,OASqBL,mBAAS,YAT9B,mBAShBM,EATgB,KASFC,EATE,OAWaP,oBAAS,GAXtB,mBAWhBQ,EAXgB,KAWJC,EAXI,OAYmBT,oBAAS,GAZ5B,mBAYhBU,EAZgB,KAYDC,EAZC,OAeaX,mBAAS,IAftB,mBAehBY,EAfgB,KAeJC,EAfI,OAgBmBb,mBAAS,IAhB5B,mBAgBhBc,EAhBgB,KAgBDC,EAhBC,OAiBWf,oBAAS,GAjBpB,oBAiBhBgB,GAjBgB,MAiBLC,GAjBK,MAwBjBC,GAAc,SAACC,GACjB,OAAQA,EAAEC,cAAcC,OACpB,IAAK,QACDZ,GAAc,GACd,MACJ,IAAK,WACDE,GAAiB,KA8C7B,OAVAW,qBAAU,WAEHL,IADAL,IAAcE,KAKlB,CAACF,EAAYE,IAIZvB,EACO,cAAC,IAAD,CAAUgC,GAAIC,GAAKC,UAK1B,qBAAK3E,UAAWG,IAAEyE,eAAlB,SACI,qBAAK5E,UAAWG,IAAE0E,UAAlB,SACI,sBAAK7E,UAAWG,IAAE2E,QAAlB,UACI,oBAAI9E,UAAWG,IAAE4E,eAAjB,0BAEA,uBAAM/E,UAAWG,IAAE6E,YAAaC,SAnE3B,SAACZ,GAClBtC,ED2Be,SAACjB,EAAeC,EAAkBC,GAAlC,8CAAwE,WAAOe,GAAP,iBAAAC,EAAA,sEAEvFD,EAASE,EAAe,YAF+D,SAGlEtB,EAAeG,EAAOC,EAAUC,GAHkC,OAGnFkB,EAHmF,OAIvFH,EAASE,EAAe,cACxBF,EAZG,CACHH,KAAM,eACNsD,QAUiBhD,EAASC,KAT1BM,YASgC,IALuD,gDAOjFf,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBW,EAASF,EAAWH,IACpBK,EAASE,EAAe,WAX+D,yDAAxE,sDC3BNkD,CAAQrE,EAAOC,EAAUC,KAkEtB,UACI,gCAAS0C,GAAcI,EAAc,qBAAK9D,UAAWG,IAAEiF,WAAlB,SAA+BtB,IAAoB,UACxF,qBAAK9D,UAAWG,IAAEkF,aAAlB,SACI,uBAAO3C,KAAK,QACL6B,MAAOzD,EACPc,KAAK,QACL5B,UAAWG,IAAEmF,UACbC,SA5DN,SAAClB,GACtBlB,EAASkB,EAAEC,cAAcC,OACd,mCACJiB,KAAKC,OAAOpB,EAAEC,cAAcC,OAAOmB,eACtC3B,EAAc,IAEdA,EAAc,0BAuDS4B,OAAQvB,OAInB,sCAAUR,GAAiBI,EAAiB,sBAAKhE,UAAWG,IAAEiF,WAAlB,cAAgCpB,KAAuB,WAAnG,OACA,sBAAKhE,UAAWG,IAAEkF,aAAlB,UAEI,uBAAO3C,KAAK,WACL6B,MAAOxD,EACPa,KAAM4B,EACNxD,UAAWG,IAAEmF,UACbC,SA/DH,SAAClB,GACzB,IAAIuB,EAAuBvB,EAAEC,cAAcC,MAC3CnB,EAAYwC,GACTA,EAAqBC,OAAS,EAC7B5B,EAAiB,0CAEjBA,EAAiB,KA0DM0B,OAAQvB,KAEf,qBAAKpE,UAAWG,IAAE2F,kBACbC,IAAKzC,EAAe0C,EAAeC,EACnCC,IAAI,MACJC,QAzDF,WAEnB1C,EADAH,EACoB,OAEA,YAExBC,GAAiBD,SAqDD,gCACI,uBAAO1B,KAAK,WAAWwE,GAAG,QAAQpG,UAAWG,IAAEkG,SACxCd,SAhER,WACpBlC,GAAerC,MAgEM,uBAAOsF,QAAQ,QAAf,yBAIJ,qBAAKtG,UAAWG,IAAEoG,gBAAlB,SAEI,cAAC,EAAD,CAAa3E,KAAK,SACL5B,UAAWG,IAAEqG,IACbC,UAAWvC,GAFxB,wBAOR,sBAAKlE,UAAWG,IAAEuG,UAAlB,UACI,gCACI,sBAAM1G,UAAWG,IAAEwG,cAAnB,8BACA,cAAC,IAAD,CAASlC,GAAIC,GAAKkC,iBAAkB5G,UAAWG,IAAE0G,SAAjD,2BAEJ,gCACI,sBAAM7G,UAAWG,IAAEwG,cAAnB,mCACA,cAAC,IAAD,CAASlC,GAAIC,GAAKoC,aAAc9G,UAAWG,IAAE0G,SAA7C,mC,iBCvJb,MAA0B,oC,iBCA1B,MAA0B,yCCe1BE,EAVG,WAEd,OACI,qBAAK/G,UAAWG,IAAE6G,QAAlB,SACI,qBAAKhH,UAAWG,IAAE8G,UAAWlB,IAAKkB,EAAWf,IAAK,iBCCjDgB,EAAU,WACFpE,cAAjB,IAEML,EAAaM,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMR,cACrEF,EAASQ,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,UACzEG,EAAOK,aAAkC,SAAAC,GAAK,OAAIA,EAAMoE,QAAQ1E,QAChEC,EAASI,aAAkC,SAAAC,GAAK,OAAIA,EAAMoE,QAAQzE,UAN/C,EASGO,mBAAS,IATZ,mBASVmE,GATU,aAUOnE,mBAAiB,yBAVxB,mBAURoE,GAVQ,WAmBzB,OANA9C,qBAAU,WACN6C,EAAU3E,GACNC,GACA2E,EAAY3E,KAEjB,CAACD,EAAMC,IACK,YAAXJ,EACO,cAAC,EAAD,IAGNE,EAKD,qBAAKzC,UAAWG,IAAEoH,iBAAlB,SACI,qBAAKvH,UAAWG,IAAEqH,aAAlB,SACI,sBAAKxH,UAAWG,IAAE2E,QAAlB,UACI,qBAAK9E,UAAWG,IAAEsH,cAAlB,SACI,qBAAK1B,IAAG,UAAgB,0BAAXpD,EAAqCA,EAAS+E,GAAkBxB,IAAI,UAErF,8BAAMxD,WAVX,cAAC,IAAD,CAAU+B,GAAIC,GAAKiD,S,kCCwBnBC,EA3CuC,SAAC,GAUjD,IAREhG,EAQH,EARGA,KACA2D,EAOH,EAPGA,SAAUsC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZrG,EAKH,EALGA,MACWsG,GAId,EAJGhI,UAIH,EAJcgI,eAAeC,EAI7B,EAJ6BA,IAEvBhI,EAEN,mHAcKiI,EAAkB,UAAM/H,IAAEuB,MAAR,YAAiBsG,GAAgC,IACnEG,EAAmB,UAAMhI,IAAEiI,WAAR,YAAsB1G,EAAQvB,IAAEkI,WAAalI,IAAEmI,WAA/C,YAA6DN,GAEtF,OACI,qCACI,mCACIC,IAAKA,EACLrG,KAAMA,EACN2D,SArBa,SAAClB,GACtBkB,GACGA,EAASlB,GAEZwD,GAAgBA,EAAaxD,EAAEC,cAAcC,QAkBrCuD,WAhBe,SAACzD,GACxByD,GAAcA,EAAWzD,GACzB0D,GACa,UAAV1D,EAAEkE,KACFR,KAaK/H,UAAWmI,GAEPlI,IAEPyB,GAAS,sBAAM1B,UAAWkI,EAAjB,SAAsCxG,QC1C/C8G,EAAc,WAEvB,IAAIzG,EAAWe,cACX2F,EAAgB1F,aAAmC,SAAAC,GAAK,OAAIA,EAAMjC,SAASU,uBAC3EiH,EAAY3F,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,UAC1EE,EAAaM,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMR,cAEpEnB,EAASqH,cAATrH,MAPsB,EASH4B,mBAAiB,IATd,mBAStBqB,EATsB,KASfqE,EATe,KAoB7B,OAAIH,IAAkBhG,EACX,cAAC,IAAD,CAAUgC,GAAI,WACdgE,GAAiBhG,EACjB,cAAC,IAAD,CAAUgC,GAAI,aAIrB,qBAAKzE,UAAWG,IAAE0I,cAAlB,SACI,sBAAK7I,UAAWG,IAAE2I,cAAlB,qCAEI,sBAAK9I,UAAWG,IAAE4I,WAAlB,UACI,qBAAK/I,UAAWG,IAAE6I,MAAlB,SACI,cAAC,EAAD,CAAYpH,KAAK,WACLc,KAAK,cACLuG,YAAY,eACZ1D,SAxBP,SAAClB,GACtB,IAAIE,EAAQF,EAAEC,cAAcC,MAC5BqE,EAASrE,IAuBmB2E,MAAO,CAACC,OAAQ,uBAGhC,8BACI,cAAC,EAAD,CAAazG,KAAK,mBACLyD,QAzBP,WACtBpE,ETuCwB,SAACV,EAAqBC,GAAtB,8CAAwC,WAAOS,GAAP,eAAAC,EAAA,sEAEhED,EAASE,EAAe,YAFwC,SAG1DhB,EAAuBI,EAAaC,GAHsB,OAIhES,EAASJ,GAAmB,IAC5BI,EAASE,EAAe,cALwC,gDAO1DP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,EAAWH,IACpBK,EAASE,EAAe,cAZwC,yDAAxC,sDSvCfmH,CAAiB7E,EAAOjD,KAyBJmF,SAAwB,YAAdiC,EAFvB,6B,oBCzBTW,OAtBf,WAGI,OACI,qBAAKrJ,UAAWG,KAAEmJ,KAAlB,SACI,sBAAKtJ,UAAWG,KAAEoJ,KAAlB,UACI,uBAAO3H,KAAK,aACZ,gCACI,yBACA,yBACA,4BAEJ,sBAAK5B,UAAWG,KAAEqJ,KAAlB,UACI,cAAC,IAAD,CAAM/E,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,6BACA,cAAC,IAAD,CAAMA,GAAG,cAAT,4BChBPgF,GAA2B,WACpC,OACI,qBAAKzJ,UAAWG,IAAE0I,cAAlB,SACI,sBAAK7I,UAAWG,IAAE2I,cAAlB,UAEI,qBAAK/C,IAAI,yEAAyEmD,MAAO,CAACQ,MAAO,SAAUxD,IAAI,WAC/G,+CAGA,6FCAHyD,GAAiB,WAE1B,IAAI5H,EAAWe,cACX2F,EAAgB1F,aAAmC,SAAAC,GAAK,OAAIA,EAAMjC,SAASU,uBAE3EiH,GADQ3F,aAA4C,SAAAC,GAAK,OAAIA,EAAMjC,SAASW,SAChEqB,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,WALhD,EAONW,mBAAiB,IAPX,mBAOzBqB,EAPyB,KAOlBqE,EAPkB,KAiBhC,OAAIH,EACO,cAAC,GAAD,IAIP,qBAAKzI,UAAWG,IAAE0I,cAAlB,SACI,sBAAK7I,UAAWG,IAAE2I,cAAlB,UACI,6FAGA,8BACI,cAAC,EAAD,CAAYlH,KAAK,QACVc,KAAK,eACLuG,YAAY,cACZ1D,SAtBG,SAAClB,GACvB,IAAIE,EAAQF,EAAEC,cAAcC,MAC5BqE,EAASrE,IAqBU2E,MAAO,CAACC,OAAQ,uBAG3B,8BACI,cAAC,EAAD,CAAazG,KAAK,mBACVyD,QAxBG,WACvBpE,EAASD,EAAmByC,KAwBRkC,SAAwB,YAAdiC,EAFlB,0B,kBClCdlH,GAAY,CACdgB,IAAK,GACL1B,MAAO,KACP4B,KAAM,GACNC,OAAQ,IChBCiH,GAAY,SACZ9I,EAAeC,GACpB,OAAOT,EAASM,KAAT,gBAAgE,CAACE,QAAOC,YAAW,KCG5FS,GAAY,CACdqI,YAAY,EACZC,UAAW,IAsBFjI,GAAa,SAACH,GAAD,MAAoB,CAACE,KAAM,yBAA0BF,UC5BlEqI,GAAW,SACXC,GAAgE,IAA1CC,EAAyC,uDAArB,EAAGC,EAAkB,uDAAH,EACjE,OAAO5J,EAAS6J,IAAT,kCACqBH,EADrB,sBAC+CC,EAD/C,iBACiEC,EADjE,YAFFH,GAAW,SAKTC,EAAsBI,EAAkBC,GAC/C,OAAO/J,EAASM,KAAT,aACQ,CAAE0J,KAAM,CAACN,eAAcI,WAAUC,aAP3CN,GAAW,SASTC,GACP,OAAO1J,EAASO,OAAT,wBACWmJ,KCPpBxI,GAAY,CACd+I,SAAU,GACVC,MAAO,GACPC,WAAY,GACZP,KAAM,EACND,UAAW,GACXS,gBAAiB,EACjBC,SAAU,EACVC,SAAU,EACVtJ,MAAO,GACPuJ,eAAgB,EAChBC,aAAa,EACbC,eAAgB,IAuCPC,GAAW,SAACC,GAAD,OACpB,SAAClJ,EAAUmJ,GACPnJ,EAASE,EAAe,YAExB,IAAMuI,EAAQU,IAAWV,MACnBW,EAAcX,EAAMN,KACpBkB,EAAcZ,EAAMP,UAE1BF,GAAkBkB,EAAQG,EAAaD,GAClCE,MAAK,SAAAnJ,GACFH,EAlBU,SAACyI,GAAD,MAA6B,CAAC5I,KAAM,yBAA0B4I,SAkB/Dc,CAAWpJ,EAASC,KAAKqI,QAClCzI,EAASE,EAAe,iBAE3BsJ,OAAM,SAAClH,GACUA,EAAEnC,SACVmC,EAAEnC,SAASC,KAAKT,MACf2C,EAAEjD,QACTW,EAASE,EAAe,gBCpD3BuJ,GAAW,SACXvB,EAAmBC,EAAcuB,EAAkBC,EAAuBC,GAC3E,OAAOrL,EAAS6J,IAAT,iCAAsDwB,QAAtD,IAAsDA,OAAtD,EAAsDA,EAAeC,IAArE,uBAAgFD,QAAhF,IAAgFA,OAAhF,EAAgFA,EAAeE,IAA/F,qBAA+GH,GAClH,CAACI,OAAQ,CAAC7B,YAAWC,OAAMuB,cAH9BD,GAAW,SAKT9I,GACP,OAAOpC,EAASM,KAAT,cAAmD,CAACmL,UAAW,CAACrJ,SAAQ,KAN1E8I,GAAW,SAQTpF,GACP,OAAO9F,EAASO,OAAT,yBAAwDuF,GAAM,KCtBzE5E,GAAuB,CACvBwK,UAAW,CAAC,CACRxJ,IAAK,GACLiJ,QAAS,GACT/I,KAAM,GACNuJ,WAAY,EACZC,QAAS,GACTC,QAAS,GACTC,UAAW,KAEfC,oBAAqB,EACrBC,cAAe,EACfC,cAAe,EACfrC,KAAM,EACND,UAAW,GACX0B,cAAe,CACXC,IAAK,EACLC,IAAK,KAETH,aAAc,IAmCLc,GAAqB,SAACrK,GAC/B,MAAO,CACHP,KAAM,2BACNO,SAIKN,GAAa,SAACH,GACvB,MAAO,CACHE,KAAM,sBACNF,UAkBK+K,GAAmB,SAACvC,GAC7B,MAAO,CACHtI,KAAM,6BACNsD,QAASgF,IA0BJwC,GAAkB,SAACC,EAAwBC,GAEpD,MAAO,CACHhL,KAAM,4BACNsD,QAAS,CAACyH,iBAAgBC,oBAMrBC,GAAa,SAACC,GAAD,8CAAiC,WAAO/K,EAAUmJ,GAAjB,2BAAAlJ,EAAA,+DACFkJ,IAAW6B,MAA3D9C,EADkD,EAClDA,UAAWC,EADuC,EACvCA,KAAMwB,EADiC,EACjCA,aAAcC,EADmB,EACnBA,cADmB,SAGnD5J,EAASE,EAAe,YAH2B,SAI9BuJ,GAAkBvB,EAAWC,EAAM4C,EAAMpB,EAAcC,GAJzB,OAI/CzJ,EAJ+C,OAKnDH,EAASyK,GAAmBtK,EAASC,OACrCJ,EAASE,EAAe,cAN2B,kDAQ7CP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,GAAWH,IACpBK,EAASE,EAAe,cAb2B,0DAAjC,yDCvHpB+K,GAAcC,aAAgB,CAChClM,SpBG8B,WAAsD,IAArDiC,EAAoD,uDAA5CxB,EAAW0L,EAAiC,uCACnF,OAAQA,EAAOtL,MACX,IAAK,iCACD,OAAO,2BAAIoB,GAAX,IAAkBvB,oBAAqByL,EAAOzL,sBAElD,IAAK,oBACD,OAAO,2BAAIuB,GAAX,IAAkBtB,MAAOwL,EAAOxL,QAEpC,QACI,OAAOsB,IoBXfC,MlBSwB,WAAsD,IAArDD,EAAoD,uDAA5CxB,EAAW0L,EAAiC,uCAC7E,OAAQA,EAAOtL,MACX,IAAK,yBACD,OAAO,2BAAIoB,GAAX,IAAkBP,WAAYyK,EAAOzK,aAEzC,IAAK,eACD,OAAO,2BACAO,GADP,IAEIN,KAAMwK,EAAOhI,QAAQxC,KACrBC,OAAQuK,EAAOhI,QAAQvC,OACvB7B,MAAOoM,EAAOhI,QAAQpE,MACtB2B,WAAYyK,EAAOzK,aAG3B,QACI,OAAOO,IkBvBfoE,QPM0B,WAAuE,IAAtEpE,EAAqE,uDAA/CxB,GAAW0L,EAAoC,uCAChG,OAAQA,EAAOtL,MACX,IAAK,+BACD,OAAO,2BACAoB,GACAkK,EAAO/K,MAElB,QACI,OAAOa,IObfmK,aLH+B,WAA0D,IAAzDnK,EAAwD,uDAAhDxB,GAAW0L,EAAqC,uCACxF,OAAQA,EAAOtL,MACX,IAAK,uBACD,OAAO,2BAAIoB,GAAX,IAAkB6G,YAAY,IAClC,IAAK,yBACD,OAAO,2BAAI7G,GAAX,IAAkB8G,UAAWoD,EAAOxL,QACxC,QACI,OAAOsB,IKHfmE,InBAsB,WAAoF,IAAnFnE,EAAkF,uDAAxDV,EAAc4K,EAA0C,uCACzG,OAAQA,EAAOtL,MACX,IAAK,iBACD,OAAO,2BAAIoB,GAAX,IAAkBT,OAAQ2K,EAAO3K,SACrC,IAAK,kBACD,OAAO,2BAAIS,GAAX,IAAkBR,IAAK0K,EAAO9G,KAClC,QACI,OAAOpD,ImBNfwH,MHKwB,WAAsE,IAArExH,EAAoE,uDAAjDxB,GAAW0L,EAAsC,uCAC7F,OAAQA,EAAOtL,MACX,IAAK,yBACD,OAAO,2BACAoB,GADP,IAEIwH,MAAO0C,EAAO1C,QAEtB,IAAK,8BACD,OAAO,2BAAIxH,GAAX,IAAkBiH,UAAWiD,EAAOjD,YAExC,IAAK,+BACD,OAAO,2BAAIjH,GAAX,IAAkB+H,eAAgBmC,EAAOnC,iBAE7C,QACI,OAAO/H,IGlBf+J,MDa4B,WAAsD,IAArD/J,EAAoD,uDAA5CxB,GAAW0L,EAAiC,uCACjF,OAAQA,EAAOtL,MACX,IAAK,2BACD,OAAO,2BAAIoB,GAAUkK,EAAO/K,MAEhC,IAAK,2BACD,OAAO,2BAAIa,GAAX,IAAkBiH,UAAWiD,EAAOhI,UAExC,IAAK,gCACD,OAAO,2BAAIlC,GAAX,IAAkBuJ,cAAeW,EAAOhI,UAE5C,IAAK,gCACD,OAAO,2BAAIlC,GAAX,IAAkBsJ,cAAeY,EAAOhI,UAE5C,IAAK,6BACD,OAAO,2BAAIlC,GAAX,IAAkBkH,KAAMgD,EAAOhI,UAEnC,IAAK,wBACD,OAAO,2BAAIlC,GAAX,IAAkBgJ,UAAWhJ,EAAMgJ,UAAUoB,QAAO,SAAAC,GAAQ,OAAIA,EAAS7K,MAAQ0K,EAAOhI,aAE5F,IAAK,wBACD,OAAO,2BAAIlC,GAAX,IAAkB0I,aAAcwB,EAAOhI,UAE3C,IAAK,4BACD,OAAO,2BAAIlC,GAAX,IAAkB2I,cAAe,CAACC,IAAKsB,EAAOhI,QAAQyH,eAAgBd,IAAKqB,EAAOhI,QAAQ0H,kBAE9F,QACI,OAAO5J,MCrCRsK,GAAQC,aAAYP,GAAaQ,aAAgBC,OAI/CC,GAAqD3K,IAMlE4K,OAAOL,MAAQA,G,4CCpBFM,GAAiB,WAE1B,IAAI7L,EAAWe,cAITiK,EAAQW,IAA+B,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMf,aAC5D/B,EAAYyD,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAM9C,aACxDC,EAAOwD,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAM7C,QACnD4C,EAAOY,IAAuB,SAAA1K,GAAK,OAAIA,EAAMmE,IAAI3E,OACjDkJ,EAAegC,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMrB,gBAC3DC,EAAgB+B,IAA6C,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMpB,iBAGxFnH,qBAAU,WACFzC,EAAS8K,QACd,CAAC5C,EAAWC,EAAMwB,EAAcC,EAAcC,IAAKD,EAAcE,MAEpE,IAAMgC,EAAe,SAACzH,GAClBrE,EFyIoB,SAACqE,GAAD,8CAA8B,WAAOrE,GAAP,iBAAAC,EAAA,sEAElDD,EAASE,EAAe,YAF0B,SAG7BuJ,GAAoBpF,GAHS,OAG9ClE,EAH8C,OAIlDH,EAASyK,GAAmBtK,EAASC,OACrCJ,EAASE,EAAe,cAL0B,gDAO5CP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,GAAWH,IACpBK,EAASE,EAAe,cAZ0B,yBAclDF,EAAS8K,MAdyC,4EAA9B,sDEzIXiB,CAAa1H,KAG1B,OACI,qBAAKpG,UAAWG,KAAE0I,cAAlB,SACI,wBAAO7I,UAAWG,KAAE4N,MAApB,UACI,gCACA,6BAtBC,CAAC,OAAQ,cAAe,eAAgB,aAAc,WAuB3CC,KAAI,SAACC,EAAOC,GAAR,OAAkB,oBAAwBlO,UAAWG,KAAE8N,MAArC,SAA6CA,GAApCA,EAAQC,UAGnD,gCACKnB,EAAMiB,KAAI,SAAAG,GAAI,OACX,qBAAInO,UAAWG,KAAEiO,QAAjB,UACI,6BACI,cAAC,IAAD,CAAS3J,GAAIC,GAAK2J,MAAL,WAAiBF,EAAK3L,KAAnC,SAA2C2L,EAAKzL,SAEpD,6BAAKyL,EAAKlC,aACV,6BAAKkC,EAAKhC,UACV,6BAAKgC,EAAK/B,YACT+B,EAAK1C,UAAYqB,EACZ,+BAAI,cAAC,EAAD,CACF9M,UAAWwG,KAAIA,IACfL,QAAS,WAAO0H,EAAaM,EAAK3L,MAClC+B,MAAO4J,EAAK3L,IAHV,oBAMF,cAAC,EAAD,CAAaxC,UAAWwG,KAAIA,IAA5B,kBACA,cAAC,EAAD,CAAaxG,UAAWwG,KAAIA,IAA5B,sBACF,6BAAI,cAAC,EAAD,CAAaxG,UAAWwG,KAAIA,IAA5B,uBAhBiB2H,EAAK3L,gB,wCCsD7C8L,GAtFE,SAAC,GAYd,IAZoE,IAArDC,EAAoD,EAApDA,0BAEXxM,EAAWe,cAFoD,EAG3BI,mBAAiB,GAHU,mBAG9DsL,EAH8D,KAG/CC,EAH+C,OAInCvL,mBAA0B,IAJS,mBAI9DwL,EAJ8D,KAInDC,EAJmD,KAM/DtC,EAAsBqB,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMV,uBAClEpC,EAAYyD,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAM9C,aACxDkB,EAAcuC,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAM7C,QAE1D0E,EAAqBC,KAAKC,KAAKzC,EAAsBpC,GACrD8E,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAoBI,IACrCD,EAAME,KAAKD,GAGf,IAAIE,EAAmBL,KAAKC,KAAKF,EAAqBL,GAClDY,EAAiBN,KAAKC,KAAK3D,EAAcoD,GAEzCa,GAAyBZ,EAAgB,GAAKD,EAA4B,EAC1Ec,EAAyBb,EAAgBD,EA2B7C,OAJA/J,qBAAU,WACNiK,EAAiBU,KAClB,CAACA,IAGA,sBAAKnP,UAAWG,KAAEmP,WAAlB,UACI,sBAAKtP,UAAWG,KAAE4O,MAAlB,UACKP,EAAgB,GACjB,wBAAQrI,QAAS,WACbsI,EAAiBD,EAAgB,IADrC,kBAGCO,EACI3B,QAAO,SAAAlD,GAAI,OAAIA,GAAQkF,GAAyBlF,GAAQmF,KACxDrB,KAAI,SAAA9D,GACD,OAAO,uBAAiBlK,UAAWmL,IAAgBjB,EAAO/J,KAAEoP,aAAepP,KAAEqP,WAChErJ,QAAS,YApCrB,SAAC+D,GAClBnI,EAAS0K,GAAiBvC,IAoCOuF,CAAavF,IAFvB,UAGUA,EAHV,MAAWA,MAKzBgF,EAAmBV,GACpB,wBAAQrI,QAAS,WACbsI,EAAiBD,EAAgB,IADrC,qBAIJ,uBAAOtF,MAAO,CACVC,OAAQ,YACRO,MAAO,OACPgG,WAAY,OACZC,YAAa,OAEVpK,SA/Ce,SAAClB,GAC3B,IAAI6F,GAAQ7F,EAAEC,cAAcC,MAC5BoK,EAAazE,IA8CF3F,MAAOmK,EACPzF,YAAa,OACbnB,WA7CgB,SAACzD,GACd,UAAVA,EAAEkE,MACFxG,EAAS0K,IAAkBiC,IAC3BC,EAAa,QA4Cb,wBAAQxI,QAAS,YAxCI,SAACuI,GAC1B3M,EAAS0K,GAAiBiC,IAC1BC,EAAa,IAuCLiB,EAAsBlB,IAD1B,wB,wCChBGmB,GAxD+C,SAAC,GAQpD,IANHC,EAME,EANFA,OACAC,EAKE,EALFA,OACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,UACAC,EACE,EADFA,UAGEpO,EAAWe,cAEXyJ,EAAgBmB,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMR,iBAC5DD,EAAgBoB,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMT,iBAwBlE,OALC9H,qBAAU,WACP,IAAI4L,EAAcC,YAAW,kBAAMtO,EAAS2K,GAAgBoD,EAAQC,MAAU,MAC9E,OAAO,kBAAMO,aAAaF,MAC3B,CAACN,EAAQC,IAGR,cAACQ,GAAA,EAAD,CAAKC,GAAI,CAACC,OAAQ,KAAlB,SACI,cAACC,GAAA,EAAD,CACI9E,IAAKW,EACLV,IAAKS,EACLqE,KAAM,EACNC,KAAM,SACNrM,MAAOyL,EACPzK,SA9BU,SAClBsL,EACAC,EACAC,GAEKC,MAAMC,QAAQH,KAGC,IAAhBC,GACAZ,EAAU,CAACtB,KAAKjD,IAAIkF,EAAS,GAAIf,EA1BzB,GA0BgDA,IACxDE,EAAUpB,KAAKjD,IAAIkF,EAAS,GAAIf,EA3BxB,MA6BRI,EAAU,CAACH,EAAO,GAAInB,KAAKhD,IAAIiF,EAAS,GAAIhB,EA7BpC,KA8BRI,EAAUF,EAAO,OAmBb9G,MAAO,CAACgI,MAAO,WACfC,aAAW,EACXC,YAAa,gB,wCChCdC,GAzBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACUC,GAGb,EAHGhM,SAGH,EAHagM,gBACPtR,EAEN,uDAEKuR,EAAgBF,EAAQtD,KAAI,SAACtL,EAAMsM,GACrC,OAAO,wBAAmChP,UAAWG,KAAEsR,OAAQlN,MAAO7B,EAA/D,SAAsEA,GAAzD4O,EAAQtC,GAAK,IAAMA,MAS3C,OACI,gDAAQzJ,SAPa,SAAClB,GACtB,IAAIqN,EAAerN,EAAEC,cAAcC,MAChCgN,GACHA,GAAgBG,KAIwBzR,GAAxC,IAAmDD,UAAWG,KAAEwR,OAAhE,SACKH,MCnBAI,GAAwC,SAAC,GAKQ,IAJHC,EAIE,EAJFA,gBACAtN,EAGE,EAHFA,MAGE,IAFFkC,gBAEE,SADFqL,EACE,EADFA,YAGvD,OACI,sBAAK9R,UAAWG,KAAE4R,WAAlB,UACI,yBACA,+BAAOD,IACP,cAAC,GAAD,CAAaR,QALF,CAAC,GAAI,GAAI,GAAI,IAMXC,eAAgBM,EAChBtN,MAAOA,EACPkC,SAAUA,QC8GpBuL,GAlHc,WAEzB,IAAIjQ,EAAWe,cAET6I,EAAgB+B,IAA6C,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMpB,iBAClFmB,EAAOY,IAAuB,SAAA1K,GAAK,OAAIA,EAAMmE,IAAI3E,OACjDD,EAASmL,IAAkC,SAAA1K,GAAK,OAAIA,EAAMmE,IAAI5E,UAC9D0H,EAAYyD,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAM9C,aACxDsC,EAAgBmB,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMR,iBAC5DD,EAAgBoB,IAAuB,SAAA1K,GAAK,OAAIA,EAAM+J,MAAMT,iBATnC,EAWDpJ,mBAAiB,IAXhB,mBAWxB+O,EAXwB,KAWfC,EAXe,OAYKhP,mBAAiB,IAZtB,mBAYxBiP,EAZwB,KAYZC,EAZY,OAaHlP,mBAASyI,EAAcC,KAbpB,mBAaxBkE,EAbwB,KAahBG,EAbgB,OAcH/M,mBAASyI,EAAcE,KAdpB,mBAcxBkE,EAdwB,KAchBG,EAdgB,OAeHmC,IAAMnP,SAAmB,CAAC4M,EAAQC,IAf/B,mBAexBC,EAfwB,KAehBG,EAfgB,KAkCzBmC,EAAiB,SAACL,GP8FA,IAACvP,EO7FrBX,GP6FqBW,EO7FCuP,EP6FF,uCAAgC,WAAOlQ,GAAP,iBAAAC,EAAA,sEAEpDD,EAASE,EAAe,YAF4B,SAG/BuJ,GAAoB9I,GAHW,OAGhDR,EAHgD,OAIpDH,EAASyK,GAAmBtK,EAASC,OACrCJ,EAASE,EAAe,cAL4B,gDAO9CP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,GAAWH,IACpBK,EAASE,EAAe,cAZ4B,yBAcpDF,EAAS8K,MAd2C,4EAAhC,wDO5FpBqF,EAAW,KA2Bf,OANA1N,qBAAU,WACN,IAAI4L,EAAcC,YAAW,kBAAMtO,EPkCV,SAACoQ,GAC9B,MAAO,CACHvQ,KAAM,wBACNsD,QAASiN,GOrCmCI,CAAkBJ,MAAc,MAE5E,OADA/P,QAAQC,IAAI,6EACL,kBAAMiO,aAAaF,MAC3B,CAAC+B,IAIA,sBAAKnS,UAAWG,KAAEqS,UAAlB,UACI,sBAAKxS,UAAWG,KAAEsS,gBAAlB,UACI,cAAC,EAAD,CAAatM,QAnBJ,WACjBpE,EAAS2K,GAAgBH,EAAeD,IACxCvK,EAAS0K,GAAiB,IAC1BwD,EAAU1D,GACV2D,EAAU5D,GACV6D,EAAU,CAAC5D,EAAeD,IAC1BvK,EAAS8K,GAAWC,KAaZ,sBACA,cAAC,EAAD,CAAa3G,QA7BN,WACfpE,EAAS2K,GAAgBH,EAAeD,IACxCvK,EAAS0K,GAAiB,IAC1BwD,EAAU1D,GACV2D,EAAU5D,GACV6D,EAAU,CAAC5D,EAAeD,IAC1BvK,EAAS8K,OAuBD,uBACA,sBAAK7M,UAAWkJ,KAAMwJ,iBAAtB,UACI,sBAAM1S,UAAWkJ,KAAMyJ,OAAvB,6CACA,sBAAM3S,UAAWkJ,KAAM0J,KAAvB,SAA8B7C,IAC9B,cAAC,GAAD,CACID,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,IAEf,sBAAMnQ,UAAWkJ,KAAM0J,KAAvB,SAA8B9C,EAASC,EAASD,EAASC,EAAS,UAG1E,sBAAK/P,UAAWG,KAAE0S,eAAlB,UACI,uCACA,sBAAK7S,UAAWG,KAAE2S,gBAAlB,UAAmC,uBAAO5J,MAAO,CAACC,OAAQ,qBAChB5D,SA/D3B,SAAClB,GACxB,IAAM0O,EAAS1O,EAAEC,cAAcC,MAC/B6N,EAAcW,IA8DoCxO,MAAO4N,EACPlJ,YAAa,+BACnD,uBAAOC,MAAO,CAACC,OAAQ,qBAChB5D,SAxEF,SAAClB,GAClB,IAAI4N,EAAU5N,EAAEC,cAAcC,MAC9B2N,EAAWD,IAuEQ1N,MAAO0N,EACPhJ,YAAa,yBAGxB,qBAAKjJ,UAAWG,KAAE6S,iBAAlB,SACI,cAAC,EAAD,CAAa7M,QAAS,WAClBmM,EAAeL,IADnB,4BAIJ,cAAC,GAAD,IACA,sBAAKjS,UAAWG,KAAE8S,iBAAlB,UACA,cAAC,GAAD,CAAYpB,gBA1ED,SAACtN,GACjBA,GACCxC,EPgDkB,SAACkI,GAC3B,MAAO,CACHrI,KAAM,2BACNsD,QAAS+E,GOnDIiJ,CAAe3O,KAyERA,MAAO0F,EACPxD,SAAqB,YAAXlE,EACVuP,YAAa,kBACzB,cAAC,GAAD,CAAYvD,0BAA2B,cCpH1C4E,GAAkB,WAE3B,IAAIpR,EAAWe,cACX2F,EAAgB1F,aAAmC,SAAAC,GAAK,OAAIA,EAAMjC,SAASU,uBAC3EiH,EAAY3F,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,UAJ/C,EAMPW,mBAAiB,IANV,mBAM1BqB,EAN0B,KAMnBqE,EANmB,KAgBjC,OAAIH,EACO,cAAC,GAAD,IAIP,qBAAKzI,UAAWG,IAAE0I,cAAlB,SACI,sBAAK7I,UAAWG,IAAE2I,cAAlB,UACI,oEAGA,8BACI,cAAC,EAAD,CAAYlH,KAAK,QACVc,KAAK,eACLuG,YAAY,cACZ1D,SAtBG,SAAClB,GACvB,IAAIE,EAAQF,EAAEC,cAAcC,MAC5BqE,EAASrE,IAqBU2E,MAAO,CAACC,OAAQ,uBAG3B,8BACI,cAAC,EAAD,CAAazG,KAAK,mBACVyD,QAxBG,WACvBpE,EAASD,EAAmByC,KAwBRkC,SAAwB,YAAdiC,EAFlB,oBAMJ,+DACgC,oBAAG1I,UAAWG,IAAEiT,IAAKC,KAAM,SAA3B,mBAA2C,qBAAKC,QAAQ,YAAb,SACvE,sBAAMC,EAAE,+L,oBCxCfC,GAAgC,SAAC,GAAoB,IAAnBlJ,EAAkB,EAAlBA,KAAMW,EAAY,EAAZA,OAC7ClJ,EAAWe,cAET2Q,EAAa1Q,aAAkC,SAAAC,GAAK,OAAIA,EAAMmE,IAAI3E,OAElEkR,EAAoB,SAACzI,EAAgB0I,GACvC5R,EX+EkB,SAAC4R,EAAgB1I,GAAjB,OACtB,SAAClJ,EAAUmJ,GACPnJ,EAASE,EAAe,YAEViJ,IAAWV,MAEzBT,GAAoB4J,GACftI,MAAK,SAAAnJ,GACFH,EAASiJ,GAASC,IAClBlJ,EAASE,EAAe,iBAE3BsJ,OAAM,SAAClH,GACUA,EAAEnC,SACVmC,EAAEnC,SAASC,KAAKT,MACf2C,EAAEjD,QACTW,EAASE,EAAe,eW9FvB2R,CAAWD,EAAQ1I,KAGhC,OACI,sBAAKjL,UAAWG,KAAE0T,cAAlB,UACI,qBAAK7T,UAAWG,KAAE2T,IAAlB,SAAwBxJ,EAAKF,WAC7B,8BAAME,EAAKD,SACX,yCACA,wCACA,8BACKoJ,IAAenJ,EAAKmB,QACf,KACA,gCACE,cAAC,EAAD,CAAazL,UAAWG,KAAEqG,IAA1B,kBACA,cAAC,EAAD,CAAaxG,UAAWG,KAAEqG,IACbL,QAAS,kBAAMuN,EAAkBzI,EAAQX,EAAK9H,MAD3D,6BCpBXuR,GAAQ,WACjB,IAAMhS,EAAWe,cAEX0H,EAAQzH,aAA2C,SAAAC,GAAK,OAAIA,EAAMwH,MAAMA,SACxEN,EAAOnH,aAAkC,SAAAC,GAAK,OAAIA,EAAMwH,MAAMN,QAC9DK,EAAWxH,aAAkC,SAAAC,GAAK,OAAIA,EAAMwH,MAAMD,YAElEhI,GADSQ,aAAkC,SAAAC,GAAK,OAAIA,EAAMoE,QAAQ5E,OACzDO,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,WACzE0H,EAAYlH,aAAkC,SAAAC,GAAK,OAAIA,EAAMwH,MAAMP,aAClEgB,EAAUtC,cAAVsC,OACD+I,EAAWC,cAVM,EAaS/Q,mBAAiB,IAb1B,mBAahBkH,EAbgB,KAaN8J,EAbM,OAcKhR,mBAAiB,IAdtB,mBAchBmH,EAdgB,KAcR8J,EAdQ,OAeqBjR,mBAAiB,IAftC,mBAehB6H,EAfgB,KAeAqJ,EAfA,KAwBjBC,EAAoB,SAACpJ,EAAgBb,EAAkBC,GACzDtI,EZyCmB,SAACiI,EAAsBI,EAAkBC,GAAzC,OACvB,SAACtI,EAAUmJ,GACPnJ,EAASE,EAAe,YAEViJ,IAAWV,MAEzBT,GAAoBC,EAAcI,EAAUC,GACvCgB,MAAK,SAAAnJ,GACFH,EAASiJ,GAAShB,IAClBjI,EAASE,EAAe,iBAE3BsJ,OAAM,SAAClH,GACUA,EAAEnC,SACVmC,EAAEnC,SAASC,KAAKT,MACf2C,EAAEjD,QACTW,EAASE,EAAe,eYxDvBqS,CAAYrJ,EAASb,EAAUC,IACxC6J,EAAY,IACZC,EAAU,KAoBd,OARA3P,qBAAU,WACNzC,EAASiJ,GAASC,MACnB,CAAClJ,EAAUkJ,EAAQf,EAAMD,IAE5BzF,qBAAU,WACN,IAAI4L,EAAcC,YAAW,kBAAMtO,EZNN,SAACgJ,GAAD,MAA6B,CAACnJ,KAAM,+BAAgCmJ,kBYMrDwJ,CAAsBxJ,MAAkB,KACpF,OAAO,kBAAMuF,aAAaF,MAC3B,CAACrF,IAEA,qBAAK/K,UAAWG,KAAEqS,UAAlB,SACI,sBAAKxS,UAAWG,KAAEqU,eAAlB,UAEI,qBAAKxU,UAAWG,KAAEsU,SAAlB,SACI,sBAAKtO,QAAS,kBAAM6N,EAAS,gBAAgBhU,UAAWG,KAAEuU,UAA1D,mBAA4EnK,OAIhF,sBAAKvK,UAAWG,KAAE4S,OAAlB,UACI,qBAAK/S,UAAWG,KAAEwU,YAAlB,SAA+B,uBAAOpP,SAtBvB,SAAClB,GAC5B+P,EAAkB/P,EAAEC,cAAcC,QAsBgBA,MAAOwG,EACP9B,YAAa,iCAEnD,sBAAKjJ,UAAWG,KAAEyU,QAAlB,UACI,gCACI,uBACI5U,UAAWG,KAAEwU,YACbpP,SA/CN,SAAClB,GACnB6P,EAAY7P,EAAEC,cAAcC,QA+CJA,MAAO6F,EACPnB,YAAa,oBAEjB,uBACIjJ,UAAWG,KAAEwU,YACbpP,SAlDR,SAAClB,GACjB8P,EAAU9P,EAAEC,cAAcC,QAkDFA,MAAO8F,EACPpB,YAAa,qBAGrB,cAAC,EAAD,CAAa9C,QAAS,kBAAMkO,EAAkBpJ,EAASb,EAAUC,IACpD5D,SAAqB,YAAXlE,EADvB,4BAMR,qBAAKvC,UAAWG,KAAE0U,WAAlB,SACMrK,EAAM3E,OAKJ,sBAAK7F,UAAWG,KAAEqK,MAAlB,UACI,qBAAKxK,UAAWG,KAAEmK,KAAlB,SACI,sBAAKtK,UAAWG,KAAE2U,YAAlB,UACI,qBAAK9U,UAAWG,KAAE4U,SAAlB,sBACA,qBAAK/U,UAAWG,KAAE4U,SAAlB,oBACA,8BAAK,kDACL,8BAAK,sBAAM7L,MAAO,CAACwG,WAAY,OAA1B,qBACL,+CAGR,8BACKlF,EAAMwD,KAAI,SAAAgH,GAAE,OACT,8BACI,cAAC,GAAD,CAAM1K,KAAM0K,EAAI/J,OAAQA,KADlB+J,EAAGxS,aAhBvB,qBAAKxC,UAAWG,KAAE8U,QAAlB,SACE,0EAsBZ,qBAAKjV,UAAWG,KAAE+U,OAAlB,SACI,qBAAKlV,UAAWG,KAAEgV,SAAlB,SACI,cAAC,GAAD,CAAYtD,gBAhFT,SAACtN,GAChBA,GACAxC,EZMkB,SAACkI,GAAD,MAAwB,CAACrI,KAAM,8BAA+BqI,aYNvEiJ,CAAe3O,KA+EAA,MAAO0F,EACPxD,SAAqB,YAAXlE,EACVuP,YAAa,4B,oBCtHpCsD,GAAW,WAGpB,OAFmBrS,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMR,cAMvE,qBAAKyG,MAAO,CAACmM,WAAY,SAAzB,SACI,oBAAGhC,KAAK,GAAGiC,OAAO,UAAlB,UACI,wBAAQtV,UAAWG,KAAEoV,YAGrB,gCACI,qBAAKvV,UAAWG,KAAEqV,UAClB,qBAAKxV,UAAWG,KAAEsV,YAClB,qBAAKzV,UAAWG,KAAEuV,aAClB,qBAAK1V,UAAWG,KAAEwV,eAGtB,qBAAK3V,UAAWG,KAAEyV,SAAlB,SACI,sBAAK5V,UAAWG,KAAE0V,KAAlB,UACI,qBAAK7V,UAAWG,KAAE2V,QAClB,qBAAK9V,UAAWG,KAAE4V,QAClB,qBAAK/V,UAAWG,KAAE6V,QAAlB,SACI,qBAAKhW,UAAWG,KAAE8V,SAEtB,qBAAKjW,UAAWG,KAAE+V,aAI1B,yBAASlW,UAAWG,KAAEuB,MAAtB,SAEI,sBAAK1B,UAAWG,KAAEgW,aAAlB,UACI,sBAAKnW,UAAWG,KAAEiW,aAAlB,UACI,oBAAIpW,UAAWG,KAAEkW,aAAjB,4BACA,mBAAGrW,UAAWG,KAAEmW,YAAhB,sLAIJ,qBAAKtW,UAAWG,KAAEoW,SAAlB,SACI,mBAAGlD,KAAK,GAAGiC,OAAO,UAAUtV,UAAWG,KAAEqW,uBApCtD,cAAC,IAAD,CAAU/R,GAAIC,GAAKiD,SCArBjD,GAAO,CAChBiD,MAAO,SACPb,aAAc,gBACdnC,QAAS,WACT8R,gBAAiB,mBACjBC,wBAAyB,uBACzBrI,MAAO,SACPsI,KAAM,QACNC,UAAW,OACXC,WAAY,cACZjQ,iBAAkB,qBA+BPkQ,OA5Bf,WAEI,IAAMC,EAAWC,cAEjB,OACI,kCAEgC,SAAtBD,EAASE,WAAwB,cAAC,GAAD,IAEvC,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAMxS,GAAKiD,MAAOwP,QAAS,cAAC,EAAD,MAElC,cAAC,IAAD,CAAOD,KAAMxS,GAAKC,QAASwS,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAMxS,GAAK+R,gBAAiBU,QAAS,cAAC,GAAD,MAC5C,cAAC,IAAD,CAAOD,KAAMxS,GAAKkC,iBAAkBuQ,QAAS,cAAC,GAAD,MAE7C,cAAC,IAAD,CAAOD,KAAMxS,GAAKgS,wBAAyBS,QAAS,cAAC,EAAD,MACpD,cAAC,IAAD,CAAOD,KAAMxS,GAAKmS,WAAYM,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAMxS,GAAK2J,MAAL,WAAyB8I,QAAS,cAAC,GAAD,MAE/C,cAAC,IAAD,CAAOD,KAAMxS,GAAKkS,UAAWO,QAAS,cAAC,GAAD,MACtC,cAAC,IAAD,CAAOD,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAU1S,GAAIC,GAAKkS,qB,oBCnCjDQ,GAAe,WAAO,IAAD,EACJlU,mBAAS,IADL,mBACvBpC,EADuB,KAChBqC,EADgB,OAEED,mBAAS,IAFX,mBAEvBnC,EAFuB,KAEbqC,EAFa,OAGAF,mBAAS,IAHT,mBAGvBmU,EAHuB,KAGdC,EAHc,OAINpU,mBAAS,YAJH,mBAIvBtB,EAJuB,KAIjB2V,EAJiB,OAKUrU,oBAAkB,GAL5B,mBAKvBI,EALuB,KAKTC,EALS,OAMgBL,oBAAkB,GANlC,mBAMvBsU,EANuB,KAMNC,EANM,OAOMvU,mBAAS,IAPf,mBAOvBY,EAPuB,KAOXC,EAPW,OAQYb,mBAAS,IARrB,mBAQvBc,EARuB,KAQRC,EARQ,KAWxB6F,EAAY/G,aAAkC,SAACC,GAAD,OAAWA,EAAMmK,aAAarD,aAC5ED,EAAa9G,aAAmC,SAACC,GAAD,OAAWA,EAAMmK,aAAatD,cAC9EnB,EAAY3F,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,UAE5ER,EAAWe,cAqCX4U,EAAqB,WAEnBH,EADAjU,EACQ,OAEA,YAGZC,GAAiBD,IAEfqU,EAAuB,WACAF,EAAxBJ,IAAYtW,IAGjB,OAAI8I,EAAmB,cAAC,IAAD,CAAUpF,GAAG,WAE7B,qBAAKzE,UAAWG,KAAE0I,cAAlB,SACH,sBAAK7I,UAAWG,KAAE2I,cAAlB,UACI,sBAAK9I,UAAWG,KAAE8N,MAAlB,UACI,8CACA,4CAEJ,sBAAKjO,UAAWG,KAAEyX,KAAlB,UAEI,uBAAM3S,SAvCG,SAACZ,GAClBA,EAAEwT,iBAEER,IAAYtW,GAChBgB,EjBlBkB,SAACjB,EAAeC,GAAhB,8CAAqC,WAAOgB,GAAP,eAAAC,EAAA,sEAEvDD,EAASE,EAAe,YAF+B,SAGjD2H,GAAmB9I,EAAOC,GAHuB,OAIvDgB,EARmB,CAACH,KAAM,yBAS1BG,EAASE,EAAe,cAL+B,gDAOjDP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,GAAWH,IACpBK,EAASE,EAAe,WAZ+B,yDAArC,sDiBkBT6V,CAAWhX,EAAOC,KAmCnB,UACI,gCAAM+C,EAAa,qBAAKoF,MAAO,CAACgI,MAAO,MAAO6G,QAAS,UAApC,SAAgDjU,IAAoB,QAAS,uBAC5F,cAAC,EAAD,CAAYlC,KAAM,QACN2C,MAAOzD,EACPsF,GAAI,QACJb,SA/DP,SAAClB,GACtBlB,EAASkB,EAAEC,cAAcC,OACd,mCACJiB,KAAKC,OAAOpB,EAAEC,cAAcC,OAAOmB,eACtC3B,EAAc,IAEdA,EAAc,0BA0DUmF,MAAO,CAACC,OAAQ,kBAAmB6O,UAAW,YAG9D,sBAAKhY,UAAWG,KAAEY,SAAlB,UAA6BiD,EAAgB,qBAAKkF,MAAO,CAACgI,MAAO,MAAO6G,QAAS,UAApC,SAAgD/T,IAAuB,WAAY,uBAC5H,cAAC,EAAD,CAAYpC,KAAMA,EACN2C,MAAOxD,EACPqF,GAAI,WACJT,OAAQgS,EACRpS,SA/DJ,SAAClB,GACzB,IAAIuB,EAAuBvB,EAAEC,cAAcC,MAC3CnB,EAAYwC,GACTA,EAAqBC,OAAS,EAC7B5B,EAAiB,0CAEjBA,EAAiB,KA0DOiF,MAAO,CAACC,OAAQ,kBAAmB6O,UAAW,SAC1D,qBAAKhY,UAAWG,KAAE8X,gBACblS,IAAKzC,EAAe0C,EAAeC,EACnCC,IAAI,MACJC,QAASuR,OAIlB,sBAAK1X,UAAWG,KAAEY,SAAlB,6BAA6C,uBACzC,cAAC,EAAD,CAAYa,KAAMA,EACN2C,MAAO8S,EACPjR,GAAIiR,EACJ1R,OAAQgS,EACRpS,SAAU,SAAClB,GACPiT,EAAWjT,EAAEC,cAAcC,QAE/B2E,MAAO,CAACC,OAAQ,kBAAmB6O,UAAW,SAC1D,qBAAKhY,UAAWG,KAAE8X,gBACblS,IAAKzC,EAAe0C,EAAeC,EACnCC,IAAI,MACJC,QAASuR,OAGlB,cAAC,EAAD,CAAahV,KAAK,mBACL1C,UAAWG,KAAEqG,IACbL,QAxEN,SAAC9B,GACpBA,EAAEwT,iBAEF9V,EAASF,GAAW,KACpBsB,EAAS,IACTC,EAAY,IACZkU,EAAW,KAgEC,oBAKA,cAAC,EAAD,CAAa5U,KAAK,mBACL1C,UAAWG,KAAEqG,IACbC,SAAwB,YAAdiC,EAFvB,sBAME8O,EACE,qBAAKtO,MAAO,CAACgI,MAAO,MAAO8G,UAAW,OAAtC,SAA+C,0BAAkC,GACpFlO,GAAa,qBAAKZ,MAAO,CAACgI,MAAO,MAAO8G,UAAW,OAAtC,SAA+ClO,OAGjE,2DAC4B,oBAAG9J,UAAWG,KAAEiT,IAAKC,KAAM,SAA3B,mBAA2C,qBAAKC,QAAQ,YAAb,SACnE,sBAAMC,EAAE,kMCtIf7O,GACF,SADEA,GAEK,gBAFLA,GAGS,oBAHTA,GAKgB,uBALhBA,GAME,OANFA,GAOA,WAuBEwT,OApBf,WAEI,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOhB,KAAM,YAAaC,QAAS,cAAC,IAAD,CAAU1S,GAAIC,OACjD,cAAC,IAAD,CAAOwS,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAU1S,GAAIC,OACzC,cAAC,IAAD,CAAOwS,KAAMxS,GAAYyS,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAMxS,GAAcyS,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAMxS,GAAmByS,QAAS,cAAC,GAAD,MACzC,cAAC,IAAD,CAAOD,KAAMxS,GAAuByS,QAAS,cAAC,GAAD,MAE7C,cAAC,IAAD,CAAOD,KAAMxS,GAA8ByS,QAAS,cAAC,EAAD,MACpD,cAAC,IAAD,CAAOD,KAAMxS,GAAgByS,QAAS,cAAC,GAAD,MACtC,cAAC,IAAD,CAAOD,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAU1S,GAAIC,aCS1CyT,OA7Bf,WAEI,IAAMpW,EAAWe,cACXP,EAASQ,aAA6C,SAAAC,GAAK,OAAIA,EAAMmE,IAAI5E,UACzEE,EAAaM,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMR,cACrEsU,EAAWC,cAYjB,OANAxS,qBAAU,WACoB,sBAAtBuS,EAASE,UACTlV,EjCsBmB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAE7BD,EAASE,EAAe,YAFK,SAGRtB,IAHQ,cAGzBuB,EAHyB,OAI7BH,EAASa,GAAa,IACtBb,EAbG,CACHH,KAAM,kBACNwE,GAWsBlE,EAASC,KAAKK,MALP,SAMvB4V,QAAQC,IAAI,CAACnW,IANU,cAO7BH,EAASE,EAAe,cAPK,kBAQtBC,GARsB,kCAUvBR,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,EAAWH,IACpBK,EAASa,GAAa,IACtBb,EAASE,EAAe,cAhBK,0DAAN,yDiCpBxB,IAGC,sBAAKjC,UAAU,WAAf,UACgB,YAAXuC,GAAwB,cAAC,EAAD,IACxBE,EAAa,cAAC,GAAD,IAAoB,cAAC,GAAD,IACjCA,GAAc,qBAAKyG,MAAO,CAACoP,SAAU,WAAY5I,WAAY,MAAO6I,IAAK,QAA3D,SACX,cAAC,EAAD,CAAapS,QAfR,WACbpE,EhCyDgB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEAEtBD,EAASE,EAAe,YAFF,SAGhBtB,IAHgB,OAItBoB,EAASa,GAAa,IACtBb,EAASE,EAAe,cALF,gDAOhBP,EAAQ,KAAEQ,SACV,KAAEA,SAASC,KAAKT,MACf,KAAEN,QAAU,gCACnBgB,QAAQC,IAAI,UAAZ,sBACAN,EAASF,EAAWH,IACpBK,EAASE,EAAe,WAZF,yDAAN,wDgC3CR,2BCrBDuW,GAZS,SAACC,GACnBA,GACF,8BAAqBpN,MAAK,YAAkD,IAA/CqN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCAdM,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU3L,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,GAAD,UAIZ4L,SAASC,eAAe,SAG5BX,M,mBCnBAY,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,UAAY,yBAAyB,QAAU,uBAAuB,YAAc,2BAA2B,eAAiB,8BAA8B,aAAe,4BAA4B,UAAY,yBAAyB,kBAAoB,iCAAiC,WAAa,0BAA0B,SAAW,wBAAwB,gBAAkB,+BAA+B,IAAM,mBAAmB,UAAY,yBAAyB,cAAgB,6BAA6B,SAAW,0B,mBCArlBD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,SAAW,2BAA2B,UAAY,4BAA4B,WAAa,6BAA6B,UAAY,4BAA4B,SAAW,2BAA2B,MAAQ,wBAAwB,eAAiB,iCAAiC,aAAe,+BAA+B,aAAe,+BAA+B,aAAe,+BAA+B,YAAc,8BAA8B,SAAW,2BAA2B,SAAW,2BAA2B,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,QAAU,0BAA0B,KAAO,uBAAuB,MAAQ,0B,mBCA9zBD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,eAAiB,8BAA8B,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,QAAU,uBAAuB,YAAc,2BAA2B,WAAa,0BAA0B,MAAQ,qBAAqB,YAAc,2BAA2B,QAAU,uBAAuB,KAAO,oBAAoB,SAAW,wBAAwB,OAAS,sBAAsB,UAAY,yBAAyB,SAAW,0B,mBCAljBD,EAAOC,QAAU,CAAC,cAAgB,uCAAuC,cAAgB,uCAAuC,gBAAkB,yCAAyC,WAAa,oCAAoC,MAAQ,+BAA+B,IAAM,+B,mBCAzRD,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,cAAgB,oCAAoC,MAAQ,4BAA4B,KAAO,2BAA2B,SAAW,+BAA+B,gBAAkB,sCAAsC,IAAM,0BAA0B,IAAM,4B,mBCAxUD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,IAAM,oB,mBCApED,EAAOC,QAAU,CAAC,UAAY,iCAAiC,gBAAkB,uCAAuC,eAAiB,sCAAsC,iBAAmB,wCAAwC,gBAAkB,uCAAuC,iBAAmB,0C,mBCAtTD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,aAAe,8BAA8B,QAAU,yBAAyB,cAAgB,iC,mBCAvKD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,8BAA8B,WAAa,mCAAmC,UAAY,oC,mBCApND,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,MAAQ,qBAAqB,MAAQ,qBAAqB,QAAU,uBAAuB,WAAa,0BAA0B,aAAe,8B,mBCAhND,EAAOC,QAAU,CAAC,WAAa,+BAA+B,WAAa,+BAA+B,aAAe,iCAAiC,MAAQ,4B,mBCAlKD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,KAAO,0BAA0B,OAAS,8B,mBCArHD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,OAAS,8B,mBCAjGD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,uB,mBCAjFD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,6B,mBCArED,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,mBCAhED,EAAOC,QAAU,CAAC,WAAa,iC","file":"static/js/main.4a8a5567.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/viewPassword.0b5c67b9.png\";","export default __webpack_public_path__ + \"static/media/hiddenPassword.a81cfb08.png\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import axios from 'axios'\r\n\r\n//const BaseURLs ='http://localhost:7542/2.0/'\r\nconst BaseURLs = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL: BaseURLs,\r\n    withCredentials: true,\r\n})\r\n\r\n","import {instance} from \"./api\";\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\nexport type LoginUserType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n\r\n}\r\n\r\nexport interface UserData {\r\n    name?: string\r\n    avatar?: string\r\n}\r\n\r\nexport const loginAPI = {\r\n    authMe() {\r\n        return instance.post<LoginResponseType>('/auth/me', {}, {})\r\n    },\r\n    logOut() {\r\n        return instance.delete<{ info: string, error: string }>('/auth/me', {})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>(`/auth/login`, {email, password, rememberMe}, {})\r\n    },\r\n    changeData(userData: UserData) {\r\n        return instance.put('auth/me', userData)\r\n    },\r\n}\r\n","import {instance} from \"./api\";\r\n\r\nexport const restoreAPI = {\r\n    forgot(eMail: string) {\r\n        return instance.post<{ info: string, error: string }>('/auth/forgot', {\r\n            email: eMail,\r\n            from: `test-front-admin <${eMail}>`,\r\n            message: `<div style=\"background-color: #C7A5A5; padding: 50px; text-decoration: #3F51B5\">password recovery link: <a href='http://localhost:3000/#/new-password/$token$'>Change password</a></div>`\r\n        }, {})\r\n    },\r\n    newPassword(newPassword: string, token: string) {\r\n        return instance.post<{ info: string, error: string }>('/auth/set-new-password', {\r\n            password: newPassword,\r\n            resetPasswordToken: token\r\n        }, {})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {restoreAPI} from \"../../api/password-api\";\r\nimport {Nullable} from \"../../types\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\n\r\ntype stateType = {\r\n    isSuccessfulRequest: boolean\r\n    error: Nullable<string>\r\n}\r\n\r\nlet initState: stateType = {\r\n    isSuccessfulRequest: false,\r\n    error: null\r\n}\r\n\r\n\r\nexport const restorePassReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case 'restore/SET_SUCCESSFUL_REQUEST' : {\r\n            return {...state, isSuccessfulRequest: action.isSuccessfulRequest}\r\n        }\r\n        case 'restore/SET_ERROR' : {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype AllACType = restorePassACType | setErrorACType | setAppStatusACType\r\n\r\ntype restorePassACType = ReturnType<typeof setRequestResultAC>\r\n\r\nexport const setRequestResultAC = (isSuccessfulRequest: boolean) => {\r\n    return {\r\n        type: 'restore/SET_SUCCESSFUL_REQUEST',\r\n        isSuccessfulRequest\r\n    } as const\r\n}\r\n\r\nexport type setErrorACType = ReturnType<typeof setErrorAC>\r\n\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: 'restore/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\n\r\nexport const sendCurrentEmailTC = (email: string) => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await restoreAPI.forgot(email)\r\n        dispatch(setRequestResultAC(true))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n}\r\n\r\nexport const setNewPasswordTC = (newPassword: string, token: string) => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await restoreAPI.newPassword(newPassword, token)\r\n        dispatch(setRequestResultAC(true))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../api/login-api\";\r\nimport {setErrorAC} from \"../features/password/password-reducer\";\r\nimport {isLoggedInAC} from \"../features/login/login-reducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type InitialStateType = {\r\n    status: RequestStatusType\r\n    _id: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    _id: ''\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET_STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET_USER_ID':\r\n            return {...state, _id: action.id}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionsType = setAppStatusACType | setUsersIDACType\r\nexport type setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\nexport type setUsersIDACType = ReturnType<typeof setUsersIDAC>\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: 'APP/SET_STATUS',\r\n        status\r\n    } as const\r\n}\r\n\r\nexport const setUsersIDAC = (id: string) => {\r\n    return {\r\n        type: 'APP/SET_USER_ID',\r\n        id\r\n    } as const\r\n}\r\n\r\n\r\n\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await loginAPI.authMe()\r\n        dispatch(isLoggedInAC(true))\r\n        dispatch(setUsersIDAC(response.data._id))\r\n        await Promise.all([response])\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n        return response\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(isLoggedInAC(false))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\nimport {setErrorAC, setErrorACType} from \"../password/password-reducer\";\r\nimport {loginAPI, LoginResponseType} from \"../../api/login-api\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport type stateType = {\r\n    isLoggedIn: boolean\r\n    _id: string\r\n    email: Nullable<string>\r\n    name: Nullable<string>\r\n    avatar?: string\r\n}\r\n\r\nlet initState: stateType = {\r\n    isLoggedIn: false,\r\n    _id: '',\r\n    email: null,\r\n    name: null,\r\n    avatar: '',\r\n}\r\n\r\nexport const loginReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_IS_LOGGED_IN' : {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case 'login/LOG_IN' : {\r\n            return {\r\n                ...state,\r\n                name: action.payload.name,\r\n                avatar: action.payload.avatar,\r\n                email: action.payload.email,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype AllACType = isLoggedInACType | setAppStatusACType | setErrorACType | logInACType\r\n\r\ntype isLoggedInACType = ReturnType<typeof isLoggedInAC>\r\ntype logInACType = ReturnType<typeof logInAC>\r\n\r\nexport const isLoggedInAC = (isLoggedIn: boolean) => {\r\n    return {\r\n        type: 'login/SET_IS_LOGGED_IN',\r\n        isLoggedIn\r\n    } as const\r\n}\r\n\r\nexport const logInAC = (payload: LoginResponseType, isLoggedIn: boolean) => {\r\n    return {\r\n        type: 'login/LOG_IN',\r\n        payload,\r\n        isLoggedIn\r\n    } as const\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): AppThunkType => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await loginAPI.login(email, password, rememberMe)\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n        dispatch(logInAC(response.data, true))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    }\r\n\r\n}\r\n\r\nexport const logOutTC = () => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await loginAPI.logOut()\r\n        dispatch(isLoggedInAC(false))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    }\r\n\r\n}\r\n\r\n","import React, {ChangeEvent, FormEvent, useEffect, useState} from \"react\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport s from \"./login.module.css\"\r\nimport viewPassword from \"../../assets/password/viewPassword.png\"\r\nimport hiddenPassword from \"../../assets/password/hiddenPassword.png\"\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"./login-reducer\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {PATH} from \"../../app/Routes\";\r\n\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppStateType, boolean>((state) => state.login.isLoggedIn);\r\n\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n    const [passwordType, setPasswordTypeType] = useState('password');\r\n\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n    //отражает состоняие были мы внутри инпута или нет\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    const handlerBlur = (e: FormEvent<HTMLInputElement>) => {\r\n        switch (e.currentTarget.value) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n    const handleInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        const re = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        if( re.test(String(e.currentTarget.value).toLowerCase())) {\r\n            setEmailError('')\r\n        } else {\r\n            setEmailError('Invalid email address')\r\n        }\r\n    }\r\n    const handleInputPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let currentPasswordValue = e.currentTarget.value\r\n        setPassword(currentPasswordValue)\r\n        if(currentPasswordValue.length < 7)  {\r\n            setPasswordError('Password must be more than 6 character')\r\n        } else {\r\n            setPasswordError('')\r\n        }\r\n    }\r\n    const handleCheckbox = () => {\r\n       setRememberMe(!rememberMe)\r\n    }\r\n    const handleShowPassword = () => {\r\n        if (showPassword) {\r\n            setPasswordTypeType('text')\r\n        } else {\r\n            setPasswordTypeType('password')\r\n        }\r\n        setShowPassword(!showPassword)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n       if (emailError || passwordError) {\r\n           setFormValid(false)\r\n       } else {\r\n           setFormValid(true)\r\n       }\r\n    }, [emailError, passwordError])\r\n\r\n\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginContainer}>\r\n            <div className={s.formBlock}>\r\n                <div className={s.content}>\r\n                    <h3 className={s.fromBlockTitle}>It-incubator</h3>\r\n\r\n                    <form className={s.formContent} onSubmit={handleSubmit}>\r\n                        <label>{(emailDirty || emailError) ? <div className={s.errorStyle}>{emailError}</div> : 'Email'}</label>\r\n                        <div className={s.formInputBox}>\r\n                            <input name=\"email\"\r\n                                   value={email}\r\n                                   type=\"email\"\r\n                                   className={s.formInput}\r\n                                   onChange={handleInputEmail}\r\n                                   onBlur={handlerBlur}\r\n                            />\r\n                        </div>\r\n\r\n                        <label> {(passwordDirty || passwordError) ? <div className={s.errorStyle}> {passwordError}</div> : \"Password\" } </label>\r\n                        <div className={s.formInputBox}>\r\n                            {/*{(passwordDirty || passwordError) && <div style={{color: 'red', marginBottom: '5px', fontSize: '12px'}}>{passwordError}</div>}*/}\r\n                            <input name=\"password\"\r\n                                   value={password}\r\n                                   type={passwordType}\r\n                                   className={s.formInput}\r\n                                   onChange={handleInputPassword}\r\n                                   onBlur={handlerBlur}\r\n                            />\r\n                            <img className={s.inputPasswordView}\r\n                                 src={showPassword ? viewPassword : hiddenPassword}\r\n                                 alt=\"eye\"\r\n                                 onClick={handleShowPassword}/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"check\" className={s.checkbox}\r\n                                   onChange={handleCheckbox}/>\r\n                            <label htmlFor=\"check\" >Remember</label>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.formButtonBlock}>\r\n\r\n                            <SuperButton type=\"submit\"\r\n                                         className={s.btn}\r\n                                         disabled={!formValid}\r\n                            >LOGIN</SuperButton>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className={s.textBlock}>\r\n                        <div>\r\n                            <span className={s.formBlockText}>Forgot password?</span>\r\n                            <NavLink to={PATH.RESTORE_PASSWORD} className={s.formLink}>Click Here</NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <span className={s.formBlockText}>Don't have an account</span>\r\n                            <NavLink to={PATH.REGISTRATION} className={s.formLink}>Sign up</NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/userImg.61b34c78.png\";","export default __webpack_public_path__ + \"static/media/Eclipse200px.e181d854.gif\";","import s from \"./Preloader.module.css\";\r\nimport preloader from '../../../assets/preloader/Eclipse200px.gif'\r\nimport React from \"react\";\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.loading}>\r\n            <img className={s.preloader} src={preloader} alt={'preloader'}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./profile.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/Routes\";\r\nimport userDefaultImg from \"../../assets/profile/userImg.png\"\r\nimport Preloader from \"../../common/components/preloader/Preloader\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const name = useSelector<AppStateType, string>(state => state.profile.name)\r\n    const avatar = useSelector<AppStateType, string>(state => state.profile.avatar)\r\n\r\n\r\n    const [myName, setMyName] = useState('')\r\n    const [myAvatar, setMyAvatar] = useState<string>('Avatar is not defined')\r\n\r\n\r\n    useEffect(() => {\r\n        setMyName(name)\r\n        if (avatar) {\r\n            setMyAvatar(avatar)\r\n        }\r\n    }, [name, avatar])\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileContainer}>\r\n            <div className={s.profileBlock}>\r\n                <div className={s.content}>\r\n                    <div className={s.profileAvatar}>\r\n                        <img src={`${avatar !== 'Avatar is not defined' ? avatar : userDefaultImg}`} alt=\"ava\"/>\r\n                    </div>\r\n                    <div>{name}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, ref,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.inputField} ${spanClassName}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                ref={ref}\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInput\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {setNewPasswordTC} from \"./password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"./passwordRestore.module.css\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n\r\n    let dispatch = useDispatch()\r\n    let requestStatus = useSelector<AppStateType, boolean>(state => state.password.isSuccessfulRequest)\r\n    let appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const {token} = useParams<'token'>();\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onSetNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        setValue(value)\r\n    }\r\n\r\n    const onSendNewPassword = () => {\r\n        dispatch(setNewPasswordTC(value, token!))\r\n    }\r\n\r\n    if (requestStatus && !isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    } else if (requestStatus && isLoggedIn) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n                Set new password, please\r\n                <div className={s.inputGroup}>\r\n                    <div className={s.input}>\r\n                        <SuperInput type='password'\r\n                                    name='newPassword'\r\n                                    placeholder='new password'\r\n                                    onChange={onSetNewPassword}\r\n                                    style={{border: '1px solid black'}}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <SuperButton name='sendCurrentEmail'\r\n                                     onClick={onSendNewPassword}\r\n                                     disabled={appStatus === 'loading'}\r\n                        >Send\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport s from './header.module.css'\r\n\r\nfunction Header() {\r\n\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.main}>\r\n                <input type=\"checkbox\"/>\r\n                <div>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n                <nav className={s.menu}>\r\n                    <Link to='/profile'>profile</Link>\r\n                    <Link to='/change-password'>change password</Link>\r\n                    <Link to='/packs-list'>packs</Link>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport s from \"./passwordRestore.module.css\";\r\n\r\nexport const SuccessfulRequestMessage = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n\r\n                <img src='https://icon-library.com/images/e-mail-icon-png/e-mail-icon-png-28.jpg' style={{width: '200px'}} alt='letter'/>\r\n                <div>\r\n                    Check E-mail\r\n                </div>\r\n                <div>\r\n                    We've sent a letter with instructions on your e-mail\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './passwordRestore.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {SuccessfulRequestMessage} from \"./successfulRequestMessage\";\r\nimport {sendCurrentEmailTC} from \"./password-reducer\";\r\nimport {Nullable} from \"../../types\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\n\r\n\r\nexport const ChangePassword = () => {\r\n\r\n    let dispatch = useDispatch()\r\n    let requestStatus = useSelector<AppStateType, boolean>(state => state.password.isSuccessfulRequest)\r\n    let error = useSelector<AppStateType, Nullable<string>>(state => state.password.error)\r\n    let appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onSetCurrentEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        setValue(value)\r\n    }\r\n    const onSendCurrentEmail = () => {\r\n        dispatch(sendCurrentEmailTC(value))\r\n    }\r\n\r\n    if (requestStatus) {\r\n        return <SuccessfulRequestMessage/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n                <div>\r\n                    Enter your email below and follow the further instructions\r\n                </div>\r\n                <div>\r\n                    <SuperInput type='email'\r\n                           name='currentEmail'\r\n                           placeholder='your e-mail'\r\n                           onChange={onSetCurrentEmail}\r\n                           style={{border: '1px solid black'}}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                            onClick={onSendCurrentEmail}\r\n                            disabled={appStatus === 'loading'}\r\n                    >Send\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {loginAPI, UserData} from \"../../api/login-api\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\nimport {setErrorAC, setErrorACType} from \"../password/password-reducer\";\r\n\r\n\r\nexport type UserDataType = {\r\n    _id: string,\r\n    email: null | string,\r\n    name: string,\r\n    avatar: string,\r\n}\r\n\r\nconst initState = {\r\n    _id: '',\r\n    email: null,\r\n    name: '',\r\n    avatar: '',\r\n}\r\n\r\nexport const profileReducer = (state: UserDataType = initState, action: AllACType): UserDataType => {\r\n    switch (action.type) {\r\n        case 'profileReducer/SET_USER_DATA' :\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type setUserDataACType = ReturnType<typeof setUserData>\r\ntype AllACType = setUserDataACType | setAppStatusACType | setErrorACType\r\n\r\n//* Action Creator ---------------------------------------------------------------->\r\nexport const setUserData = (data: UserDataType) => ({type: 'profileReducer/SET_USER_DATA', data} as const)\r\n\r\n\r\n//* Thunk Creator ---------------------------------------------------------------->\r\nexport const changeUserData = (userData: UserData): AppThunkType => async (dispatch: Dispatch<AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await loginAPI.changeData(userData)\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n        dispatch(setUserData(response.data.updatedUser))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n}\r\n\r\n","import {instance} from \"./api\";\r\n\r\nexport const registApi = {\r\n    register(email: string, password: string) {\r\n        return instance.post<{addedUser: {}, error?: string}>(`auth/register`, {email, password}, {})\r\n    }\r\n}","import {AppStateType} from \"../../bll/store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {registApi} from \"../../api/registration-api\";\r\nimport {setAppStatusAC, setAppStatusACType} from \"../../app/app-reducer\";\r\n\r\ntype InitStateType = typeof initState;\r\n\r\nconst initState = {\r\n    isRegistry: false,\r\n    backError: ''\r\n};\r\n\r\n\r\nexport const registrationReducer = (state = initState, action: AllACType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'registry/REGISTRATED':\r\n            return {...state, isRegistry: true}\r\n        case 'registry/BACKEND-ERROR':\r\n            return {...state, backError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\ntype AllACType =\r\n    | ReturnType<typeof registrated>\r\n    | ReturnType<typeof setErrorAC>\r\n    | setAppStatusACType\r\n\r\nconst registrated = () => ({type: 'registry/REGISTRATED'} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'registry/BACKEND-ERROR', error} as const)\r\n\r\n\r\nexport const registryTC = (email: string, password: string) => async (dispatch: ThunkDispatch<AppStateType, unknown, AllACType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        await registApi.register(email, password)\r\n        dispatch(registrated())\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    }\r\n}","import {instance} from \"./api\";\r\n\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, pageCount: number = 5, page: number = 1) {\r\n        return instance.get<CardsResponseType>\r\n        (`cards/card?cardsPack_id=${cardsPack_id}&pageCount=${pageCount}&page=${page}&max=5`)\r\n    },\r\n    createCard(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post<CardsResponseType>\r\n        (`cards/card`, { card: {cardsPack_id, question, answer}})\r\n    },\r\n    deleteCard(cardsPack_id: string) {\r\n        return instance.delete<CardsResponseType>\r\n        (`cards/card?id=${cardsPack_id}`)\r\n    },\r\n    updateCard(updateCard: updateCardType) {\r\n        return instance.put<CardsResponseType>\r\n        (`cards/card`, {card: updateCard})\r\n    },\r\n}\r\n\r\n//* types --------------------------------------------------------->\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type NewCardType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\ntype updateCardType = {\r\n    _id: string,\r\n    question?: string,\r\n    answer?: string\r\n}\r\n\r\n\r\nexport type RequestParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id?: string\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}","import {CardType, cardsAPI} from \"../../api/cards-api\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\nimport {setAppStatusAC} from \"../../app/app-reducer\";\r\n\r\n\r\ntype stateType = typeof initState\r\n\r\nconst initState = {\r\n    packName: '',\r\n    cards: [] as CardType[],\r\n    packUserId: '',\r\n    page: 1,\r\n    pageCount: 10,\r\n    cardsTotalCount: 0,\r\n    minGrade: 0,\r\n    maxGrade: 0,\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    activeModal: false,\r\n    searchQuestion: '',\r\n}\r\n\r\n\r\nexport const cardsReducer = (state: stateType = initState, action: AllActionsType): stateType => {\r\n    switch (action.type) {\r\n        case 'cardsReducer/SET_CARDS':\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            }\r\n        case 'cardsReducer/SET_PAGE_COUNT' : {\r\n            return {...state, pageCount: action.pageCount}\r\n        }\r\n        case 'cardsReducer/SEARCH_QUESTION' : {\r\n            return {...state, searchQuestion: action.searchQuestion}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype setCardsACType = ReturnType<typeof setCardsAC>\r\ntype setPageCountACType = ReturnType<typeof setPageCountAC>\r\ntype setSearchedQuestionACType = ReturnType<typeof setSearchedQuestionAC>\r\n\r\ntype AllActionsType = setCardsACType | setPageCountACType | setSearchedQuestionACType\r\n\r\n\r\n//* Action Creators --------------------------------------------------------->\r\nexport const setCardsAC = (cards: Array<CardType>) => ({type: 'cardsReducer/SET_CARDS', cards} as const)\r\nexport const setPageCountAC = (pageCount: number) =>( {type: 'cardsReducer/SET_PAGE_COUNT', pageCount} as const)\r\nexport const setSearchedQuestionAC = (searchQuestion: string) => ({type: 'cardsReducer/SEARCH_QUESTION', searchQuestion } as const)\r\n\r\n\r\n\r\n//* Thunk Creators --------------------------------------------------------->\r\n\r\nexport const getCards = (packId: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n\r\n        const cards = getState().cards\r\n        const currentPage = cards.page\r\n        const packsOnPage = cards.pageCount\r\n\r\n        cardsAPI.getCards(packId, packsOnPage, currentPage)\r\n            .then(response => {\r\n                dispatch(setCardsAC(response.data.cards))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n\r\n    }\r\n\r\nexport const createCards = (cardsPack_id: string, question: string, answer: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n\r\n        const cards = getState().cards\r\n        /*const newCard: NewCardType = {cardsPack_id, question, answer}*/\r\n        cardsAPI.createCard(cardsPack_id, question, answer)\r\n            .then(response => {\r\n                dispatch(getCards(cardsPack_id))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n    }\r\n\r\nexport const deleteCard = (cardId: string, packId: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n\r\n        const cards = getState().cards\r\n\r\n        cardsAPI.deleteCard(cardId)\r\n            .then(response => {\r\n                dispatch(getCards(packId))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n    }\r\n\r\nexport const updateCard = (cardsPack_id: string, cardId: string, question: string, answer: string): AppThunkType =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        const cards = getState().cards\r\n        const updateCard = {_id: cardId, question, answer}\r\n        cardsAPI.updateCard(updateCard)\r\n            .then(response => {\r\n                dispatch(getCards(cardsPack_id))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console');\r\n                dispatch(setAppStatusAC(\"failed\"))\r\n            })\r\n    }\r\n\r\n","import {instance} from \"./api\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    user_name: string\r\n}\r\n\r\nexport type GetPacksResponseType = {\r\n    cardPacks: CardPackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\n   /* ?pageCount=${pageCount}&page=${page}&user_id=${user_id}*/\r\n\r\nexport const packsAPI = {\r\n    getPacks(pageCount: number, page: number, user_id?: string, searchedName?: string, settingSlider?:{min: number, max: number}) {\r\n            return instance.get<GetPacksResponseType>(`/cards/pack?min=${settingSlider?.min}&max=${settingSlider?.max}&packName=${searchedName}`,\r\n                {params: {pageCount, page, user_id,}})\r\n    },\r\n    createPack(name: string) {\r\n        return instance.post<GetPacksResponseType>(`/cards/pack`, {cardsPack: {name}}, {})\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete<GetPacksResponseType>(`/cards/pack?id=${id}`, {})\r\n    }\r\n}","import {setAppStatusAC} from \"../../app/app-reducer\";\r\nimport {GetPacksResponseType, packsAPI} from \"../../api/packs-api\";\r\nimport {AppThunkType} from \"../../bll/store\";\r\n\r\nexport type SettingType = {settingSlider: {min: number; max : number}}\r\nexport type SearchedNameType = {searchedName: string}\r\n\r\n\r\ntype stateType = GetPacksResponseType & SettingType & SearchedNameType\r\n\r\nlet initState: stateType = {\r\n    cardPacks: [{\r\n        _id: '',\r\n        user_id: '',\r\n        name: '',\r\n        cardsCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        user_name: '',\r\n    }],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    settingSlider: {\r\n        min: 0,\r\n        max: 103\r\n    },\r\n    searchedName: '',\r\n}\r\n\r\nexport const cardPacksReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case 'cardPacks/GET_CARD_PACKS' : {\r\n            return {...state, ...action.data}\r\n        }\r\n        case 'cardPacks/SET_PAGE_COUNT' : {\r\n            return {...state, pageCount: action.payload}\r\n        }\r\n        case 'cardPacks/SET_MIN_CARDS_COUNT' : {\r\n            return {...state, minCardsCount: action.payload}\r\n        }\r\n        case 'cardPacks/SET_MAX_CARDS_COUNT' : {\r\n            return {...state, maxCardsCount: action.payload}\r\n        }\r\n        case 'cardPacks/SET_CURRENT_PAGE' : {\r\n            return {...state, page: action.payload}\r\n        }\r\n        case 'cardPacks/DELETE_PACK' : {\r\n            return {...state, cardPacks: state.cardPacks.filter(cardPack => cardPack._id !== action.payload)}\r\n        }\r\n        case 'cardPacks/SEARCH_NAME' : {\r\n            return {...state, searchedName: action.payload}\r\n        }\r\n        case 'cardPacks/SET_CARDS_COUNT' : {\r\n            return {...state, settingSlider: {min: action.payload.minSliderCards, max: action.payload.maxSliderCards}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setCardPacksDataAC = (data: GetPacksResponseType) => {\r\n    return {\r\n        type: 'cardPacks/GET_CARD_PACKS',\r\n        data\r\n    } as const\r\n}\r\n\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: 'cardPacks/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\nexport const setMinCardsCountAC = (minCardsCount: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_MIN_CARDS_COUNT',\r\n        payload: minCardsCount\r\n    } as const\r\n}\r\n\r\nexport const setMaxCardsCountAC = (maxCardsCount: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_MAX_CARDS_COUNT',\r\n        payload: maxCardsCount\r\n    } as const\r\n}\r\n\r\nexport const setCurrentPageAC = (page: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_CURRENT_PAGE',\r\n        payload: page\r\n    } as const\r\n}\r\n\r\nexport const setPageCountAC = (pageCount: number) => {\r\n    return {\r\n        type: 'cardPacks/SET_PAGE_COUNT',\r\n        payload: pageCount\r\n    } as const\r\n}\r\n\r\nexport const deletePackAC = (id: string) => {\r\n    return {\r\n        type: 'cardPacks/DELETE_PACK',\r\n        payload: id\r\n    } as const\r\n}\r\n\r\nexport const setSearchedNameAC = (searchName: string) => {\r\n    return {\r\n        type: 'cardPacks/SEARCH_NAME',\r\n        payload: searchName\r\n    } as const\r\n}\r\n\r\n\r\nexport const setCardsCountAC = (minSliderCards: number, maxSliderCards: number) => {\r\n\r\n    return {\r\n        type: 'cardPacks/SET_CARDS_COUNT',\r\n        payload: {minSliderCards, maxSliderCards}\r\n    } as const\r\n}\r\n\r\n\r\n\r\nexport const getPacksTC = (myId?: string): AppThunkType => async (dispatch, getState) => { //затипизировать везде\r\n    let {pageCount, page, searchedName, settingSlider} = getState().packs\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await packsAPI.getPacks(pageCount, page, myId, searchedName, settingSlider)\r\n        dispatch(setCardPacksDataAC(response.data))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n}\r\n\r\nexport const createPackTC = (name: string): AppThunkType => async (dispatch) => { //затипизировать везде\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await packsAPI.createPack(name)\r\n        dispatch(setCardPacksDataAC(response.data))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } finally {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n}\r\n\r\nexport const deletePackTC = (id: string): AppThunkType => async (dispatch) => { //затипизировать везде\r\n    try {\r\n        dispatch(setAppStatusAC(\"loading\"))\r\n        let response = await packsAPI.deletePack(id)\r\n        dispatch(setCardPacksDataAC(response.data))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    } finally {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n}\r\n\r\n\r\ntype AllACType =\r\n    ReturnType<typeof setCardPacksDataAC> |\r\n    ReturnType<typeof setAppStatusAC> |\r\n    ReturnType<typeof setErrorAC> |\r\n    ReturnType<typeof setPageCountAC> |\r\n    ReturnType<typeof setMinCardsCountAC> |\r\n    ReturnType<typeof setMaxCardsCountAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof deletePackAC> |\r\n    ReturnType<typeof setSearchedNameAC> |\r\n    ReturnType<typeof setCardsCountAC>\r\n\r\n\r\n","import {AnyAction, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {restorePassReducer} from \"../features/password/password-reducer\";\r\nimport {loginReducer} from \"../features/login/login-reducer\";\r\nimport {profileReducer} from \"../features/profile/profile-reducer\";\r\nimport {registrationReducer} from \"../features/registration/registration-reducer\";\r\nimport {appReducer} from \"../app/app-reducer\";\r\nimport {cardsReducer} from \"../features/cards/cards-reducer\";\r\nimport {cardPacksReducer} from \"../features/cardPacks/cardPacks-reducer\";\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    password: restorePassReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    app: appReducer,\r\n    cards: cardsReducer,\r\n    packs: cardPacksReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector\r\n\r\n//* Common thunk type\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AnyAction>\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React, {useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useAppSelector} from \"../../bll/store\";\r\nimport {CardPackType} from \"../../api/packs-api\";\r\nimport {deletePackTC, getPacksTC} from \"./cardPacks-reducer\";\r\nimport s from './table.module.css'\r\nimport btn from '../cards/card/Card.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/Routes\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\n\r\n\r\nexport const CardPacksTable = () => {\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    let titles = ['Name', 'Cards count', 'Last updated', 'Created by', 'Actions']\r\n\r\n    const packs = useAppSelector<CardPackType[]>(state => state.packs.cardPacks)\r\n    const pageCount = useAppSelector<number>(state => state.packs.pageCount)\r\n    const page = useAppSelector<number>(state => state.packs.page)\r\n    const myId = useAppSelector<string>(state => state.app._id)\r\n    const searchedName = useAppSelector<string>(state => state.packs.searchedName)\r\n    const settingSlider = useAppSelector<{ min: number; max: number }>(state => state.packs.settingSlider)\r\n\r\n\r\n    useEffect(() => {\r\n            dispatch(getPacksTC())\r\n    }, [pageCount, page, searchedName, settingSlider.min, settingSlider.max])\r\n\r\n    const onDeletePack = (id: string) => {\r\n        dispatch(deletePackTC(id))\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <table className={s.table}>\r\n                <thead>\r\n                <tr >\r\n                    {titles.map((title, index) => <th key={title + index} className={s.title}>{title}</th>)}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {packs.map(pack =>\r\n                        <tr className={s.dataRow} key={pack._id}>\r\n                            <td>\r\n                                <NavLink to={PATH.CARDS + `/${pack._id}`}>{pack.name}</NavLink>\r\n                            </td>\r\n                            <td>{pack.cardsCount}</td>\r\n                            <td>{pack.updated}</td>\r\n                            <td>{pack.user_name}</td>\r\n                            {pack.user_id === myId\r\n                                ? <td><SuperButton\r\n                                    className={btn.btn}\r\n                                    onClick={() => {onDeletePack(pack._id)}}\r\n                                    value={pack._id}>\r\n                                    delete\r\n                                </SuperButton>\r\n                                    <SuperButton className={btn.btn}>edit</SuperButton>\r\n                                    <SuperButton className={btn.btn}>learn</SuperButton></td>\r\n                                : <td><SuperButton className={btn.btn}>learn</SuperButton></td>}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from \"react\";\r\nimport s from './pagination.module.css';\r\nimport {useAppSelector} from \"../../../bll/store\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentPageAC} from \"../../../features/cardPacks/cardPacks-reducer\";\r\n\r\n\r\ntype PaginationPropsType = {\r\n    numberOfPagesInOnePortion: number\r\n}\r\n\r\n\r\nlet Pagination = ({numberOfPagesInOnePortion}: PaginationPropsType) => {\r\n\r\n    let dispatch = useDispatch()\r\n    let [portionNumber, setPortionNumber] = useState<number>(1)\r\n    let [inputPage, setInputPage] = useState<number | string>('')\r\n\r\n    let cardPacksTotalCount = useAppSelector<number>(state => state.packs.cardPacksTotalCount)\r\n    let pageCount = useAppSelector<number>(state => state.packs.pageCount)\r\n    let currentPage = useAppSelector<number>(state => state.packs.page)\r\n\r\n    let totalAmountOfPages = Math.ceil(cardPacksTotalCount / pageCount)\r\n    let pages = []\r\n    for (let i = 1; i <= totalAmountOfPages; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let numberOfPortions = Math.ceil(totalAmountOfPages / numberOfPagesInOnePortion)\r\n    let currentPortion = Math.ceil(currentPage / numberOfPagesInOnePortion)\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * numberOfPagesInOnePortion + 1\r\n    let rightPortionPageNumber = portionNumber * numberOfPagesInOnePortion\r\n\r\n    const onSetNewPage = (page: number) => {\r\n        dispatch(setCurrentPageAC(page))\r\n    }\r\n\r\n    const onSetNewPageFromInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let page = +e.currentTarget.value\r\n        setInputPage(page)\r\n    }\r\n\r\n    const onSetNewPageByEnterKey = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            dispatch(setCurrentPageAC(+inputPage))\r\n            setInputPage('')\r\n        }\r\n    }\r\n\r\n    const onSetNewPageByButton = (inputPage: number) => {\r\n        dispatch(setCurrentPageAC(inputPage))\r\n        setInputPage('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(currentPortion)\r\n    }, [currentPortion])\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            <div className={s.pages}>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>prev</button>}\r\n                {pages\r\n                    .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                    .map(page => {\r\n                        return <span key={page} className={currentPage === page ? s.selectedPage : s.pageNumber}\r\n                                     onClick={() => {\r\n                                         onSetNewPage(page)\r\n                                     }}>{page} </span>\r\n                    })}\r\n                {numberOfPortions > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>next</button>}\r\n            </div>\r\n            <input style={{\r\n                border: '1px solid',\r\n                width: '40px',\r\n                marginLeft: '20px',\r\n                marginRight: '5px'\r\n            }}\r\n                   onChange={onSetNewPageFromInput}\r\n                   value={inputPage!}\r\n                   placeholder={'page'}\r\n                   onKeyPress={onSetNewPageByEnterKey}\r\n            />\r\n            <button onClick={() => {\r\n                onSetNewPageByButton(+inputPage)\r\n            }}>＞\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, {useEffect} from 'react';\r\nimport {Box, Slider} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsCountAC} from \"../../../features/cardPacks/cardPacks-reducer\";\r\nimport {useAppSelector} from \"../../../bll/store\";\r\n\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    value1: number\r\n    value2: number\r\n    value3: number[]\r\n    setValue1: (value1: number) => void\r\n    setValue2: (value2: number) => void\r\n    setValue3: (value3: number[]) => void\r\n}\r\n\r\nconst minDistance = 1;\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        value1,\r\n        value2,\r\n        value3,\r\n        setValue1,\r\n        setValue2,\r\n        setValue3,\r\n    }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const minCardsCount = useAppSelector<number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useAppSelector<number>(state => state.packs.maxCardsCount)\r\n\r\n    const handleChange1 = (\r\n        event: Event,\r\n        newValue: number | number[],\r\n        activeThumb: number,\r\n    ) => {\r\n        if (!Array.isArray(newValue)) {\r\n            return;\r\n        }\r\n        if (activeThumb === 0) {\r\n            setValue3([Math.min(newValue[0], value2 - minDistance), value2]);\r\n            setValue1(Math.min(newValue[0], value2 - minDistance));\r\n        } else {\r\n            setValue3([value3[0], Math.max(newValue[1], value1 + minDistance)]);\r\n            setValue2(value3[1])\r\n        }\r\n    };\r\n\r\n     useEffect(() => {\r\n        let searchTimer = setTimeout(() => dispatch(setCardsCountAC(value1, value2)), 1500)\r\n        return () => clearTimeout(searchTimer)\r\n    }, [value1, value2])\r\n\r\n    return (\r\n        <Box sx={{height: 300}}>\r\n            <Slider\r\n                min={minCardsCount}\r\n                max={maxCardsCount}\r\n                step={1}\r\n                size={\"medium\"}\r\n                value={value3}\r\n                onChange={handleChange1}\r\n                //valueLabelDisplay=\"on\"\r\n                style={{color: '#C7A5A5'}}\r\n                disableSwap\r\n                orientation={\"vertical\"}\r\n\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange\r\n\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions = options.map((name, i) => {\r\n        return <option key={options[i] + ' ' + i} className={s.option} value={name}>{name}</option>;\r\n    })\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let currentValue = e.currentTarget.value\r\n        if(onChangeOption)\r\n        onChangeOption(+currentValue)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} className={s.select}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import s from './SelectPage.module.css'\r\nimport React from 'react'\r\nimport SuperSelect from \"../../elements/select/SuperSelect\";\r\n\r\ntype SelectPageProps = {\r\n    description?: string\r\n    value?: any\r\n    disabled?: boolean\r\n    onChangeOptions?: (option: number) => void\r\n}\r\n\r\nexport const SelectPage: React.FC<SelectPageProps> = ({\r\n                                                           onChangeOptions,\r\n                                                           value,\r\n                                                           disabled = false,\r\n                                                           description\r\n                                                       }) => {\r\n    const arrOptions = [10, 15, 20, 40]\r\n    return (\r\n        <div className={s.selectPage}>\r\n            <span></span>\r\n            <span>{description}</span>\r\n            <SuperSelect options={arrOptions}\r\n                         onChangeOption={onChangeOptions}\r\n                         value={value}\r\n                         disabled={disabled}/>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {CardPacksTable} from \"./table\";\r\nimport s from './cardPacksPage.module.css';\r\nimport Pagination from \"../../common/components/pagination/pagination\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    createPackTC,\r\n    getPacksTC,\r\n    setCardsCountAC,\r\n    setCurrentPageAC,\r\n    setPageCountAC,\r\n    setSearchedNameAC\r\n} from \"./cardPacks-reducer\";\r\nimport {useAppSelector} from \"../../bll/store\";\r\nimport style from '../../common/elements/doubleRange/DoubleRange.module.css'\r\nimport SuperDoubleRange from \"../../common/elements/doubleRange/DoubleRange\";\r\nimport {SelectPage} from \"../../common/components/selectPage/SelectPage\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\n\r\n\r\nexport const CardPacksPage = () => {\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    const settingSlider = useAppSelector<{ min: number; max: number }>(state => state.packs.settingSlider)\r\n    const myId = useAppSelector<string>(state => state.app._id)\r\n    const status = useAppSelector<RequestStatusType>(state => state.app.status)\r\n    const pageCount = useAppSelector<number>(state => state.packs.pageCount)\r\n    const minCardsCount = useAppSelector<number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useAppSelector<number>(state => state.packs.maxCardsCount)\r\n\r\n    const [newName, setNewName] = useState<string>('') //add new pack input state\r\n    const [searchName, setSearchName] = useState<string>('') //search pack input state\r\n    const [value1, setValue1] = useState(settingSlider.min) //slider's state\r\n    const [value2, setValue2] = useState(settingSlider.max) //slider's state\r\n    const [value3, setValue3] = React.useState<number[]>([value1, value2]); //slider's state\r\n\r\n\r\n    const onSetNewName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newName = e.currentTarget.value\r\n        setNewName(newName)\r\n    }\r\n\r\n    const onSetNewSearchName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const search = e.currentTarget.value\r\n        setSearchName(search)\r\n        }\r\n\r\n    const onSetPageCount = (value: number) => {\r\n        if(value){\r\n            dispatch(setPageCountAC(value))\r\n        }\r\n    }\r\n\r\n    const onClickNewName = (newName: string) => {\r\n        dispatch(createPackTC(newName))\r\n        setNewName('')\r\n    }\r\n\r\n    const onGetPacks = () => {\r\n        dispatch(setCardsCountAC(minCardsCount, maxCardsCount))\r\n        dispatch(setCurrentPageAC(1))\r\n        setValue1(minCardsCount)\r\n        setValue2(maxCardsCount)\r\n        setValue3([minCardsCount, maxCardsCount])\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    const onGetMyPacks = () => {\r\n        dispatch(setCardsCountAC(minCardsCount, maxCardsCount))\r\n        dispatch(setCurrentPageAC(1))\r\n        setValue1(minCardsCount)\r\n        setValue2(maxCardsCount)\r\n        setValue3([minCardsCount, maxCardsCount])\r\n        dispatch(getPacksTC(myId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let searchTimer = setTimeout(() => dispatch(setSearchedNameAC(searchName)), 1500)\r\n        console.log('сработал серч')\r\n        return () => clearTimeout(searchTimer)\r\n    }, [searchName])\r\n\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.filterContainer}>\r\n                <SuperButton onClick={onGetMyPacks}>My packs</SuperButton>\r\n                <SuperButton onClick={onGetPacks}>All packs</SuperButton>\r\n                <div className={style.doubleRangeBlock}>\r\n                    <span className={style.choose}>Choose the the amount of cards:</span>\r\n                    <span className={style.span}>{value2}</span>\r\n                    <SuperDoubleRange\r\n                        value1={value1}\r\n                        value2={value2}\r\n                        value3={value3}\r\n                        setValue1={setValue1}\r\n                        setValue2={setValue2}\r\n                        setValue3={setValue3}\r\n                    />\r\n                    <span className={style.span}>{value1 < value2 ? value1 : value2 - 1}</span>\r\n                </div>\r\n            </div>\r\n            <div className={s.packsContainer}>\r\n                <h1>Packs</h1>\r\n                <div className={s.addNewPackInput}><input style={{border: '1px solid #C7A5A5'}}\r\n                                                          onChange={onSetNewSearchName}\r\n                                                          value={searchName}\r\n                                                          placeholder={'search for pack names here'}/>\r\n                    <input style={{border: '1px solid #C7A5A5'}}\r\n                           onChange={onSetNewName}\r\n                           value={newName}\r\n                           placeholder={'insert title here'}/>\r\n\r\n                </div>\r\n                <div className={s.addNewPackButton}>\r\n                    <SuperButton onClick={() => {\r\n                        onClickNewName(newName)\r\n                    }}>add new pack</SuperButton>\r\n                </div>\r\n                <CardPacksTable/>\r\n                <div className={s.selectPagination}>\r\n                <SelectPage onChangeOptions={onSetPageCount}\r\n                            value={pageCount}\r\n                            disabled={status === \"loading\"}\r\n                            description={'packs on page'}/>\r\n                <Pagination numberOfPagesInOnePortion={6}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPacksPage;","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './passwordRestore.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {SuccessfulRequestMessage} from \"./successfulRequestMessage\";\r\nimport {sendCurrentEmailTC} from \"./password-reducer\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\n\r\n\r\nexport const PasswordRestore = () => {\r\n\r\n    let dispatch = useDispatch()\r\n    let requestStatus = useSelector<AppStateType, boolean>(state => state.password.isSuccessfulRequest)\r\n    let appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onSetCurrentEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value\r\n        setValue(value)\r\n    }\r\n    const onSendCurrentEmail = () => {\r\n        dispatch(sendCurrentEmailTC(value))\r\n    }\r\n\r\n    if (requestStatus) {\r\n        return <SuccessfulRequestMessage/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <div className={s.formContainer}>\r\n                <div>\r\n                    Failed to remember your password?\r\n                </div>\r\n                <div>\r\n                    <SuperInput type='email'\r\n                           name='currentEmail'\r\n                           placeholder='your e-mail'\r\n                           onChange={onSetCurrentEmail}\r\n                           style={{border: '1px solid black'}}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                            onClick={onSendCurrentEmail}\r\n                            disabled={appStatus === 'loading'}\r\n                    >Send\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    Remembered password? Try to <a className={s.svg} href={'/login'}>log in<svg viewBox=\"0 0 70 36\">\r\n                    <path d=\"M6.9739 30.8153H63.0244C65.5269 30.8152 75.5358 -3.68471 35.4998 2.81531C-16.1598\r\n                    11.2025 0.894099 33.9766 26.9922 34.3153C104.062 35.3153 54.5169 -6.68469 23.489 9.31527\" />\r\n                </svg></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {CardType} from \"../../../api/cards-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport s from \"./Card.module.css\";\r\nimport SuperButton from \"../../../common/elements/button/SuperButton\";\r\nimport {deleteCard} from \"../cards-reducer\";\r\n\r\n\r\ntype CardPropsType = {\r\n    card: CardType\r\n    packId: string\r\n}\r\n\r\nexport const Card: React.FC<CardPropsType> = ({card, packId}) => {\r\n    let dispatch = useDispatch()\r\n\r\n    const authUserId = useSelector<AppStateType, string>(state => state.app._id)\r\n\r\n    const handlerDeleteCard = (packId: string, cardId: string) => {\r\n        dispatch(deleteCard(cardId, packId))\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardContainer}>\r\n            <div className={s.col}>{card.question}</div>\r\n            <div>{card.answer}</div>\r\n            <div>update</div>\r\n            <div>grade</div>\r\n            <div>\r\n                {authUserId !== card.user_id\r\n                    ? null\r\n                    : <div>\r\n                        <SuperButton className={s.btn}>EDIT</SuperButton>\r\n                        <SuperButton className={s.btn}\r\n                                     onClick={() => handlerDeleteCard(packId, card._id)}\r\n                        >DELETE</SuperButton>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react'\r\nimport s from './Cards.module.css'\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCards, getCards, setPageCountAC, setSearchedQuestionAC} from \"./cards-reducer\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {CardType} from \"../../api/cards-api\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Card} from \"./card/Card\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport {SelectPage} from \"../../common/components/selectPage/SelectPage\";\r\nimport {setSearchedNameAC} from \"../cardPacks/cardPacks-reducer\";\r\n\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector<AppStateType, Array<CardType>>(state => state.cards.cards)\r\n    const page = useSelector<AppStateType, number>(state => state.cards.page)\r\n    const packName = useSelector<AppStateType, string>(state => state.cards.packName)\r\n    const userId = useSelector<AppStateType, string>(state => state.profile._id)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const pageCount = useSelector<AppStateType, number>(state => state.cards.pageCount)\r\n    const {packId} = useParams<'packId'>()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const [question, setQuestion] = useState<string>('')\r\n    const [answer, setAnswer] = useState<string>('')\r\n    const [searchQuestion, setSearchQuestion] = useState<string>('')\r\n\r\n\r\n    const onSetQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n    const onSetAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n    const handlerCreateCard = (packId: string, question: string, answer: string) => {\r\n        dispatch(createCards(packId!, question, answer))\r\n        setQuestion('')\r\n        setAnswer('')\r\n    }\r\n    const onSetPageCount = (value: number) => {\r\n        if (value) {\r\n            dispatch(setPageCountAC(value))\r\n        }\r\n    }\r\n\r\n    const onSetNewSearchQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuestion(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards(packId!))\r\n    }, [dispatch, packId, page, pageCount])\r\n\r\n    useEffect(() => {\r\n        let searchTimer = setTimeout(() => dispatch(setSearchedQuestionAC(searchQuestion)), 3000)\r\n        return () => clearTimeout(searchTimer)\r\n    }, [searchQuestion])\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.cardsContainer}>\r\n\r\n                <div className={s.backLink}>\r\n                    <div onClick={() => navigate('/packs-list')} className={s.arrowBack}>&larr;{packName}</div>\r\n                </div>\r\n\r\n\r\n                <div className={s.search}>\r\n                    <div className={s.addDataCard}><input onChange={onSetNewSearchQuestion}\r\n                                                          value={searchQuestion}\r\n                                                          placeholder={'search for pack names here'}/>\r\n                    </div>\r\n                    <div className={s.addCard}>\r\n                        <div>\r\n                            <input\r\n                                className={s.addDataCard}\r\n                                onChange={onSetQuestion}\r\n                                value={question}\r\n                                placeholder={'insert question'}\r\n                            />\r\n                            <input\r\n                                className={s.addDataCard}\r\n                                onChange={onSetAnswer}\r\n                                value={answer}\r\n                                placeholder={'insert answer'}\r\n                            />\r\n                        </div>\r\n                        <SuperButton onClick={() => handlerCreateCard(packId!, question, answer)}\r\n                                     disabled={status === \"loading\"}\r\n                        >ADD CARD</SuperButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.cardsTable}>\r\n                    {!cards.length\r\n                        ? <div className={s.noCards}>\r\n                            <span>There are no cards in this pack...</span>\r\n                        </div>\r\n                        :\r\n                        <div className={s.cards}>\r\n                            <div className={s.card}>\r\n                                <div className={s.cardsHeader}>\r\n                                    <div className={s.infoItem}>Question</div>\r\n                                    <div className={s.infoItem}>Answer</div>\r\n                                    <div><span>Last updated</span></div>\r\n                                    <div><span style={{marginLeft: '5px'}}>Grade</span></div>\r\n                                    <div>Actions</div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {cards.map(el =>\r\n                                    <div key={el._id}>\r\n                                        <Card card={el} packId={packId!}/>\r\n                                    </div>)}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <div className={s.selector}>\r\n                        <SelectPage onChangeOptions={onSetPageCount}\r\n                                    value={pageCount}\r\n                                    disabled={status === \"loading\"}\r\n                                    description={'cards on page'}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>)\r\n\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './error404.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../../app/Routes\";\r\n\r\n\r\nexport const Error404 = () => {\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div style={{background: 'black'}}>\r\n            <a href=\"\" target=\"_parent\">\r\n                <header className={s.topHeader}>\r\n                </header>\r\n                {/*dust particel*/}\r\n                <div>\r\n                    <div className={s.starSec}></div>\r\n                    <div className={s.starThird}></div>\r\n                    <div className={s.starFourth}></div>\r\n                    <div className={s.starFifth}></div>\r\n                </div>\r\n                {/* Dust particle end*/}\r\n                <div className={s.lampWrap}>\r\n                    <div className={s.lamp}>\r\n                        <div className={s.cable}></div>\r\n                        <div className={s.cover}></div>\r\n                        <div className={s.inCover}>\r\n                            <div className={s.bulb}></div>\r\n                        </div>\r\n                        <div className={s.light}></div>\r\n                    </div>\r\n                </div>\r\n                {/*END Lamp*/}\r\n                <section className={s.error}>\r\n                    {/*Content*/}\r\n                    <div className={s.errorContent}>\r\n                        <div className={s.errorMessage}>\r\n                            <h1 className={s.messageTitle}>Page Not Found</h1>\r\n                            <p className={s.messageText}>We're sorry, the page you were looking for isn't found here.\r\n                                The link you followed may either be broken or no longer exists. Please try again, or\r\n                                take a look at our.</p>\r\n                        </div>\r\n                        <div className={s.errorNav}>\r\n                            <a href=\"\" target=\"_parent\" className={s.eNavLink}></a>\r\n                        </div>\r\n                    </div>\r\n                    {/*END Content*/}\r\n                </section>\r\n            </a>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Navigate, Route, Routes, useLocation} from 'react-router-dom'\r\nimport {Login} from '../features/login/login'\r\nimport {Profile} from '../features/profile/profile'\r\nimport {NewPassword} from \"../features/password/newPassword\";\r\nimport Header from \"../common/components/header/header\";\r\nimport {ChangePassword} from \"../features/password/changePassword\";\r\nimport CardPacksPage from \"../features/cardPacks/cardPacksPage\";\r\nimport {PasswordRestore} from \"../features/password/passwordRestore\";\r\nimport {Cards} from \"../features/cards/Cards\";\r\nimport {Error404} from \"../common/components/error404/error404\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    CHANGE_PASSWORD: '/change-password',\r\n    NEW_PASSWORD_WITH_TOKEN: '/new-password/:token',\r\n    CARDS: '/cards',\r\n    TEST: '/test',\r\n    NOT_FOUND: '/404',\r\n    PACKS_LIST: '/packs-list',\r\n    RESTORE_PASSWORD: '/restore-password',\r\n}\r\n\r\nfunction CardDeckRoutes() {\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !(location.pathname === \"/404\") && <Header/>\r\n            }\r\n            <Routes>\r\n                {/*<Route path={'/cardDeck'} element={<Navigate to={PATH.LOGIN}/>}/>*/}\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                {/*<Route path={PATH.REGISTRATION} element={<Registration/>}/>*/}\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.CHANGE_PASSWORD} element={<ChangePassword/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} element={<PasswordRestore/>}/>\r\n           {/*     <Route path={PATH.NEW_PASSWORD} element={<NewPasswordWithoutToken/>}/>*/}\r\n                <Route path={PATH.NEW_PASSWORD_WITH_TOKEN} element={<NewPassword/>}/>\r\n                <Route path={PATH.PACKS_LIST} element={<CardPacksPage/>}/>\r\n                <Route path={PATH.CARDS + `/:packId`} element={<Cards/>}/>\r\n                {/*<Route path={PATH.TEST} element={<TestComps/>}/>*/}\r\n                <Route path={PATH.NOT_FOUND} element={<Error404/>}/>\r\n                <Route path={'*'} element={<Navigate to={PATH.NOT_FOUND}/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeckRoutes\r\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\r\nimport s from \"./registration.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {registryTC, setErrorAC} from \"./registration-reducer\";\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\nimport SuperButton from \"../../common/elements/button/SuperButton\";\r\nimport SuperInput from \"../../common/elements/input/SuperInput\";\r\nimport viewPassword from \"../../assets/password/viewPassword.png\";\r\nimport hiddenPassword from \"../../assets/password/hiddenPassword.png\";\r\n\r\nexport const Registration = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n    const [type, setType] = useState('password')\r\n    const [showPassword, setShowPassword] = useState<boolean>(true);\r\n    const [isPasswordEqual, setIsPasswordEqual] = useState<boolean>(false);\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n\r\n    const backError = useSelector<AppStateType, string>((state) => state.registration.backError)\r\n    const isRegistry = useSelector<AppStateType, boolean>((state) => state.registration.isRegistry)\r\n    const appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        const re = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        if( re.test(String(e.currentTarget.value).toLowerCase())) {\r\n            setEmailError('')\r\n        } else {\r\n            setEmailError('Invalid email address')\r\n        }\r\n    }\r\n    const handleInputPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let currentPasswordValue = e.currentTarget.value\r\n        setPassword(currentPasswordValue)\r\n        if(currentPasswordValue.length < 7)  {\r\n            setPasswordError('Password must be more than 6 character')\r\n        } else {\r\n            setPasswordError('')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n\r\n        if (confirm !== password) return\r\n        dispatch(registryTC(email, password))\r\n    }\r\n\r\n    const onCancelHandle = (e: FormEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(setErrorAC(''))\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirm('')\r\n    }\r\n\r\n    const handleShowPassword = () => {\r\n        if (showPassword) {\r\n            setType('text')\r\n        } else {\r\n            setType('password')\r\n        }\r\n\r\n        setShowPassword(!showPassword)\r\n    }\r\n    const handlePasswordsMatch = () => {\r\n        (confirm !== password) ? setIsPasswordEqual(true) : setIsPasswordEqual(false)\r\n    }\r\n\r\n    if (isRegistry) return <Navigate to='/login'/>\r\n\r\n    return <div className={s.mainContainer}>\r\n        <div className={s.formContainer}>\r\n            <div className={s.title}>\r\n                <h2>it-incubator</h2>\r\n                <h2>Sign Up</h2>\r\n            </div>\r\n            <div className={s.form}>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>{emailError ? <div style={{color: \"red\", display: \"inline\"}}>{emailError}</div> : 'Email'}{<br/>}\r\n                        <SuperInput type={\"email\"}\r\n                                    value={email}\r\n                                    id={\"email\"}\r\n                                    onChange={handleInputEmail}\r\n                                    style={{border: '1px solid black', marginTop: '5px'}}/>\r\n                    </div>\r\n\r\n                    <div className={s.password}>{passwordError ? <div style={{color: \"red\", display: \"inline\"}}>{passwordError}</div> : 'Password'}{<br/>}\r\n                        <SuperInput type={type}\r\n                                    value={password}\r\n                                    id={\"password\"}\r\n                                    onBlur={handlePasswordsMatch}\r\n                                    onChange={handleInputPassword}\r\n                                    style={{border: '1px solid black', marginTop: '5px'}}/>\r\n                        <img className={s.passwordControl}\r\n                             src={showPassword ? viewPassword : hiddenPassword}\r\n                             alt=\"eye\"\r\n                             onClick={handleShowPassword}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={s.password}>Confirm password{<br/>}\r\n                        <SuperInput type={type}\r\n                                    value={confirm}\r\n                                    id={confirm}\r\n                                    onBlur={handlePasswordsMatch}\r\n                                    onChange={(e) => {\r\n                                        setConfirm(e.currentTarget.value)\r\n                                    }}\r\n                                    style={{border: '1px solid black', marginTop: '5px'}}/>\r\n                        <img className={s.passwordControl}\r\n                             src={showPassword ? viewPassword : hiddenPassword}\r\n                             alt=\"eye\"\r\n                             onClick={handleShowPassword}\r\n                        />\r\n                    </div>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                                 className={s.btn}\r\n                                 onClick={onCancelHandle}>\r\n                        Cancel\r\n                    </SuperButton>\r\n                    <SuperButton name='sendCurrentEmail'\r\n                                 className={s.btn}\r\n                                 disabled={appStatus === 'loading'}>\r\n                        Registry\r\n                    </SuperButton>\r\n\r\n                    {(isPasswordEqual) ?\r\n                        <div style={{color: 'red', marginTop: '5px'}}>{'Passwords don\\'t match'}</div> : ''}\r\n                    {backError && <div style={{color: 'red', marginTop: '5px'}}>{backError}</div>}\r\n\r\n                </form>\r\n                <div>\r\n                    Have an account? Try to <a className={s.svg} href={'/login'}>log in<svg viewBox=\"0 0 70 36\">\r\n                    <path d=\"M6.9739 30.8153H63.0244C65.5269 30.8152 75.5358 -3.68471 35.4998 2.81531C-16.1598\r\n                    11.2025 0.894099 33.9766 26.9922 34.3153C104.062 35.3153 54.5169 -6.68469 23.489 9.31527\" />\r\n                </svg></a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from 'react-router-dom'\r\nimport {Error404} from '../common/components/error404/error404'\r\nimport {Login} from '../features/login/login'\r\nimport {Registration} from '../features/registration/registration'\r\nimport {PasswordRestore} from \"../features/password/passwordRestore\";\r\nimport {NewPassword} from \"../features/password/newPassword\";\r\nimport {Profile} from \"../features/profile/profile\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    RESTORE_PASSWORD: '/restore-password',\r\n    NEW_PASSWORD: '/new-password',\r\n    NEW_PASSWORD_WITH_TOKEN: '/new-password/:token',\r\n    NOT_FOUND: '/404',\r\n    PROFILE: '/profile',\r\n}\r\n\r\nfunction CardDeckRoutesUnauthorized() {\r\n\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/cardDeck'} element={<Navigate to={PATH.LOGIN}/>}/>\r\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} element={<PasswordRestore/>}/>\r\n              {/*  <Route path={PATH.NEW_PASSWORD} element={<NewPasswordWithoutToken/>}/>*/}\r\n                <Route path={PATH.NEW_PASSWORD_WITH_TOKEN} element={<NewPassword/>}/>\r\n                <Route path={PATH.NOT_FOUND} element={<Error404/>}/>\r\n                <Route path={'*'} element={<Navigate to={PATH.NOT_FOUND}/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeckRoutesUnauthorized\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport CardDeckRoutes from \"./Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../bll/store\";\r\nimport {initializeAppTC, RequestStatusType} from \"./app-reducer\";\r\nimport Preloader from \"../common/components/preloader/Preloader\";\r\nimport CardDeckRoutesUnauthorized from \"./unauthorizedRoutes\";\r\nimport SuperButton from \"../common/elements/button/SuperButton\";\r\nimport {logOutTC} from \"../features/login/login-reducer\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const location = useLocation()\r\n\r\n    const onLogOut = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (location.pathname !== '/restore-password') {\r\n            dispatch(initializeAppTC())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='appStyle'>\r\n            {status === 'loading' && <Preloader/>}\r\n            {isLoggedIn ? <CardDeckRoutes/> : <CardDeckRoutesUnauthorized/>}\r\n            {isLoggedIn && <div style={{position: \"absolute\", marginLeft: '90%', top: '20px'}}>\r\n                <SuperButton onClick={onLogOut}>Log out</SuperButton>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './bll/store';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__3i7gr\",\"formBlock\":\"login_formBlock__329ML\",\"content\":\"login_content__299gh\",\"formContent\":\"login_formContent__3stEt\",\"fromBlockTitle\":\"login_fromBlockTitle__35SY3\",\"formInputBox\":\"login_formInputBox__M9Q-X\",\"formInput\":\"login_formInput__RGnRm\",\"inputPasswordView\":\"login_inputPasswordView__2C-Vd\",\"errorStyle\":\"login_errorStyle__3eBN_\",\"checkbox\":\"login_checkbox__1AXFb\",\"formButtonBlock\":\"login_formButtonBlock__3QAyx\",\"btn\":\"login_btn__pNXwc\",\"textBlock\":\"login_textBlock__1Te15\",\"formBlockText\":\"login_formBlockText__LK_QT\",\"formLink\":\"login_formLink__1AuAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topHeader\":\"error404_topHeader__3gF2l\",\"starSec\":\"error404_starSec__29CQA\",\"animStar\":\"error404_animStar__1cRjr\",\"starThird\":\"error404_starThird__2B0QV\",\"starFourth\":\"error404_starFourth__37t04\",\"starFifth\":\"error404_starFifth__1139n\",\"clearfix\":\"error404_clearfix__Sedux\",\"error\":\"error404_error__gFxIk\",\"error__overlay\":\"error404_error__overlay__2OLyX\",\"errorContent\":\"error404_errorContent__1zj5T\",\"errorMessage\":\"error404_errorMessage__28Zid\",\"messageTitle\":\"error404_messageTitle__1D3WC\",\"messageText\":\"error404_messageText__1kzvD\",\"errorNav\":\"error404_errorNav__MTzVR\",\"eNavLink\":\"error404_eNavLink__c893M\",\"lamp\":\"error404_lamp__34Rum\",\"move\":\"error404_move__1WDWj\",\"cable\":\"error404_cable__Um8m4\",\"cover\":\"error404_cover__DesuJ\",\"inCover\":\"error404_inCover__ieuXT\",\"bulb\":\"error404_bulb__ZySuD\",\"light\":\"error404_light__1RiHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3J5Ne\",\"cardsContainer\":\"Cards_cardsContainer__1WLrN\",\"backLink\":\"Cards_backLink__1Nxfm\",\"arrowBack\":\"Cards_arrowBack__1NktC\",\"search\":\"Cards_search__1b6Xu\",\"addCard\":\"Cards_addCard__3sShf\",\"addDataCard\":\"Cards_addDataCard__Q-2oD\",\"cardsTable\":\"Cards_cardsTable__36hGc\",\"cards\":\"Cards_cards__TVWYJ\",\"cardsHeader\":\"Cards_cardsHeader__vqR_F\",\"noCards\":\"Cards_noCards__1PaG5\",\"card\":\"Cards_card__1q-0J\",\"infoItem\":\"Cards_infoItem__1t3Mu\",\"footer\":\"Cards_footer__3lv3I\",\"paginator\":\"Cards_paginator__2e4zG\",\"selector\":\"Cards_selector__2_mnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"passwordRestore_mainContainer__31mbj\",\"formContainer\":\"passwordRestore_formContainer__qnOW2\",\"redirectMessage\":\"passwordRestore_redirectMessage__2Pg05\",\"inputGroup\":\"passwordRestore_inputGroup__1hSIr\",\"input\":\"passwordRestore_input__1tHNQ\",\"svg\":\"passwordRestore_svg__3QvbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"registration_mainContainer__3Oqef\",\"formContainer\":\"registration_formContainer__152UY\",\"title\":\"registration_title__2OiUN\",\"form\":\"registration_form__1gOiY\",\"password\":\"registration_password__1jWJ4\",\"passwordControl\":\"registration_passwordControl__1JkAo\",\"btn\":\"registration_btn__UrGrX\",\"svg\":\"registration_svg__10jhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__2pWOu\",\"btn\":\"Card_btn__zOi9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cardPacksPage_container__3RdhZ\",\"filterContainer\":\"cardPacksPage_filterContainer__2qIUW\",\"packsContainer\":\"cardPacksPage_packsContainer__38Uvb\",\"addNewPackButton\":\"cardPacksPage_addNewPackButton__2cGe7\",\"addNewPackInput\":\"cardPacksPage_addNewPackInput__1gSJW\",\"selectPagination\":\"cardPacksPage_selectPagination__1sfhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__2R5rx\",\"profileBlock\":\"profile_profileBlock__11Gpr\",\"content\":\"profile_content__3Thck\",\"profileAvatar\":\"profile_profileAvatar__3ztJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3NRkj\",\"errorInput\":\"SuperInputText_errorInput__2mqc3\",\"error\":\"SuperInputText_error__1chgk\",\"inputField\":\"SuperInputText_inputField__3vBnW\",\"classname\":\"SuperInputText_classname__13X7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"table_mainContainer__3UACX\",\"table\":\"table_table__3kUmT\",\"title\":\"table_title__3NQPV\",\"dataRow\":\"table_dataRow__2JOGT\",\"nameColumn\":\"table_nameColumn__1fuXt\",\"deleteButton\":\"table_deleteButton__1F2tA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3NATh\",\"pageNumber\":\"pagination_pageNumber__toOgG\",\"selectedPage\":\"pagination_selectedPage__1bVu5\",\"pages\":\"pagination_pages__kz5HT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRangeBlock\":\"DoubleRange_doubleRangeBlock__1VGH-\",\"span\":\"DoubleRange_span__2_PTY\",\"choose\":\"DoubleRange_choose__47_XJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3sDl4\",\"red\":\"SuperButton_red__1QNxE\",\"button\":\"SuperButton_button__Vmel5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"header_body__1yIkh\",\"main\":\"header_main__31g8m\",\"menu\":\"header_menu__20WVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2OxsS\",\"loading\":\"Preloader_loading__3qZQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__24Yqu\",\"option\":\"SuperSelect_option__NAEsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"SelectPage_selectPage__3SojM\"};"],"sourceRoot":""}