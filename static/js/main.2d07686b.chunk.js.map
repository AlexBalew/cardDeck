{"version":3,"sources":["components/pages/error404/error404.module.css","components/input/SuperInputText.module.css","components/header/header.module.css","components/button/SuperButton.module.css","components/select/SuperSelect.module.css","components/checkbox/SuperCheckbox.module.css","components/editableSpan/SuperEditableSpan.module.css","components/radioButton/SuperRadio.module.css","components/preloader/Preloader.module.css","components/pages/test/testCompsPage.module.css","components/header/header.tsx","components/pages/error404/error404.tsx","components/pages/login/login.tsx","components/pages/profile/profile.tsx","components/pages/registration/registration.tsx","components/pages/password/passwordRestore.tsx","components/pages/password/newPassword.tsx","components/button/SuperButton.tsx","components/input/SuperInput.tsx","components/editableSpan/SuperEditableSpan.tsx","components/select/SuperSelect.tsx","components/radioButton/SuperRadio.tsx","components/checkbox/SuperCheckbox.tsx","components/preloader/Preloader Gif.gif","components/preloader/Preloader.tsx","components/pages/test/testCompsPage.tsx","components/routes/cardDeckRoutes.tsx","App.tsx","reportWebVitals.ts","reducers/firstReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","Header","className","s","body","main","type","menu","to","Error404","props","style","background","href","target","topHeader","starSec","starThird","starFourth","starFifth","lampWrap","lamp","cable","cover","inCover","bulb","light","error","errorContent","errorMessage","messageTitle","messageText","errorNav","eNavLink","Login","Profile","Registration","PasswordRestore","NewPassword","SuperButton","red","restProps","finalClassName","button","default","SuperInput","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","inputField","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","spanStyle","SuperSelect","options","onChangeOption","mappedOptions","map","name","i","option","currentValue","select","SuperRadio","onChangeCallback","classes","radioInput","checked","SuperCheckbox","onChangeChecked","checkbox","Preloader","preloader","src","Preloader3","alt","TestComps","PATH","CardDeckRoutes","path","element","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","appState","combineReducers","first","state","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d07686b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topHeader\":\"error404_topHeader__35PXg\",\"starSec\":\"error404_starSec__3fcxl\",\"animStar\":\"error404_animStar__325Km\",\"starThird\":\"error404_starThird__77bqJ\",\"starFourth\":\"error404_starFourth__1r4Zg\",\"starFifth\":\"error404_starFifth__1BlTb\",\"clearfix\":\"error404_clearfix__26FlN\",\"error\":\"error404_error__2cqYh\",\"error__overlay\":\"error404_error__overlay__1RT1k\",\"errorContent\":\"error404_errorContent__2m2fw\",\"errorMessage\":\"error404_errorMessage__1ojfP\",\"messageTitle\":\"error404_messageTitle__llhAE\",\"messageText\":\"error404_messageText__2fy-f\",\"errorNav\":\"error404_errorNav__SeU1H\",\"eNavLink\":\"error404_eNavLink__j32xz\",\"lamp\":\"error404_lamp__1ATQP\",\"move\":\"error404_move__1hahJ\",\"cable\":\"error404_cable__Mokzd\",\"cover\":\"error404_cover__64BhF\",\"inCover\":\"error404_inCover__Cp9Ko\",\"bulb\":\"error404_bulb__2Egzs\",\"light\":\"error404_light__3_qAH\",\"lampWrap\":\"error404_lampWrap__39nBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__O0u3b\",\"errorInput\":\"SuperInputText_errorInput__1ic5a\",\"error\":\"SuperInputText_error__3MC62\",\"inputField\":\"SuperInputText_inputField__2zHIQ\",\"classname\":\"SuperInputText_classname__OBY2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"header_body__5rUwA\",\"main\":\"header_main__3jcRr\",\"menu\":\"header_menu__vzb6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1ftlU\",\"red\":\"SuperButton_red__8YfxX\",\"button\":\"SuperButton_button__3DgQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__RU-_Q\",\"option\":\"SuperSelect_option__37Dq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__2p6nj\",\"checkbox\":\"SuperCheckbox_checkbox__3B0_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__rO81v\",\"buttonPos\":\"SuperEditableSpan_buttonPos__Bb0Gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioInput\":\"SuperRadio_radioInput__dTAfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1yV9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"testCompsPage_main__3aQlM\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.main}>\r\n                <input type=\"checkbox\"/>\r\n                <div>\r\n                    <span className=\"first\"></span>\r\n                    <span className=\"second\"></span>\r\n                    <span className=\"third\"></span>\r\n                </div>\r\n                <nav className={s.menu}>\r\n                    <NavLink to='/login'>login</NavLink>\r\n                    <NavLink to='/registration'>registration</NavLink>\r\n                    <NavLink to='/profile'>profile</NavLink>\r\n                    <NavLink to='/restore-password'>restore password</NavLink>\r\n                    <NavLink to='/new-password'>new password</NavLink>\r\n                    <NavLink to='/test'>test comps</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport s from './error404.module.css'\r\n\r\ntype Error404PropsType = {}\r\n\r\nexport const Error404 = (props: Error404PropsType) => {\r\n    return (\r\n        <div style={{background: 'black'}}>\r\n            <a href=\"\" target=\"_self\">\r\n                <header className={s.topHeader}>\r\n                </header>\r\n\r\n                {/*dust particel*/}\r\n\r\n                <div>\r\n                    <div className={s.starSec}></div>\r\n                    <div className={s.starThird}></div>\r\n                    <div className={s.starFourth}></div>\r\n                    <div className={s.starFifth}></div>\r\n                </div>\r\n\r\n                {/* Dust particle end*/}\r\n\r\n\r\n                <div className={s.lampWrap}>\r\n                    <div className={s.lamp}>\r\n                        <div className={s.cable}></div>\r\n                        <div className={s.cover}></div>\r\n                        <div className={s.inCover}>\r\n                            <div className={s.bulb}></div>\r\n                        </div>\r\n                        <div className={s.light}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*END Lamp*/}\r\n\r\n                <section className={s.error}>\r\n\r\n                    {/*Content*/}\r\n\r\n                    <div className={s.errorContent}>\r\n                        <div className={s.errorMessage}>\r\n                            <h1 className={s.messageTitle}>Page Not Found</h1>\r\n                            <p className={s.messageText}>We're sorry, the page you were looking for isn't found here.\r\n                                The link you followed may either be broken or no longer exists. Please try again, or\r\n                                take a look at our.</p>\r\n                        </div>\r\n                        <div className={s.errorNav}>\r\n                            <a href=\"\" target=\"_self\" className={s.eNavLink}></a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*END Content*/}\r\n\r\n                </section>\r\n\r\n            </a>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype LoginPropsType = {\r\n\r\n}\r\n\r\nexport const Login = (props: LoginPropsType) => {\r\n    return (\r\n        <div>\r\n            LOGIN\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nexport const Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n\r\n}\r\n\r\nexport const Registration = (props: RegistrationPropsType) => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype PasswordRestorePropsType = {\r\n\r\n}\r\n\r\nexport const PasswordRestore = (props: PasswordRestorePropsType) => {\r\n    return (\r\n        <div>\r\n            Restore password\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype NewPasswordPropsType = {\r\n\r\n}\r\n\r\nexport const NewPassword = (props: NewPasswordPropsType) => {\r\n    return (\r\n        <div>\r\n            Set new password\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.inputField} ${spanClassName}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInput\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInput from '../input/SuperInput'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.spanStyle} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInput\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: string[]\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions = options.map((name, i) => {\r\n        return <option key={options[i] + ' ' + i} className={s.option} value={name}>{name}</option>;\r\n    })\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let currentValue = e.currentTarget.value\r\n        onChangeOption(currentValue)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} className={s.select}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport classes from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options: string[]\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions = options.map((name, i) => {\r\n            return  <label key={options[i] + '-' + i}>\r\n                    <input\r\n                        className={classes.radioInput}\r\n                        type={'radio'}\r\n                        onChange={onChangeCallback}\r\n                        name='options'\r\n                        value={name}\r\n                        checked={name === value}\r\n                    />\r\n                    {}\r\n                </label>\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div >\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked  (сделано)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","export default __webpack_public_path__ + \"static/media/Preloader Gif.69136ec1.gif\";","import s from \"./Preloader.module.css\";\r\nimport Preloader3 from './Preloader Gif.gif';\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img className={s.preloader} src={Preloader3} alt={'preloader'}/>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport SuperButton from \"../../button/SuperButton\";\r\nimport SuperEditableSpan from \"../../editableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../select/SuperSelect\";\r\nimport SuperRadio from \"../../radioButton/SuperRadio\";\r\nimport SuperCheckbox from \"../../checkbox/SuperCheckbox\";\r\nimport SuperInput from \"../../input/SuperInput\";\r\nimport Preloader from \"../../preloader/Preloader\";\r\nimport s from './testCompsPage.module.css'\r\n\r\ntype TestCompsPropsType = {}\r\n\r\nexport const TestComps = (props: TestCompsPropsType) => {\r\n    return (<div className={s.main}>\r\n            <div>\r\n                <SuperButton>Hello</SuperButton>\r\n            </div>\r\n            <div>\r\n                <SuperEditableSpan spanProps={{children: 'double click for the text changing'}}/>\r\n            </div>\r\n            <div>\r\n                <SuperSelect options={['1', '2', '3']} onChangeOption={() => {\r\n                }}/>\r\n            </div>\r\n            <div>\r\n                <SuperRadio options={['1', '2', '3']} onChangeOption={() => {\r\n                }}/>\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n            <div>\r\n                <SuperInput/>\r\n            </div>\r\n            <div>\r\n                <Preloader/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Navigate, Route, Routes} from 'react-router-dom'\r\nimport { Error404 } from '../pages/error404/error404'\r\nimport {Login} from '../pages/login/login'\r\nimport { Profile } from '../pages/profile/profile'\r\nimport { Registration } from '../pages/registration/registration'\r\nimport {PasswordRestore} from \"../pages/password/passwordRestore\";\r\nimport {NewPassword} from \"../pages/password/newPassword\";\r\nimport {TestComps} from \"../pages/test/testCompsPage\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RESTORE_PASSWORD: '/restore-password',\r\n    NEW_PASSWORD: '/new-password',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction CardDeckRoutes() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<Navigate to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} element={<PasswordRestore/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} element={<NewPassword/>}/>\r\n                <Route path={PATH.TEST} element={<TestComps/>}/>\r\n                <Route path={'*'} element={<Error404/>}/>\r\n            </Routes>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeckRoutes\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Header from './components/header/header';\nimport CardDeckRoutes from './components/routes/cardDeckRoutes';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className='appStyle'>\n        <HashRouter>\n            <Header/>\n            <CardDeckRoutes/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type stateType = {}\r\n\r\nlet initState: stateType = {}\r\n\r\n\r\nexport const firstReducer = (state = initState, action: AllACType): stateType => {\r\n    switch (action.type) {\r\n        case '' : {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype AllACType = firstACType\r\n\r\ntype firstACType = ReturnType<typeof firstAC>\r\n\r\nexport const firstAC = () => {\r\n    return {\r\n        type: ''\r\n    } as const\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {firstReducer} from \"../reducers/firstReducer\";\r\n\r\nconst appState = combineReducers({\r\n    first: firstReducer\r\n})\r\n\r\nexport let store = createStore(appState, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport { store } from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}